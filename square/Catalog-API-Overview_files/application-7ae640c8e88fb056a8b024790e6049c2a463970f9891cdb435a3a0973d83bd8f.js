function initializeChartPopovers(){$(".popover_icons").each(function(){var e=$(this);e.popover({content:e.data("content"),trigger:"focus",placement:"bottom"})})}function plainTextPasteListener(e){e.preventDefault();var t;e.clipboardData&&e.clipboardData.getData?(t=e.clipboardData.getData("text/plain"),insertTextAtCursor(t)):window.clipboardData&&window.clipboardData.getData&&(t=window.clipboardData.getData("Text"),insertTextAtCursor(t))}function insertTextAtCursor(e){var t,a;window.getSelection?(t=window.getSelection(),t.getRangeAt&&t.rangeCount&&(a=t.getRangeAt(0),a.deleteContents(),a.insertNode(document.createTextNode(e)))):document.selection&&document.selection.createRange&&(document.selection.createRange().text=e)}!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function a(e){var t=!!e&&"length"in e&&e.length,a=me.type(e);return"function"!==a&&!me.isWindow(e)&&("array"===a||0===t||"number"==typeof t&&t>0&&t-1 in e)}function i(e,t,a){if(me.isFunction(t))return me.grep(e,function(e,i){return!!t.call(e,i,e)!==a});if(t.nodeType)return me.grep(e,function(e){return e===t!==a});if("string"==typeof t){if(ke.test(t))return me.filter(t,e,a);t=me.filter(t,e)}return me.grep(e,function(e){return me.inArray(e,t)>-1!==a})}function n(e,t){do{e=e[t]}while(e&&1!==e.nodeType);return e}function r(e){var t={};return me.each(e.match(Ee)||[],function(e,a){t[a]=!0}),t}function s(){ie.addEventListener?(ie.removeEventListener("DOMContentLoaded",o),e.removeEventListener("load",o)):(ie.detachEvent("onreadystatechange",o),e.detachEvent("onload",o))}function o(){(ie.addEventListener||"load"===e.event.type||"complete"===ie.readyState)&&(s(),me.ready())}function c(e,t,a){if(a===undefined&&1===e.nodeType){var i="data-"+t.replace(Re,"-$1").toLowerCase();if("string"==typeof(a=e.getAttribute(i))){try{a="true"===a||"false"!==a&&("null"===a?null:+a+""===a?+a:Ie.test(a)?me.parseJSON(a):a)}catch(e){}me.data(e,t,a)}else a=undefined}return a}function l(e){var t;for(t in e)if(("data"!==t||!me.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}function d(e,t,a,i){if(Ae(e)){var n,r,s=me.expando,o=e.nodeType,c=o?me.cache:e,l=o?e[s]:e[s]&&s;if(l&&c[l]&&(i||c[l].data)||a!==undefined||"string"!=typeof t)return l||(l=o?e[s]=ae.pop()||me.guid++:s),c[l]||(c[l]=o?{}:{toJSON:me.noop}),"object"!=typeof t&&"function"!=typeof t||(i?c[l]=me.extend(c[l],t):c[l].data=me.extend(c[l].data,t)),r=c[l],i||(r.data||(r.data={}),r=r.data),a!==undefined&&(r[me.camelCase(t)]=a),"string"==typeof t?null==(n=r[t])&&(n=r[me.camelCase(t)]):n=r,n}}function p(e,t,a){if(Ae(e)){var i,n,r=e.nodeType,s=r?me.cache:e,o=r?e[me.expando]:me.expando;if(s[o]){if(t&&(i=a?s[o]:s[o].data)){me.isArray(t)?t=t.concat(me.map(t,me.camelCase)):t in i?t=[t]:(t=me.camelCase(t),t=t in i?[t]:t.split(" ")),n=t.length;for(;n--;)delete i[t[n]];if(a?!l(i):!me.isEmptyObject(i))return}(a||(delete s[o].data,l(s[o])))&&(r?me.cleanData([e],!0):pe.deleteExpando||s!=s.window?delete s[o]:s[o]=undefined)}}}function u(e,t,a,i){var n,r=1,s=20,o=i?function(){return i.cur()}:function(){return me.css(e,t,"")},c=o(),l=a&&a[3]||(me.cssNumber[t]?"":"px"),d=(me.cssNumber[t]||"px"!==l&&+c)&&Ne.exec(me.css(e,t));if(d&&d[3]!==l){l=l||d[3],a=a||[],d=+c||1;do{r=r||".5",d/=r,me.style(e,t,d+l)}while(r!==(r=o()/c)&&1!==r&&--s)}return a&&(d=+d||+c||0,n=a[1]?d+(a[1]+1)*a[2]:+a[2],i&&(i.unit=l,i.start=d,i.end=n)),n}function m(e){var t=Ue.split("|"),a=e.createDocumentFragment();if(a.createElement)for(;t.length;)a.createElement(t.pop());return a}function g(e,t){var a,i,n=0,r="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):undefined;if(!r)for(r=[],a=e.childNodes||e;null!=(i=a[n]);n++)!t||me.nodeName(i,t)?r.push(i):me.merge(r,g(i,t));return t===undefined||t&&me.nodeName(e,t)?me.merge([e],r):r}function f(e,t){for(var a,i=0;null!=(a=e[i]);i++)me._data(a,"globalEval",!t||me._data(t[i],"globalEval"))}function y(e){Me.test(e.type)&&(e.defaultChecked=e.checked)}function h(e,t,a,i,n){for(var r,s,o,c,l,d,p,u=e.length,h=m(t),v=[],b=0;b<u;b++)if((s=e[b])||0===s)if("object"===me.type(s))me.merge(v,s.nodeType?[s]:s);else if(We.test(s)){for(c=c||h.appendChild(t.createElement("div")),l=(Fe.exec(s)||["",""])[1].toLowerCase(),p=He[l]||He._default,c.innerHTML=p[1]+me.htmlPrefilter(s)+p[2],r=p[0];r--;)c=c.lastChild;if(!pe.leadingWhitespace&&Be.test(s)&&v.push(t.createTextNode(Be.exec(s)[0])),!pe.tbody)for(s="table"!==l||Ve.test(s)?"<table>"!==p[1]||Ve.test(s)?0:c:c.firstChild,r=s&&s.childNodes.length;r--;)me.nodeName(d=s.childNodes[r],"tbody")&&!d.childNodes.length&&s.removeChild(d);for(me.merge(v,c.childNodes),c.textContent="";c.firstChild;)c.removeChild(c.firstChild);c=h.lastChild}else v.push(t.createTextNode(s));for(c&&h.removeChild(c),pe.appendChecked||me.grep(g(v,"input"),y),b=0;s=v[b++];)if(i&&me.inArray(s,i)>-1)n&&n.push(s);else if(o=me.contains(s.ownerDocument,s),c=g(h.appendChild(s),"script"),o&&f(c),a)for(r=0;s=c[r++];)$e.test(s.type||"")&&a.push(s);return c=null,h}function v(){return!0}function b(){return!1}function _(){try{return ie.activeElement}catch(e){}}function q(e,t,a,i,n,r){var s,o;if("object"==typeof t){"string"!=typeof a&&(i=i||a,a=undefined);for(o in t)q(e,o,a,i,t[o],r);return e}if(null==i&&null==n?(n=a,i=a=undefined):null==n&&("string"==typeof a?(n=i,i=undefined):(n=i,i=a,a=undefined)),!1===n)n=b;else if(!n)return e;return 1===r&&(s=n,n=function(e){return me().off(e),s.apply(this,arguments)},n.guid=s.guid||(s.guid=me.guid++)),e.each(function(){me.event.add(this,t,n,i,a)})}function w(e,t){return me.nodeName(e,"table")&&me.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function k(e){return e.type=(null!==me.find.attr(e,"type"))+"/"+e.type,e}function x(e){var t=it.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function j(e,t){if(1===t.nodeType&&me.hasData(e)){var a,i,n,r=me._data(e),s=me._data(t,r),o=r.events;if(o){delete s.handle,s.events={};for(a in o)for(i=0,n=o[a].length;i<n;i++)me.event.add(t,a,o[a][i])}s.data&&(s.data=me.extend({},s.data))}}function T(e,t){var a,i,n;if(1===t.nodeType){if(a=t.nodeName.toLowerCase(),!pe.noCloneEvent&&t[me.expando]){n=me._data(t);for(i in n.events)me.removeEvent(t,i,n.handle);t.removeAttribute(me.expando)}"script"===a&&t.text!==e.text?(k(t).text=e.text,x(t)):"object"===a?(t.parentNode&&(t.outerHTML=e.outerHTML),pe.html5Clone&&e.innerHTML&&!me.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===a&&Me.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===a?t.defaultSelected=t.selected=e.defaultSelected:"input"!==a&&"textarea"!==a||(t.defaultValue=e.defaultValue)}}function z(e,t,a,i){t=re.apply([],t);var n,r,s,o,c,l,d=0,p=e.length,u=p-1,m=t[0],f=me.isFunction(m);if(f||p>1&&"string"==typeof m&&!pe.checkClone&&at.test(m))return e.each(function(n){var r=e.eq(n);f&&(t[0]=m.call(this,n,r.html())),z(r,t,a,i)});if(p&&(l=h(t,e[0].ownerDocument,!1,e,i),n=l.firstChild,1===l.childNodes.length&&(l=n),n||i)){for(o=me.map(g(l,"script"),k),s=o.length;d<p;d++)r=l,d!==u&&(r=me.clone(r,!0,!0),s&&me.merge(o,g(r,"script"))),a.call(e[d],r,d);if(s)for(c=o[o.length-1].ownerDocument,me.map(o,x),d=0;d<s;d++)r=o[d],$e.test(r.type||"")&&!me._data(r,"globalEval")&&me.contains(c,r)&&(r.src?me._evalUrl&&me._evalUrl(r.src):me.globalEval((r.text||r.textContent||r.innerHTML||"").replace(nt,"")));l=n=null}return e}function E(e,t,a){for(var i,n=t?me.filter(t,e):e,r=0;null!=(i=n[r]);r++)a||1!==i.nodeType||me.cleanData(g(i)),i.parentNode&&(a&&me.contains(i.ownerDocument,i)&&f(g(i,"script")),i.parentNode.removeChild(i));return e}function C(e,t){var a=me(t.createElement(e)).appendTo(t.body),i=me.css(a[0],"display");return a.detach(),i}function S(e){var t=ie,a=ct[e];return a||(a=C(e,t),"none"!==a&&a||(ot=(ot||me("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=(ot[0].contentWindow||ot[0].contentDocument).document,t.write(),t.close(),a=C(e,t),ot.detach()),ct[e]=a),a}function A(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function I(e){if(e in kt)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),a=wt.length;a--;)if((e=wt[a]+t)in kt)return e}function R(e,t){for(var a,i,n,r=[],s=0,o=e.length;s<o;s++)i=e[s],i.style&&(r[s]=me._data(i,"olddisplay"),a=i.style.display,t?(r[s]||"none"!==a||(i.style.display=""),""===i.style.display&&Oe(i)&&(r[s]=me._data(i,"olddisplay",S(i.nodeName)))):(n=Oe(i),(a&&"none"!==a||!n)&&me._data(i,"olddisplay",n?a:me.css(i,"display"))));for(s=0;s<o;s++)i=e[s],i.style&&(t&&"none"!==i.style.display&&""!==i.style.display||(i.style.display=t?r[s]||"":"none"));return e}function P(e,t,a){var i=bt.exec(t);return i?Math.max(0,i[1]-(a||0))+(i[2]||"px"):t}function N(e,t,a,i,n){for(var r=a===(i?"border":"content")?4:"width"===t?1:0,s=0;r<4;r+=2)"margin"===a&&(s+=me.css(e,a+De[r],!0,n)),i?("content"===a&&(s-=me.css(e,"padding"+De[r],!0,n)),"margin"!==a&&(s-=me.css(e,"border"+De[r]+"Width",!0,n))):(s+=me.css(e,"padding"+De[r],!0,n),"padding"!==a&&(s+=me.css(e,"border"+De[r]+"Width",!0,n)));return s}function D(e,t,a){var i=!0,n="width"===t?e.offsetWidth:e.offsetHeight,r=mt(e),s=pe.boxSizing&&"border-box"===me.css(e,"boxSizing",!1,r);if(n<=0||null==n){if(n=gt(e,t,r),(n<0||null==n)&&(n=e.style[t]),dt.test(n))return n;i=s&&(pe.boxSizingReliable()||n===e.style[t]),n=parseFloat(n)||0}return n+N(e,t,a||(s?"border":"content"),i,r)+"px"}function O(e,t,a,i,n){return new O.prototype.init(e,t,a,i,n)}function L(){return e.setTimeout(function(){xt=undefined}),xt=me.now()}function M(e,t){var a,i={height:e},n=0;for(t=t?1:0;n<4;n+=2-t)a=De[n],i["margin"+a]=i["padding"+a]=e;return t&&(i.opacity=i.width=e),i}function F(e,t,a){for(var i,n=(U.tweeners[t]||[]).concat(U.tweeners["*"]),r=0,s=n.length;r<s;r++)if(i=n[r].call(a,t,e))return i}function $(e,t,a){var i,n,r,s,o,c,l,d=this,p={},u=e.style,m=e.nodeType&&Oe(e),g=me._data(e,"fxshow");a.queue||(o=me._queueHooks(e,"fx"),null==o.unqueued&&(o.unqueued=0,c=o.empty.fire,o.empty.fire=function(){o.unqueued||c()}),o.unqueued++,d.always(function(){d.always(function(){o.unqueued--,me.queue(e,"fx").length||o.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(a.overflow=[u.overflow,u.overflowX,u.overflowY],l=me.css(e,"display"),"inline"===("none"===l?me._data(e,"olddisplay")||S(e.nodeName):l)&&"none"===me.css(e,"float")&&(pe.inlineBlockNeedsLayout&&"inline"!==S(e.nodeName)?u.zoom=1:u.display="inline-block")),a.overflow&&(u.overflow="hidden",pe.shrinkWrapBlocks()||d.always(function(){u.overflow=a.overflow[0],u.overflowX=a.overflow[1],u.overflowY=a.overflow[2]}));for(i in t)if(n=t[i],Tt.exec(n)){if(delete t[i],r=r||"toggle"===n,n===(m?"hide":"show")){if("show"!==n||!g||g[i]===undefined)continue;m=!0}p[i]=g&&g[i]||me.style(e,i)}else l=undefined;if(me.isEmptyObject(p))"inline"===("none"===l?S(e.nodeName):l)&&(u.display=l);else{g?"hidden"in g&&(m=g.hidden):g=me._data(e,"fxshow",{}),r&&(g.hidden=!m),m?me(e).show():d.done(function(){me(e).hide()}),d.done(function(){var t;me._removeData(e,"fxshow");for(t in p)me.style(e,t,p[t])});for(i in p)s=F(m?g[i]:0,i,d),i in g||(g[i]=s.start,m&&(s.end=s.start,s.start="width"===i||"height"===i?1:0))}}function B(e,t){var a,i,n,r,s;for(a in e)if(i=me.camelCase(a),n=t[i],r=e[a],me.isArray(r)&&(n=r[1],r=e[a]=r[0]),a!==i&&(e[i]=r,delete e[a]),(s=me.cssHooks[i])&&"expand"in s){r=s.expand(r),delete e[i];for(a in r)a in e||(e[a]=r[a],t[a]=n)}else t[i]=n}function U(e,t,a){var i,n,r=0,s=U.prefilters.length,o=me.Deferred().always(function(){delete c.elem}),c=function(){if(n)return!1;for(var t=xt||L(),a=Math.max(0,l.startTime+l.duration-t),i=a/l.duration||0,r=1-i,s=0,c=l.tweens.length;s<c;s++)l.tweens[s].run(r);return o.notifyWith(e,[l,r,a]),r<1&&c?a:(o.resolveWith(e,[l]),!1)},l=o.promise({elem:e,props:me.extend({},t),opts:me.extend(!0,{specialEasing:{},easing:me.easing._default},a),originalProperties:t,originalOptions:a,startTime:xt||L(),duration:a.duration,tweens:[],createTween:function(t,a){var i=me.Tween(e,l.opts,t,a,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(i),i},stop:function(t){var a=0,i=t?l.tweens.length:0;if(n)return this;for(n=!0;a<i;a++)l.tweens[a].run(1);return t?(o.notifyWith(e,[l,1,0]),o.resolveWith(e,[l,t])):o.rejectWith(e,[l,t]),this}}),d=l.props;for(B(d,l.opts.specialEasing);r<s;r++)if(i=U.prefilters[r].call(l,e,d,l.opts))return me.isFunction(i.stop)&&(me._queueHooks(l.elem,l.opts.queue).stop=me.proxy(i.stop,i)),i;return me.map(d,F,l),me.isFunction(l.opts.start)&&l.opts.start.call(e,l),me.fx.timer(me.extend(c,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function H(e){return me.attr(e,"class")||""}function W(e){return function(t,a){"string"!=typeof t&&(a=t,t="*");var i,n=0,r=t.toLowerCase().match(Ee)||[];if(me.isFunction(a))for(;i=r[n++];)"+"===i.charAt(0)?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(a)):(e[i]=e[i]||[]).push(a)}}function V(e,t,a,i){function n(o){var c;return r[o]=!0,me.each(e[o]||[],function(e,o){var l=o(t,a,i);return"string"!=typeof l||s||r[l]?s?!(c=l):void 0:(t.dataTypes.unshift(l),n(l),!1)}),c}var r={},s=e===Xt;return n(t.dataTypes[0])||!r["*"]&&n("*")}function G(e,t){var a,i,n=me.ajaxSettings.flatOptions||{};for(i in t)t[i]!==undefined&&((n[i]?e:a||(a={}))[i]=t[i]);return a&&me.extend(!0,e,a),e}function K(e,t,a){for(var i,n,r,s,o=e.contents,c=e.dataTypes;"*"===c[0];)c.shift(),n===undefined&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(s in o)if(o[s]&&o[s].test(n)){c.unshift(s);break}if(c[0]in a)r=c[0];else{for(s in a){if(!c[0]||e.converters[s+" "+c[0]]){r=s;break}i||(i=s)}r=r||i}if(r)return r!==c[0]&&c.unshift(r),a[r]}function Q(e,t,a,i){var n,r,s,o,c,l={},d=e.dataTypes.slice();if(d[1])for(s in e.converters)l[s.toLowerCase()]=e.converters[s];for(r=d.shift();r;)if(e.responseFields[r]&&(a[e.responseFields[r]]=t),!c&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),c=r,r=d.shift())if("*"===r)r=c;else if("*"!==c&&c!==r){if(!(s=l[c+" "+r]||l["* "+r]))for(n in l)if(o=n.split(" "),o[1]===r&&(s=l[c+" "+o[0]]||l["* "+o[0]])){!0===s?s=l[n]:!0!==l[n]&&(r=o[0],d.unshift(o[1]));break}if(!0!==s)if(s&&e["throws"])t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+c+" to "+r}}}return{state:"success",data:t}}function Y(e){return e.style&&e.style.display||me.css(e,"display")}function X(e){if(!me.contains(e.ownerDocument||ie,e))return!0;for(;e&&1===e.nodeType;){if("none"===Y(e)||"hidden"===e.type)return!0;e=e.parentNode}return!1}function Z(e,t,a,i){var n;if(me.isArray(t))me.each(t,function(t,n){a||aa.test(e)?i(e,n):Z(e+"["+("object"==typeof n&&null!=n?t:"")+"]",n,a,i)});else if(a||"object"!==me.type(t))i(e,t);else for(n in t)Z(e+"["+n+"]",t[n],a,i)}function J(){try{return new e.XMLHttpRequest}catch(e){}}function ee(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(e){}}function te(e){return me.isWindow(e)?e:9===e.nodeType&&(e.defaultView||e.parentWindow)}var ae=[],ie=e.document,ne=ae.slice,re=ae.concat,se=ae.push,oe=ae.indexOf,ce={},le=ce.toString,de=ce.hasOwnProperty,pe={},ue="1.12.4",me=function(e,t){return new me.fn.init(e,t)},ge=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,fe=/^-ms-/,ye=/-([\da-z])/gi,he=function(e,t){return t.toUpperCase()};me.fn=me.prototype={jquery:ue,constructor:me,selector:"",length:0,toArray:function(){return ne.call(this)},get:function(e){return null!=e?e<0?this[e+this.length]:this[e]:ne.call(this)},pushStack:function(e){var t=me.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e){return me.each(this,e)},map:function(e){return this.pushStack(me.map(this,function(t,a){return e.call(t,a,t)}))},slice:function(){return this.pushStack(ne.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,a=+e+(e<0?t:0);return this.pushStack(a>=0&&a<t?[this[a]]:[])},end:function(){return this.prevObject||this.constructor()},push:se,sort:ae.sort,splice:ae.splice},me.extend=me.fn.extend=function(){var e,t,a,i,n,r,s=arguments[0]||{},o=1,c=arguments.length,l=!1;for("boolean"==typeof s&&(l=s,s=arguments[o]||{},o++),"object"==typeof s||me.isFunction(s)||(s={}),o===c&&(s=this,o--);o<c;o++)if(null!=(n=arguments[o]))for(i in n)e=s[i],a=n[i],s!==a&&(l&&a&&(me.isPlainObject(a)||(t=me.isArray(a)))?(t?(t=!1,r=e&&me.isArray(e)?e:[]):r=e&&me.isPlainObject(e)?e:{},s[i]=me.extend(l,r,a)):a!==undefined&&(s[i]=a));return s},me.extend({expando:"jQuery"+(ue+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===me.type(e)},isArray:Array.isArray||function(e){return"array"===me.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){var t=e&&e.toString();return!me.isArray(e)&&t-parseFloat(t)+1>=0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},isPlainObject:function(e){var t;if(!e||"object"!==me.type(e)||e.nodeType||me.isWindow(e))return!1;try{if(e.constructor&&!de.call(e,"constructor")&&!de.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(e){return!1}if(!pe.ownFirst)for(t in e)return de.call(e,t);for(t in e);return t===undefined||de.call(e,t)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?ce[le.call(e)]||"object":typeof e},globalEval:function(t){t&&me.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(fe,"ms-").replace(ye,he)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var i,n=0;if(a(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},trim:function(e){return null==e?"":(e+"").replace(ge,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(a(Object(e))?me.merge(i,"string"==typeof e?[e]:e):se.call(i,e)),i},inArray:function(e,t,a){var i;if(t){if(oe)return oe.call(t,e,a);for(i=t.length,a=a?a<0?Math.max(0,i+a):a:0;a<i;a++)if(a in t&&t[a]===e)return a}return-1},merge:function(e,t){for(var a=+t.length,i=0,n=e.length;i<a;)e[n++]=t[i++];if(a!==a)for(;t[i]!==undefined;)e[n++]=t[i++];return e.length=n,e},grep:function(e,t,a){for(var i=[],n=0,r=e.length,s=!a;n<r;n++)!t(e[n],n)!==s&&i.push(e[n]);return i},map:function(e,t,i){var n,r,s=0,o=[];if(a(e))for(n=e.length;s<n;s++)null!=(r=t(e[s],s,i))&&o.push(r);else for(s in e)null!=(r=t(e[s],s,i))&&o.push(r);return re.apply([],o)},guid:1,proxy:function(e,t){var a,i,n;return"string"==typeof t&&(n=e[t],t=e,e=n),me.isFunction(e)?(a=ne.call(arguments,2),i=function(){return e.apply(t||this,a.concat(ne.call(arguments)))},i.guid=e.guid=e.guid||me.guid++,i):undefined},now:function(){return+new Date},support:pe}),"function"==typeof Symbol&&(me.fn[Symbol.iterator]=ae[Symbol.iterator]),me.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){ce["[object "+t+"]"]=t.toLowerCase()});var ve=function(e){function t(e,t,a,i){var n,r,s,o,c,l,p,m,g=t&&t.ownerDocument,f=t?t.nodeType:9;if(a=a||[],"string"!=typeof e||!e||1!==f&&9!==f&&11!==f)return a;if(!i&&((t?t.ownerDocument||t:F)!==I&&A(t),t=t||I,P)){if(11!==f&&(l=he.exec(e)))if(n=l[1]){if(9===f){if(!(s=t.getElementById(n)))return a;if(s.id===n)return a.push(s),a}else if(g&&(s=g.getElementById(n))&&L(t,s)&&s.id===n)return a.push(s),a}else{if(l[2])return Z.apply(a,t.getElementsByTagName(e)),a;if((n=l[3])&&q.getElementsByClassName&&t.getElementsByClassName)return Z.apply(a,t.getElementsByClassName(n)),a}if(q.qsa&&!W[e+" "]&&(!N||!N.test(e))){if(1!==f)g=t,m=e;else if("object"!==t.nodeName.toLowerCase()){for((o=t.getAttribute("id"))?o=o.replace(be,"\\$&"):t.setAttribute("id",o=M),p=j(e),r=p.length,c=ue.test(o)?"#"+o:"[id='"+o+"']";r--;)p[r]=c+" "+u(p[r]);m=p.join(","),g=ve.test(e)&&d(t.parentNode)||t}if(m)try{return Z.apply(a,g.querySelectorAll(m)),a}catch(e){}finally{o===M&&t.removeAttribute("id")}}}return z(e.replace(oe,"$1"),t,a,i)}function a(){function e(a,i){return t.push(a+" ")>w.cacheLength&&delete e[t.shift()],e[a+" "]=i}var t=[];return e}function i(e){return e[M]=!0,e}function n(e){var t=I.createElement("div");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function r(e,t){for(var a=e.split("|"),i=a.length;i--;)w.attrHandle[a[i]]=t}function s(e,t){var a=t&&e,i=a&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||G)-(~e.sourceIndex||G);if(i)return i;if(a)for(;a=a.nextSibling;)if(a===t)return-1;return e?1:-1}function o(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function c(e){return function(t){var a=t.nodeName.toLowerCase();return("input"===a||"button"===a)&&t.type===e}}function l(e){return i(function(t){return t=+t,i(function(a,i){for(var n,r=e([],a.length,t),s=r.length;s--;)a[n=r[s]]&&(a[n]=!(i[n]=a[n]))})})}function d(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function p(){}function u(e){for(var t=0,a=e.length,i="";t<a;t++)i+=e[t].value;return i}function m(e,t,a){var i=t.dir,n=a&&"parentNode"===i,r=B++;return t.first?function(t,a,r){for(;t=t[i];)if(1===t.nodeType||n)return e(t,a,r)}:function(t,a,s){var o,c,l,d=[$,r];if(s){for(;t=t[i];)if((1===t.nodeType||n)&&e(t,a,s))return!0}else for(;t=t[i];)if(1===t.nodeType||n){if(l=t[M]||(t[M]={}),c=l[t.uniqueID]||(l[t.uniqueID]={}),(o=c[i])&&o[0]===$&&o[1]===r)return d[2]=o[2];if(c[i]=d,d[2]=e(t,a,s))return!0}}}function g(e){return e.length>1?function(t,a,i){for(var n=e.length;n--;)if(!e[n](t,a,i))return!1;return!0}:e[0]}function f(e,a,i){for(var n=0,r=a.length;n<r;n++)t(e,a[n],i);return i}function y(e,t,a,i,n){for(var r,s=[],o=0,c=e.length,l=null!=t;o<c;o++)(r=e[o])&&(a&&!a(r,i,n)||(s.push(r),l&&t.push(o)));return s}function h(e,t,a,n,r,s){return n&&!n[M]&&(n=h(n)),r&&!r[M]&&(r=h(r,s)),i(function(i,s,o,c){var l,d,p,u=[],m=[],g=s.length,h=i||f(t||"*",o.nodeType?[o]:o,[]),v=!e||!i&&t?h:y(h,u,e,o,c),b=a?r||(i?e:g||n)?[]:s:v;if(a&&a(v,b,o,c),n)for(l=y(b,m),n(l,[],o,c),d=l.length;d--;)(p=l[d])&&(b[m[d]]=!(v[m[d]]=p));if(i){if(r||e){if(r){for(l=[],d=b.length;d--;)(p=b[d])&&l.push(v[d]=p);r(null,b=[],l,c)}for(d=b.length;d--;)(p=b[d])&&(l=r?ee(i,p):u[d])>-1&&(i[l]=!(s[l]=p))}}else b=y(b===s?b.splice(g,b.length):b),r?r(null,s,b,c):Z.apply(s,b)})}function v(e){for(var t,a,i,n=e.length,r=w.relative[e[0].type],s=r||w.relative[" "],o=r?1:0,c=m(function(e){return e===t},s,!0),l=m(function(e){return ee(t,e)>-1},s,!0),d=[function(e,a,i){var n=!r&&(i||a!==E)||((t=a).nodeType?c(e,a,i):l(e,a,i));return t=null,n}];o<n;o++)if(a=w.relative[e[o].type])d=[m(g(d),a)];else{if(a=w.filter[e[o].type].apply(null,e[o].matches),a[M]){for(i=++o;i<n&&!w.relative[e[i].type];i++);return h(o>1&&g(d),o>1&&u(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(oe,"$1"),a,o<i&&v(e.slice(o,i)),i<n&&v(e=e.slice(i)),i<n&&u(e))}d.push(a)}return g(d)}function b(e,a){var n=a.length>0,r=e.length>0,s=function(i,s,o,c,l){var d,p,u,m=0,g="0",f=i&&[],h=[],v=E,b=i||r&&w.find.TAG("*",l),_=$+=null==v?1:Math.random()||.1,q=b.length;for(l&&(E=s===I||s||l);g!==q&&null!=(d=b[g]);g++){if(r&&d){for(p=0,s||d.ownerDocument===I||(A(d),o=!P);u=e[p++];)if(u(d,s||I,o)){c.push(d);break}l&&($=_)}n&&((d=!u&&d)&&m--,i&&f.push(d))}if(m+=g,n&&g!==m){for(p=0;u=a[p++];)u(f,h,s,o);if(i){if(m>0)for(;g--;)f[g]||h[g]||(h[g]=Y.call(c));h=y(h)}Z.apply(c,h),l&&!i&&h.length>0&&m+a.length>1&&t.uniqueSort(c)}return l&&($=_,E=v),f};return n?i(s):s}var _,q,w,k,x,j,T,z,E,C,S,A,I,R,P,N,D,O,L,M="sizzle"+1*new Date,F=e.document,$=0,B=0,U=a(),H=a(),W=a(),V=function(e,t){return e===t&&(S=!0),0},G=1<<31,K={}.hasOwnProperty,Q=[],Y=Q.pop,X=Q.push,Z=Q.push,J=Q.slice,ee=function(e,t){for(var a=0,i=e.length;a<i;a++)if(e[a]===t)return a;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ae="[\\x20\\t\\r\\n\\f]",ie="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",ne="\\["+ae+"*("+ie+")(?:"+ae+"*([*^$|!~]?=)"+ae+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ie+"))|)"+ae+"*\\]",re=":("+ie+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+ne+")*)|.*)\\)|)",se=new RegExp(ae+"+","g"),oe=new RegExp("^"+ae+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ae+"+$","g"),ce=new RegExp("^"+ae+"*,"+ae+"*"),le=new RegExp("^"+ae+"*([>+~]|"+ae+")"+ae+"*"),de=new RegExp("="+ae+"*([^\\]'\"]*?)"+ae+"*\\]","g"),pe=new RegExp(re),ue=new RegExp("^"+ie+"$"),me={ID:new RegExp("^#("+ie+")"),CLASS:new RegExp("^\\.("+ie+")"),TAG:new RegExp("^("+ie+"|[*])"),ATTR:new RegExp("^"+ne),PSEUDO:new RegExp("^"+re),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ae+"*(even|odd|(([+-]|)(\\d*)n|)"+ae+"*(?:([+-]|)"+ae+"*(\\d+)|))"+ae+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ae+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ae+"*((?:-\\d)?\\d*)"+ae+"*\\)|)(?=[^-]|$)","i")},ge=/^(?:input|select|textarea|button)$/i,fe=/^h\d$/i,ye=/^[^{]+\{\s*\[native \w/,he=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ve=/[+~]/,be=/'|\\/g,_e=new RegExp("\\\\([\\da-f]{1,6}"+ae+"?|("+ae+")|.)","ig"),qe=function(e,t,a){var i="0x"+t-65536;return i!==i||a?t:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},we=function(){A()};try{Z.apply(Q=J.call(F.childNodes),F.childNodes),Q[F.childNodes.length].nodeType}catch(e){Z={apply:Q.length?function(e,t){X.apply(e,J.call(t))}:function(e,t){for(var a=e.length,i=0;e[a++]=t[i++];);e.length=a-1}}}q=t.support={},x=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},A=t.setDocument=function(e){var t,a,i=e?e.ownerDocument||e:F;return i!==I&&9===i.nodeType&&i.documentElement?(I=i,R=I.documentElement,P=!x(I),(a=I.defaultView)&&a.top!==a&&(a.addEventListener?a.addEventListener("unload",we,!1):a.attachEvent&&a.attachEvent("onunload",we)),q.attributes=n(function(e){return e.className="i",!e.getAttribute("className")}),q.getElementsByTagName=n(function(e){return e.appendChild(I.createComment("")),!e.getElementsByTagName("*").length}),q.getElementsByClassName=ye.test(I.getElementsByClassName),q.getById=n(function(e){return R.appendChild(e).id=M,!I.getElementsByName||!I.getElementsByName(M).length}),q.getById?(w.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&P){var a=t.getElementById(e);return a?[a]:[]}},w.filter.ID=function(e){var t=e.replace(_e,qe);return function(e){return e.getAttribute("id")===t}}):(delete w.find.ID,w.filter.ID=function(e){var t=e.replace(_e,qe);return function(e){var a="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return a&&a.value===t}}),w.find.TAG=q.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):q.qsa?t.querySelectorAll(e):void 0}:function(e,t){var a,i=[],n=0,r=t.getElementsByTagName(e);if("*"===e){for(;a=r[n++];)1===a.nodeType&&i.push(a);return i}return r},w.find.CLASS=q.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&P)return t.getElementsByClassName(e)},D=[],N=[],(q.qsa=ye.test(I.querySelectorAll))&&(n(function(e){R.appendChild(e).innerHTML="<a id='"+M+"'></a><select id='"+M+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&N.push("[*^$]="+ae+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||N.push("\\["+ae+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+M+"-]").length||N.push("~="),e.querySelectorAll(":checked").length||N.push(":checked"),e.querySelectorAll("a#"+M+"+*").length||N.push(".#.+[+~]")}),n(function(e){var t=I.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&N.push("name"+ae+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||N.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),N.push(",.*:")})),(q.matchesSelector=ye.test(O=R.matches||R.webkitMatchesSelector||R.mozMatchesSelector||R.oMatchesSelector||R.msMatchesSelector))&&n(function(e){q.disconnectedMatch=O.call(e,"div"),O.call(e,"[s!='']:x"),D.push("!=",re)}),N=N.length&&new RegExp(N.join("|")),D=D.length&&new RegExp(D.join("|")),t=ye.test(R.compareDocumentPosition),L=t||ye.test(R.contains)?function(e,t){var a=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(a.contains?a.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},V=t?function(e,t){if(e===t)return S=!0,0;var a=!e.compareDocumentPosition-!t.compareDocumentPosition;return a||(a=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&a||!q.sortDetached&&t.compareDocumentPosition(e)===a?e===I||e.ownerDocument===F&&L(F,e)?-1:t===I||t.ownerDocument===F&&L(F,t)?1:C?ee(C,e)-ee(C,t):0:4&a?-1:1)}:function(e,t){if(e===t)return S=!0,0;var a,i=0,n=e.parentNode,r=t.parentNode,o=[e],c=[t];if(!n||!r)return e===I?-1:t===I?1:n?-1:r?1:C?ee(C,e)-ee(C,t):0;if(n===r)return s(e,t);for(a=e;a=a.parentNode;)o.unshift(a);for(a=t;a=a.parentNode;)c.unshift(a);for(;o[i]===c[i];)i++;return i?s(o[i],c[i]):o[i]===F?-1:c[i]===F?1:0},I):I},t.matches=function(e,a){return t(e,null,null,a)},t.matchesSelector=function(e,a){if((e.ownerDocument||e)!==I&&A(e),a=a.replace(de,"='$1']"),q.matchesSelector&&P&&!W[a+" "]&&(!D||!D.test(a))&&(!N||!N.test(a)))try{var i=O.call(e,a);if(i||q.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){}return t(a,I,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==I&&A(e),L(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==I&&A(e);var a=w.attrHandle[t.toLowerCase()],i=a&&K.call(w.attrHandle,t.toLowerCase())?a(e,t,!P):undefined;return i!==undefined?i:q.attributes||!P?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,a=[],i=0,n=0;if(S=!q.detectDuplicates,C=!q.sortStable&&e.slice(0),e.sort(V),S){for(;t=e[n++];)t===e[n]&&(i=a.push(n));for(;i--;)e.splice(a[i],1)}return C=null,e},k=t.getText=function(e){var t,a="",i=0,n=e.nodeType;if(n){if(1===n||9===n||11===n){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)a+=k(e)}else if(3===n||4===n)return e.nodeValue}else for(;t=e[i++];)a+=k(t);return a},w=t.selectors={cacheLength:50,createPseudo:i,match:me,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(_e,qe),e[3]=(e[3]||e[4]||e[5]||"").replace(_e,qe),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,a=!e[6]&&e[2];return me.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":a&&pe.test(a)&&(t=j(a,!0))&&(t=a.indexOf(")",a.length-t)-a.length)&&(e[0]=e[0].slice(0,t),e[2]=a.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(_e,qe).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=U[e+" "];return t||(t=new RegExp("(^|"+ae+")"+e+"("+ae+"|$)"))&&U(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,a,i){return function(n){var r=t.attr(n,e);return null==r?"!="===a:!a||(r+="","="===a?r===i:"!="===a?r!==i:"^="===a?i&&0===r.indexOf(i):"*="===a?i&&r.indexOf(i)>-1:"$="===a?i&&r.slice(-i.length)===i:"~="===a?(" "+r.replace(se," ")+" ").indexOf(i)>-1:"|="===a&&(r===i||r.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,a,i,n){var r="nth"!==e.slice(0,3),s="last"!==e.slice(-4),o="of-type"===t;return 1===i&&0===n?function(e){return!!e.parentNode}:function(t,a,c){var l,d,p,u,m,g,f=r!==s?"nextSibling":"previousSibling",y=t.parentNode,h=o&&t.nodeName.toLowerCase(),v=!c&&!o,b=!1;if(y){if(r){for(;f;){for(u=t;u=u[f];)if(o?u.nodeName.toLowerCase()===h:1===u.nodeType)return!1;g=f="only"===e&&!g&&"nextSibling"}return!0}if(g=[s?y.firstChild:y.lastChild],s&&v){for(u=y,p=u[M]||(u[M]={}),d=p[u.uniqueID]||(p[u.uniqueID]={}),l=d[e]||[],m=l[0]===$&&l[1],
b=m&&l[2],u=m&&y.childNodes[m];u=++m&&u&&u[f]||(b=m=0)||g.pop();)if(1===u.nodeType&&++b&&u===t){d[e]=[$,m,b];break}}else if(v&&(u=t,p=u[M]||(u[M]={}),d=p[u.uniqueID]||(p[u.uniqueID]={}),l=d[e]||[],m=l[0]===$&&l[1],b=m),!1===b)for(;(u=++m&&u&&u[f]||(b=m=0)||g.pop())&&((o?u.nodeName.toLowerCase()!==h:1!==u.nodeType)||!++b||(v&&(p=u[M]||(u[M]={}),d=p[u.uniqueID]||(p[u.uniqueID]={}),d[e]=[$,b]),u!==t)););return(b-=n)===i||b%i==0&&b/i>=0}}},PSEUDO:function(e,a){var n,r=w.pseudos[e]||w.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return r[M]?r(a):r.length>1?(n=[e,e,"",a],w.setFilters.hasOwnProperty(e.toLowerCase())?i(function(e,t){for(var i,n=r(e,a),s=n.length;s--;)i=ee(e,n[s]),e[i]=!(t[i]=n[s])}):function(e){return r(e,0,n)}):r}},pseudos:{not:i(function(e){var t=[],a=[],n=T(e.replace(oe,"$1"));return n[M]?i(function(e,t,a,i){for(var r,s=n(e,null,i,[]),o=e.length;o--;)(r=s[o])&&(e[o]=!(t[o]=r))}):function(e,i,r){return t[0]=e,n(t,null,r,a),t[0]=null,!a.pop()}}),has:i(function(e){return function(a){return t(e,a).length>0}}),contains:i(function(e){return e=e.replace(_e,qe),function(t){return(t.textContent||t.innerText||k(t)).indexOf(e)>-1}}),lang:i(function(e){return ue.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(_e,qe).toLowerCase(),function(t){var a;do{if(a=P?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(a=a.toLowerCase())===e||0===a.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var a=e.location&&e.location.hash;return a&&a.slice(1)===t.id},root:function(e){return e===R},focus:function(e){return e===I.activeElement&&(!I.hasFocus||I.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return!1===e.disabled},disabled:function(e){return!0===e.disabled},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return fe.test(e.nodeName)},input:function(e){return ge.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:l(function(){return[0]}),last:l(function(e,t){return[t-1]}),eq:l(function(e,t,a){return[a<0?a+t:a]}),even:l(function(e,t){for(var a=0;a<t;a+=2)e.push(a);return e}),odd:l(function(e,t){for(var a=1;a<t;a+=2)e.push(a);return e}),lt:l(function(e,t,a){for(var i=a<0?a+t:a;--i>=0;)e.push(i);return e}),gt:l(function(e,t,a){for(var i=a<0?a+t:a;++i<t;)e.push(i);return e})}},w.pseudos.nth=w.pseudos.eq;for(_ in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[_]=o(_);for(_ in{submit:!0,reset:!0})w.pseudos[_]=c(_);return p.prototype=w.filters=w.pseudos,w.setFilters=new p,j=t.tokenize=function(e,a){var i,n,r,s,o,c,l,d=H[e+" "];if(d)return a?0:d.slice(0);for(o=e,c=[],l=w.preFilter;o;){i&&!(n=ce.exec(o))||(n&&(o=o.slice(n[0].length)||o),c.push(r=[])),i=!1,(n=le.exec(o))&&(i=n.shift(),r.push({value:i,type:n[0].replace(oe," ")}),o=o.slice(i.length));for(s in w.filter)!(n=me[s].exec(o))||l[s]&&!(n=l[s](n))||(i=n.shift(),r.push({value:i,type:s,matches:n}),o=o.slice(i.length));if(!i)break}return a?o.length:o?t.error(e):H(e,c).slice(0)},T=t.compile=function(e,t){var a,i=[],n=[],r=W[e+" "];if(!r){for(t||(t=j(e)),a=t.length;a--;)r=v(t[a]),r[M]?i.push(r):n.push(r);r=W(e,b(n,i)),r.selector=e}return r},z=t.select=function(e,t,a,i){var n,r,s,o,c,l="function"==typeof e&&e,p=!i&&j(e=l.selector||e);if(a=a||[],1===p.length){if(r=p[0]=p[0].slice(0),r.length>2&&"ID"===(s=r[0]).type&&q.getById&&9===t.nodeType&&P&&w.relative[r[1].type]){if(!(t=(w.find.ID(s.matches[0].replace(_e,qe),t)||[])[0]))return a;l&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(n=me.needsContext.test(e)?0:r.length;n--&&(s=r[n],!w.relative[o=s.type]);)if((c=w.find[o])&&(i=c(s.matches[0].replace(_e,qe),ve.test(r[0].type)&&d(t.parentNode)||t))){if(r.splice(n,1),!(e=i.length&&u(r)))return Z.apply(a,i),a;break}}return(l||T(e,p))(i,t,!P,a,!t||ve.test(e)&&d(t.parentNode)||t),a},q.sortStable=M.split("").sort(V).join("")===M,q.detectDuplicates=!!S,A(),q.sortDetached=n(function(e){return 1&e.compareDocumentPosition(I.createElement("div"))}),n(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||r("type|href|height|width",function(e,t,a){if(!a)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),q.attributes&&n(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||r("value",function(e,t,a){if(!a&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),n(function(e){return null==e.getAttribute("disabled")})||r(te,function(e,t,a){var i;if(!a)return!0===e[t]?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),t}(e);me.find=ve,me.expr=ve.selectors,me.expr[":"]=me.expr.pseudos,me.uniqueSort=me.unique=ve.uniqueSort,me.text=ve.getText,me.isXMLDoc=ve.isXML,me.contains=ve.contains;var be=function(e,t,a){for(var i=[],n=a!==undefined;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(n&&me(e).is(a))break;i.push(e)}return i},_e=function(e,t){for(var a=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&a.push(e);return a},qe=me.expr.match.needsContext,we=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,ke=/^.[^:#\[\.,]*$/;me.filter=function(e,t,a){var i=t[0];return a&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?me.find.matchesSelector(i,e)?[i]:[]:me.find.matches(e,me.grep(t,function(e){return 1===e.nodeType}))},me.fn.extend({find:function(e){var t,a=[],i=this,n=i.length;if("string"!=typeof e)return this.pushStack(me(e).filter(function(){for(t=0;t<n;t++)if(me.contains(i[t],this))return!0}));for(t=0;t<n;t++)me.find(e,i[t],a);return a=this.pushStack(n>1?me.unique(a):a),a.selector=this.selector?this.selector+" "+e:e,a},filter:function(e){return this.pushStack(i(this,e||[],!1))},not:function(e){return this.pushStack(i(this,e||[],!0))},is:function(e){return!!i(this,"string"==typeof e&&qe.test(e)?me(e):e||[],!1).length}});var xe,je=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;(me.fn.init=function(e,t,a){var i,n;if(!e)return this;if(a=a||xe,"string"==typeof e){if(!(i="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:je.exec(e))||!i[1]&&t)return!t||t.jquery?(t||a).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof me?t[0]:t,me.merge(this,me.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:ie,!0)),we.test(i[1])&&me.isPlainObject(t))for(i in t)me.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}if((n=ie.getElementById(i[2]))&&n.parentNode){if(n.id!==i[2])return xe.find(e);this.length=1,this[0]=n}return this.context=ie,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):me.isFunction(e)?"undefined"!=typeof a.ready?a.ready(e):e(me):(e.selector!==undefined&&(this.selector=e.selector,this.context=e.context),me.makeArray(e,this))}).prototype=me.fn,xe=me(ie);var Te=/^(?:parents|prev(?:Until|All))/,ze={children:!0,contents:!0,next:!0,prev:!0};me.fn.extend({has:function(e){var t,a=me(e,this),i=a.length;return this.filter(function(){for(t=0;t<i;t++)if(me.contains(this,a[t]))return!0})},closest:function(e,t){for(var a,i=0,n=this.length,r=[],s=qe.test(e)||"string"!=typeof e?me(e,t||this.context):0;i<n;i++)for(a=this[i];a&&a!==t;a=a.parentNode)if(a.nodeType<11&&(s?s.index(a)>-1:1===a.nodeType&&me.find.matchesSelector(a,e))){r.push(a);break}return this.pushStack(r.length>1?me.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?me.inArray(this[0],me(e)):me.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(me.uniqueSort(me.merge(this.get(),me(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),me.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return be(e,"parentNode")},parentsUntil:function(e,t,a){return be(e,"parentNode",a)},next:function(e){return n(e,"nextSibling")},prev:function(e){return n(e,"previousSibling")},nextAll:function(e){return be(e,"nextSibling")},prevAll:function(e){return be(e,"previousSibling")},nextUntil:function(e,t,a){return be(e,"nextSibling",a)},prevUntil:function(e,t,a){return be(e,"previousSibling",a)},siblings:function(e){return _e((e.parentNode||{}).firstChild,e)},children:function(e){return _e(e.firstChild)},contents:function(e){return me.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:me.merge([],e.childNodes)}},function(e,t){me.fn[e]=function(a,i){var n=me.map(this,t,a);return"Until"!==e.slice(-5)&&(i=a),i&&"string"==typeof i&&(n=me.filter(i,n)),this.length>1&&(ze[e]||(n=me.uniqueSort(n)),Te.test(e)&&(n=n.reverse())),this.pushStack(n)}});var Ee=/\S+/g;me.Callbacks=function(e){e="string"==typeof e?r(e):me.extend({},e);var t,a,i,n,s=[],o=[],c=-1,l=function(){for(n=e.once,i=t=!0;o.length;c=-1)for(a=o.shift();++c<s.length;)!1===s[c].apply(a[0],a[1])&&e.stopOnFalse&&(c=s.length,a=!1);e.memory||(a=!1),t=!1,n&&(s=a?[]:"")},d={add:function(){return s&&(a&&!t&&(c=s.length-1,o.push(a)),function t(a){me.each(a,function(a,i){me.isFunction(i)?e.unique&&d.has(i)||s.push(i):i&&i.length&&"string"!==me.type(i)&&t(i)})}(arguments),a&&!t&&l()),this},remove:function(){return me.each(arguments,function(e,t){for(var a;(a=me.inArray(t,s,a))>-1;)s.splice(a,1),a<=c&&c--}),this},has:function(e){return e?me.inArray(e,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return n=o=[],s=a="",this},disabled:function(){return!s},lock:function(){return n=!0,a||d.disable(),this},locked:function(){return!!n},fireWith:function(e,a){return n||(a=a||[],a=[e,a.slice?a.slice():a],o.push(a),t||l()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!i}};return d},me.extend({Deferred:function(e){var t=[["resolve","done",me.Callbacks("once memory"),"resolved"],["reject","fail",me.Callbacks("once memory"),"rejected"],["notify","progress",me.Callbacks("memory")]],a="pending",i={state:function(){return a},always:function(){return n.done(arguments).fail(arguments),this},then:function(){var e=arguments;return me.Deferred(function(a){me.each(t,function(t,r){var s=me.isFunction(e[t])&&e[t];n[r[1]](function(){var e=s&&s.apply(this,arguments);e&&me.isFunction(e.promise)?e.promise().progress(a.notify).done(a.resolve).fail(a.reject):a[r[0]+"With"](this===i?a.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?me.extend(e,i):i}},n={};return i.pipe=i.then,me.each(t,function(e,r){var s=r[2],o=r[3];i[r[1]]=s.add,o&&s.add(function(){a=o},t[1^e][2].disable,t[2][2].lock),n[r[0]]=function(){return n[r[0]+"With"](this===n?i:this,arguments),this},n[r[0]+"With"]=s.fireWith}),i.promise(n),e&&e.call(n,n),n},when:function(e){var t,a,i,n=0,r=ne.call(arguments),s=r.length,o=1!==s||e&&me.isFunction(e.promise)?s:0,c=1===o?e:me.Deferred(),l=function(e,a,i){return function(n){a[e]=this,i[e]=arguments.length>1?ne.call(arguments):n,i===t?c.notifyWith(a,i):--o||c.resolveWith(a,i)}};if(s>1)for(t=new Array(s),a=new Array(s),i=new Array(s);n<s;n++)r[n]&&me.isFunction(r[n].promise)?r[n].promise().progress(l(n,a,t)).done(l(n,i,r)).fail(c.reject):--o;return o||c.resolveWith(i,r),c.promise()}});var Ce;me.fn.ready=function(e){return me.ready.promise().done(e),this},me.extend({isReady:!1,readyWait:1,holdReady:function(e){e?me.readyWait++:me.ready(!0)},ready:function(e){(!0===e?--me.readyWait:me.isReady)||(me.isReady=!0,!0!==e&&--me.readyWait>0||(Ce.resolveWith(ie,[me]),me.fn.triggerHandler&&(me(ie).triggerHandler("ready"),me(ie).off("ready"))))}}),me.ready.promise=function(t){if(!Ce)if(Ce=me.Deferred(),"complete"===ie.readyState||"loading"!==ie.readyState&&!ie.documentElement.doScroll)e.setTimeout(me.ready);else if(ie.addEventListener)ie.addEventListener("DOMContentLoaded",o),e.addEventListener("load",o);else{ie.attachEvent("onreadystatechange",o),e.attachEvent("onload",o);var a=!1;try{a=null==e.frameElement&&ie.documentElement}catch(e){}a&&a.doScroll&&function t(){if(!me.isReady){try{a.doScroll("left")}catch(a){return e.setTimeout(t,50)}s(),me.ready()}}()}return Ce.promise(t)},me.ready.promise();var Se;for(Se in me(pe))break;pe.ownFirst="0"===Se,pe.inlineBlockNeedsLayout=!1,me(function(){var e,t,a,i;(a=ie.getElementsByTagName("body")[0])&&a.style&&(t=ie.createElement("div"),i=ie.createElement("div"),i.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",a.appendChild(i).appendChild(t),"undefined"!=typeof t.style.zoom&&(t.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",pe.inlineBlockNeedsLayout=e=3===t.offsetWidth,e&&(a.style.zoom=1)),a.removeChild(i))}),function(){var e=ie.createElement("div");pe.deleteExpando=!0;try{delete e.test}catch(e){pe.deleteExpando=!1}e=null}();var Ae=function(e){var t=me.noData[(e.nodeName+" ").toLowerCase()],a=+e.nodeType||1;return(1===a||9===a)&&(!t||!0!==t&&e.getAttribute("classid")===t)},Ie=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Re=/([A-Z])/g;me.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(e){return!!(e=e.nodeType?me.cache[e[me.expando]]:e[me.expando])&&!l(e)},data:function(e,t,a){return d(e,t,a)},removeData:function(e,t){return p(e,t)},_data:function(e,t,a){return d(e,t,a,!0)},_removeData:function(e,t){return p(e,t,!0)}}),me.fn.extend({data:function(e,t){var a,i,n,r=this[0],s=r&&r.attributes;if(e===undefined){if(this.length&&(n=me.data(r),1===r.nodeType&&!me._data(r,"parsedAttrs"))){for(a=s.length;a--;)s[a]&&(i=s[a].name,0===i.indexOf("data-")&&(i=me.camelCase(i.slice(5)),c(r,i,n[i])));me._data(r,"parsedAttrs",!0)}return n}return"object"==typeof e?this.each(function(){me.data(this,e)}):arguments.length>1?this.each(function(){me.data(this,e,t)}):r?c(r,e,me.data(r,e)):undefined},removeData:function(e){return this.each(function(){me.removeData(this,e)})}}),me.extend({queue:function(e,t,a){var i;if(e)return t=(t||"fx")+"queue",i=me._data(e,t),a&&(!i||me.isArray(a)?i=me._data(e,t,me.makeArray(a)):i.push(a)),i||[]},dequeue:function(e,t){t=t||"fx";var a=me.queue(e,t),i=a.length,n=a.shift(),r=me._queueHooks(e,t),s=function(){me.dequeue(e,t)};"inprogress"===n&&(n=a.shift(),i--),n&&("fx"===t&&a.unshift("inprogress"),delete r.stop,n.call(e,s,r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var a=t+"queueHooks";return me._data(e,a)||me._data(e,a,{empty:me.Callbacks("once memory").add(function(){me._removeData(e,t+"queue"),me._removeData(e,a)})})}}),me.fn.extend({queue:function(e,t){var a=2;return"string"!=typeof e&&(t=e,e="fx",a--),arguments.length<a?me.queue(this[0],e):t===undefined?this:this.each(function(){var a=me.queue(this,e,t);me._queueHooks(this,e),"fx"===e&&"inprogress"!==a[0]&&me.dequeue(this,e)})},dequeue:function(e){return this.each(function(){me.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var a,i=1,n=me.Deferred(),r=this,s=this.length,o=function(){--i||n.resolveWith(r,[r])};for("string"!=typeof e&&(t=e,e=undefined),e=e||"fx";s--;)(a=me._data(r[s],e+"queueHooks"))&&a.empty&&(i++,a.empty.add(o));return o(),n.promise(t)}}),function(){var e;pe.shrinkWrapBlocks=function(){if(null!=e)return e;e=!1;var t,a,i;return(a=ie.getElementsByTagName("body")[0])&&a.style?(t=ie.createElement("div"),i=ie.createElement("div"),i.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",a.appendChild(i).appendChild(t),"undefined"!=typeof t.style.zoom&&(t.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",t.appendChild(ie.createElement("div")).style.width="5px",e=3!==t.offsetWidth),a.removeChild(i),e):void 0}}();var Pe=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Ne=new RegExp("^(?:([+-])=|)("+Pe+")([a-z%]*)$","i"),De=["Top","Right","Bottom","Left"],Oe=function(e,t){return e=t||e,"none"===me.css(e,"display")||!me.contains(e.ownerDocument,e)},Le=function(e,t,a,i,n,r,s){var o=0,c=e.length,l=null==a;if("object"===me.type(a)){n=!0;for(o in a)Le(e,t,o,a[o],!0,r,s)}else if(i!==undefined&&(n=!0,me.isFunction(i)||(s=!0),l&&(s?(t.call(e,i),t=null):(l=t,t=function(e,t,a){return l.call(me(e),a)})),t))for(;o<c;o++)t(e[o],a,s?i:i.call(e[o],o,t(e[o],a)));return n?e:l?t.call(e):c?t(e[0],a):r},Me=/^(?:checkbox|radio)$/i,Fe=/<([\w:-]+)/,$e=/^$|\/(?:java|ecma)script/i,Be=/^\s+/,Ue="abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";!function(){var e=ie.createElement("div"),t=ie.createDocumentFragment(),a=ie.createElement("input");e.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",pe.leadingWhitespace=3===e.firstChild.nodeType,pe.tbody=!e.getElementsByTagName("tbody").length,pe.htmlSerialize=!!e.getElementsByTagName("link").length,pe.html5Clone="<:nav></:nav>"!==ie.createElement("nav").cloneNode(!0).outerHTML,a.type="checkbox",a.checked=!0,t.appendChild(a),pe.appendChecked=a.checked,e.innerHTML="<textarea>x</textarea>",pe.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue,t.appendChild(e),a=ie.createElement("input"),a.setAttribute("type","radio"),a.setAttribute("checked","checked"),a.setAttribute("name","t"),e.appendChild(a),pe.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,pe.noCloneEvent=!!e.addEventListener,e[me.expando]=1,pe.attributes=!e.getAttribute(me.expando)}();var He={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:pe.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]};He.optgroup=He.option,He.tbody=He.tfoot=He.colgroup=He.caption=He.thead,He.th=He.td;var We=/<|&#?\w+;/,Ve=/<tbody/i;!function(){var t,a,i=ie.createElement("div");for(t in{submit:!0,change:!0,focusin:!0})a="on"+t,(pe[t]=a in e)||(i.setAttribute(a,"t"),pe[t]=!1===i.attributes[a].expando);i=null}();var Ge=/^(?:input|select|textarea)$/i,Ke=/^key/,Qe=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ye=/^(?:focusinfocus|focusoutblur)$/,Xe=/^([^.]*)(?:\.(.+)|)/;me.event={global:{},add:function(e,t,a,i,n){var r,s,o,c,l,d,p,u,m,g,f,y=me._data(e);if(y){for(a.handler&&(c=a,a=c.handler,n=c.selector),a.guid||(a.guid=me.guid++),(s=y.events)||(s=y.events={}),(d=y.handle)||(d=y.handle=function(e){return void 0===me||e&&me.event.triggered===e.type?undefined:me.event.dispatch.apply(d.elem,arguments)},d.elem=e),t=(t||"").match(Ee)||[""],o=t.length;o--;)r=Xe.exec(t[o])||[],m=f=r[1],g=(r[2]||"").split(".").sort(),m&&(l=me.event.special[m]||{},m=(n?l.delegateType:l.bindType)||m,l=me.event.special[m]||{},p=me.extend({type:m,origType:f,data:i,handler:a,guid:a.guid,selector:n,needsContext:n&&me.expr.match.needsContext.test(n),namespace:g.join(".")},c),(u=s[m])||(u=s[m]=[],u.delegateCount=0,l.setup&&!1!==l.setup.call(e,i,g,d)||(e.addEventListener?e.addEventListener(m,d,!1):e.attachEvent&&e.attachEvent("on"+m,d))),l.add&&(l.add.call(e,p),p.handler.guid||(p.handler.guid=a.guid)),n?u.splice(u.delegateCount++,0,p):u.push(p),me.event.global[m]=!0);e=null}},remove:function(e,t,a,i,n){var r,s,o,c,l,d,p,u,m,g,f,y=me.hasData(e)&&me._data(e);if(y&&(d=y.events)){for(t=(t||"").match(Ee)||[""],l=t.length;l--;)if(o=Xe.exec(t[l])||[],m=f=o[1],g=(o[2]||"").split(".").sort(),m){for(p=me.event.special[m]||{},m=(i?p.delegateType:p.bindType)||m,u=d[m]||[],o=o[2]&&new RegExp("(^|\\.)"+g.join("\\.(?:.*\\.|)")+"(\\.|$)"),c=r=u.length;r--;)s=u[r],!n&&f!==s.origType||a&&a.guid!==s.guid||o&&!o.test(s.namespace)||i&&i!==s.selector&&("**"!==i||!s.selector)||(u.splice(r,1),s.selector&&u.delegateCount--,p.remove&&p.remove.call(e,s));c&&!u.length&&(p.teardown&&!1!==p.teardown.call(e,g,y.handle)||me.removeEvent(e,m,y.handle),delete d[m])}else for(m in d)me.event.remove(e,m+t[l],a,i,!0);me.isEmptyObject(d)&&(delete y.handle,me._removeData(e,"events"))}},trigger:function(t,a,i,n){var r,s,o,c,l,d,p,u=[i||ie],m=de.call(t,"type")?t.type:t,g=de.call(t,"namespace")?t.namespace.split("."):[];if(o=d=i=i||ie,3!==i.nodeType&&8!==i.nodeType&&!Ye.test(m+me.event.triggered)&&(m.indexOf(".")>-1&&(g=m.split("."),m=g.shift(),g.sort()),s=m.indexOf(":")<0&&"on"+m,t=t[me.expando]?t:new me.Event(m,"object"==typeof t&&t),t.isTrigger=n?2:3,t.namespace=g.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+g.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=undefined,t.target||(t.target=i),a=null==a?[t]:me.makeArray(a,[t]),l=me.event.special[m]||{},n||!l.trigger||!1!==l.trigger.apply(i,a))){if(!n&&!l.noBubble&&!me.isWindow(i)){for(c=l.delegateType||m,Ye.test(c+m)||(o=o.parentNode);o;o=o.parentNode)u.push(o),d=o;d===(i.ownerDocument||ie)&&u.push(d.defaultView||d.parentWindow||e)}for(p=0;(o=u[p++])&&!t.isPropagationStopped();)t.type=p>1?c:l.bindType||m,r=(me._data(o,"events")||{})[t.type]&&me._data(o,"handle"),r&&r.apply(o,a),(r=s&&o[s])&&r.apply&&Ae(o)&&(t.result=r.apply(o,a),!1===t.result&&t.preventDefault());if(t.type=m,!n&&!t.isDefaultPrevented()&&(!l._default||!1===l._default.apply(u.pop(),a))&&Ae(i)&&s&&i[m]&&!me.isWindow(i)){d=i[s],d&&(i[s]=null),me.event.triggered=m;try{i[m]()}catch(e){}me.event.triggered=undefined,d&&(i[s]=d)}return t.result}},dispatch:function(e){e=me.event.fix(e);var t,a,i,n,r,s=[],o=ne.call(arguments),c=(me._data(this,"events")||{})[e.type]||[],l=me.event.special[e.type]||{};if(o[0]=e,e.delegateTarget=this,!l.preDispatch||!1!==l.preDispatch.call(this,e)){for(s=me.event.handlers.call(this,e,c),t=0;(n=s[t++])&&!e.isPropagationStopped();)for(e.currentTarget=n.elem,a=0;(r=n.handlers[a++])&&!e.isImmediatePropagationStopped();)e.rnamespace&&!e.rnamespace.test(r.namespace)||(e.handleObj=r,e.data=r.data,(i=((me.event.special[r.origType]||{}).handle||r.handler).apply(n.elem,o))!==undefined&&!1===(e.result=i)&&(e.preventDefault(),e.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,e),e.result}},handlers:function(e,t){var a,i,n,r,s=[],o=t.delegateCount,c=e.target;if(o&&c.nodeType&&("click"!==e.type||isNaN(e.button)||e.button<1))for(;c!=this;c=c.parentNode||this)if(1===c.nodeType&&(!0!==c.disabled||"click"!==e.type)){for(i=[],a=0;a<o;a++)r=t[a],n=r.selector+" ",i[n]===undefined&&(i[n]=r.needsContext?me(n,this).index(c)>-1:me.find(n,this,null,[c]).length),i[n]&&i.push(r);i.length&&s.push({elem:c,handlers:i})}return o<t.length&&s.push({elem:this,handlers:t.slice(o)}),s},fix:function(e){if(e[me.expando])return e;var t,a,i,n=e.type,r=e,s=this.fixHooks[n];for(s||(this.fixHooks[n]=s=Qe.test(n)?this.mouseHooks:Ke.test(n)?this.keyHooks:{}),i=s.props?this.props.concat(s.props):this.props,e=new me.Event(r),t=i.length;t--;)a=i[t],e[a]=r[a];return e.target||(e.target=r.srcElement||ie),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,r):e},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var a,i,n,r=t.button,s=t.fromElement;return null==e.pageX&&null!=t.clientX&&(i=e.target.ownerDocument||ie,n=i.documentElement,a=i.body,e.pageX=t.clientX+(n&&n.scrollLeft||a&&a.scrollLeft||0)-(n&&n.clientLeft||a&&a.clientLeft||0),e.pageY=t.clientY+(n&&n.scrollTop||a&&a.scrollTop||0)-(n&&n.clientTop||a&&a.clientTop||0)),!e.relatedTarget&&s&&(e.relatedTarget=s===e.target?t.toElement:s),e.which||r===undefined||(e.which=1&r?1:2&r?3:4&r?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==_()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){if(this===_()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if(me.nodeName(this,"input")&&"checkbox"===this.type&&this.click)return this.click(),!1},_default:function(e){return me.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){e.result!==undefined&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,a){var i=me.extend(new me.Event,a,{type:e,isSimulated:!0});me.event.trigger(i,null,t),i.isDefaultPrevented()&&a.preventDefault()}},me.removeEvent=ie.removeEventListener?function(e,t,a){e.removeEventListener&&e.removeEventListener(t,a)}:function(e,t,a){var i="on"+t;e.detachEvent&&("undefined"==typeof e[i]&&(e[i]=null),e.detachEvent(i,a))},me.Event=function(e,t){if(!(this instanceof me.Event))return new me.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.defaultPrevented===undefined&&!1===e.returnValue?v:b):this.type=e,t&&me.extend(this,t),this.timeStamp=e&&e.timeStamp||me.now(),this[me.expando]=!0},me.Event.prototype={constructor:me.Event,isDefaultPrevented:b,isPropagationStopped:b,isImmediatePropagationStopped:b,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=v,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=v,e&&!this.isSimulated&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=v,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},me.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){me.event.special[e]={delegateType:t,bindType:t,handle:function(e){var a,i=this,n=e.relatedTarget,r=e.handleObj;return n&&(n===i||me.contains(i,n))||(e.type=r.origType,a=r.handler.apply(this,arguments),e.type=t),a}}}),pe.submit||(me.event.special.submit={setup:function(){if(me.nodeName(this,"form"))return!1;me.event.add(this,"click._submit keypress._submit",function(e){var t=e.target,a=me.nodeName(t,"input")||me.nodeName(t,"button")?me.prop(t,"form"):undefined;a&&!me._data(a,"submit")&&(me.event.add(a,"submit._submit",function(e){e._submitBubble=!0}),me._data(a,"submit",!0))})},postDispatch:function(e){e._submitBubble&&(delete e._submitBubble,this.parentNode&&!e.isTrigger&&me.event.simulate("submit",this.parentNode,e))},teardown:function(){if(me.nodeName(this,"form"))return!1;me.event.remove(this,"._submit")}}),pe.change||(me.event.special.change={setup:function(){if(Ge.test(this.nodeName))return"checkbox"!==this.type&&"radio"!==this.type||(me.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._justChanged=!0)}),me.event.add(this,"click._change",function(e){this._justChanged&&!e.isTrigger&&(this._justChanged=!1),me.event.simulate("change",this,e)})),!1;me.event.add(this,"beforeactivate._change",function(e){var t=e.target;Ge.test(t.nodeName)&&!me._data(t,"change")&&(me.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||me.event.simulate("change",this.parentNode,e)}),me._data(t,"change",!0))})},handle:function(e){var t=e.target;if(this!==t||e.isSimulated||e.isTrigger||"radio"!==t.type&&"checkbox"!==t.type)return e.handleObj.handler.apply(this,arguments)},teardown:function(){return me.event.remove(this,"._change"),!Ge.test(this.nodeName)}}),pe.focusin||me.each({focus:"focusin",blur:"focusout"},function(e,t){var a=function(e){me.event.simulate(t,e.target,me.event.fix(e))};me.event.special[t]={setup:function(){var i=this.ownerDocument||this,n=me._data(i,t);n||i.addEventListener(e,a,!0),me._data(i,t,(n||0)+1)},teardown:function(){var i=this.ownerDocument||this,n=me._data(i,t)-1;n?me._data(i,t,n):(i.removeEventListener(e,a,!0),me._removeData(i,t))}}}),me.fn.extend({on:function(e,t,a,i){return q(this,e,t,a,i)},one:function(e,t,a,i){return q(this,e,t,a,i,1)},off:function(e,t,a){var i,n;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,me(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(n in e)this.off(n,t,e[n]);return this}return!1!==t&&"function"!=typeof t||(a=t,t=undefined),!1===a&&(a=b),this.each(function(){me.event.remove(this,e,a,t)})},trigger:function(e,t){return this.each(function(){me.event.trigger(e,t,this)})},triggerHandler:function(e,t){var a=this[0];if(a)return me.event.trigger(e,t,a,!0)}});var Ze=/ jQuery\d+="(?:null|\d+)"/g,Je=new RegExp("<(?:"+Ue+")[\\s/>]","i"),et=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,tt=/<script|<style|<link/i,at=/checked\s*(?:[^=]|=\s*.checked.)/i,it=/^true\/(.*)/,nt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,rt=m(ie),st=rt.appendChild(ie.createElement("div"));me.extend({htmlPrefilter:function(e){return e.replace(et,"<$1></$2>")},clone:function(e,t,a){var i,n,r,s,o,c=me.contains(e.ownerDocument,e);if(pe.html5Clone||me.isXMLDoc(e)||!Je.test("<"+e.nodeName+">")?r=e.cloneNode(!0):(st.innerHTML=e.outerHTML,st.removeChild(r=st.firstChild)),!(pe.noCloneEvent&&pe.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||me.isXMLDoc(e)))for(i=g(r),o=g(e),s=0;null!=(n=o[s]);++s)i[s]&&T(n,i[s]);if(t)if(a)for(o=o||g(e),i=i||g(r),s=0;null!=(n=o[s]);s++)j(n,i[s]);else j(e,r);return i=g(r,"script"),i.length>0&&f(i,!c&&g(e,"script")),i=o=n=null,r},cleanData:function(e,t){for(var a,i,n,r,s=0,o=me.expando,c=me.cache,l=pe.attributes,d=me.event.special;null!=(a=e[s]);s++)if((t||Ae(a))&&(n=a[o],r=n&&c[n])){if(r.events)for(i in r.events)d[i]?me.event.remove(a,i):me.removeEvent(a,i,r.handle);c[n]&&(delete c[n],l||"undefined"==typeof a.removeAttribute?a[o]=undefined:a.removeAttribute(o),ae.push(n))}}}),me.fn.extend({domManip:z,detach:function(e){return E(this,e,!0)},remove:function(e){return E(this,e)},text:function(e){return Le(this,function(e){return e===undefined?me.text(this):this.empty().append((this[0]&&this[0].ownerDocument||ie).createTextNode(e))},null,e,arguments.length)},append:function(){return z(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){w(this,e).appendChild(e)}})},prepend:function(){return z(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=w(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return z(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return z(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++){for(1===e.nodeType&&me.cleanData(g(e,!1));e.firstChild;)e.removeChild(e.firstChild);e.options&&me.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return me.clone(this,e,t)})},html:function(e){return Le(this,function(e){var t=this[0]||{},a=0,i=this.length;if(e===undefined)return 1===t.nodeType?t.innerHTML.replace(Ze,""):undefined;if("string"==typeof e&&!tt.test(e)&&(pe.htmlSerialize||!Je.test(e))&&(pe.leadingWhitespace||!Be.test(e))&&!He[(Fe.exec(e)||["",""])[1].toLowerCase()]){e=me.htmlPrefilter(e);try{for(;a<i;a++)t=this[a]||{},1===t.nodeType&&(me.cleanData(g(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return z(this,arguments,function(t){var a=this.parentNode;me.inArray(this,e)<0&&(me.cleanData(g(this)),a&&a.replaceChild(t,this))},e)}}),me.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){me.fn[e]=function(e){for(var a,i=0,n=[],r=me(e),s=r.length-1;i<=s;i++)a=i===s?this:this.clone(!0),me(r[i])[t](a),se.apply(n,a.get());return this.pushStack(n)}});var ot,ct={HTML:"block",BODY:"block"},lt=/^margin/,dt=new RegExp("^("+Pe+")(?!px)[a-z%]+$","i"),pt=function(e,t,a,i){var n,r,s={};for(r in t)s[r]=e.style[r],e.style[r]=t[r];n=a.apply(e,i||[]);for(r in t)e.style[r]=s[r];return n},ut=ie.documentElement;!function(){function t(){var t,d,p=ie.documentElement;p.appendChild(c),
l.style.cssText="-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a=n=o=!1,i=s=!0,e.getComputedStyle&&(d=e.getComputedStyle(l),a="1%"!==(d||{}).top,o="2px"===(d||{}).marginLeft,n="4px"===(d||{width:"4px"}).width,l.style.marginRight="50%",i="4px"===(d||{marginRight:"4px"}).marginRight,t=l.appendChild(ie.createElement("div")),t.style.cssText=l.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",t.style.marginRight=t.style.width="0",l.style.width="1px",s=!parseFloat((e.getComputedStyle(t)||{}).marginRight),l.removeChild(t)),l.style.display="none",r=0===l.getClientRects().length,r&&(l.style.display="",l.innerHTML="<table><tr><td></td><td>t</td></tr></table>",l.childNodes[0].style.borderCollapse="separate",t=l.getElementsByTagName("td"),t[0].style.cssText="margin:0;border:0;padding:0;display:none",(r=0===t[0].offsetHeight)&&(t[0].style.display="",t[1].style.display="none",r=0===t[0].offsetHeight)),p.removeChild(c)}var a,i,n,r,s,o,c=ie.createElement("div"),l=ie.createElement("div");l.style&&(l.style.cssText="float:left;opacity:.5",pe.opacity="0.5"===l.style.opacity,pe.cssFloat=!!l.style.cssFloat,l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",pe.clearCloneStyle="content-box"===l.style.backgroundClip,c=ie.createElement("div"),c.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",l.innerHTML="",c.appendChild(l),pe.boxSizing=""===l.style.boxSizing||""===l.style.MozBoxSizing||""===l.style.WebkitBoxSizing,me.extend(pe,{reliableHiddenOffsets:function(){return null==a&&t(),r},boxSizingReliable:function(){return null==a&&t(),n},pixelMarginRight:function(){return null==a&&t(),i},pixelPosition:function(){return null==a&&t(),a},reliableMarginRight:function(){return null==a&&t(),s},reliableMarginLeft:function(){return null==a&&t(),o}}))}();var mt,gt,ft=/^(top|right|bottom|left)$/;e.getComputedStyle?(mt=function(t){var a=t.ownerDocument.defaultView;return a&&a.opener||(a=e),a.getComputedStyle(t)},gt=function(e,t,a){var i,n,r,s,o=e.style;return a=a||mt(e),s=a?a.getPropertyValue(t)||a[t]:undefined,""!==s&&s!==undefined||me.contains(e.ownerDocument,e)||(s=me.style(e,t)),a&&!pe.pixelMarginRight()&&dt.test(s)&&lt.test(t)&&(i=o.width,n=o.minWidth,r=o.maxWidth,o.minWidth=o.maxWidth=o.width=s,s=a.width,o.width=i,o.minWidth=n,o.maxWidth=r),s===undefined?s:s+""}):ut.currentStyle&&(mt=function(e){return e.currentStyle},gt=function(e,t,a){var i,n,r,s,o=e.style;return a=a||mt(e),s=a?a[t]:undefined,null==s&&o&&o[t]&&(s=o[t]),dt.test(s)&&!ft.test(t)&&(i=o.left,n=e.runtimeStyle,r=n&&n.left,r&&(n.left=e.currentStyle.left),o.left="fontSize"===t?"1em":s,s=o.pixelLeft+"px",o.left=i,r&&(n.left=r)),s===undefined?s:s+""||"auto"});var yt=/alpha\([^)]*\)/i,ht=/opacity\s*=\s*([^)]*)/i,vt=/^(none|table(?!-c[ea]).+)/,bt=new RegExp("^("+Pe+")(.*)$","i"),_t={position:"absolute",visibility:"hidden",display:"block"},qt={letterSpacing:"0",fontWeight:"400"},wt=["Webkit","O","Moz","ms"],kt=ie.createElement("div").style;me.extend({cssHooks:{opacity:{get:function(e,t){if(t){var a=gt(e,"opacity");return""===a?"1":a}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":pe.cssFloat?"cssFloat":"styleFloat"},style:function(e,t,a,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var n,r,s,o=me.camelCase(t),c=e.style;if(t=me.cssProps[o]||(me.cssProps[o]=I(o)||o),s=me.cssHooks[t]||me.cssHooks[o],a===undefined)return s&&"get"in s&&(n=s.get(e,!1,i))!==undefined?n:c[t];if(r=typeof a,"string"===r&&(n=Ne.exec(a))&&n[1]&&(a=u(e,t,n),r="number"),null!=a&&a===a&&("number"===r&&(a+=n&&n[3]||(me.cssNumber[o]?"":"px")),pe.clearCloneStyle||""!==a||0!==t.indexOf("background")||(c[t]="inherit"),!(s&&"set"in s&&(a=s.set(e,a,i))===undefined)))try{c[t]=a}catch(e){}}},css:function(e,t,a,i){var n,r,s,o=me.camelCase(t);return t=me.cssProps[o]||(me.cssProps[o]=I(o)||o),s=me.cssHooks[t]||me.cssHooks[o],s&&"get"in s&&(r=s.get(e,!0,a)),r===undefined&&(r=gt(e,t,i)),"normal"===r&&t in qt&&(r=qt[t]),""===a||a?(n=parseFloat(r),!0===a||isFinite(n)?n||0:r):r}}),me.each(["height","width"],function(e,t){me.cssHooks[t]={get:function(e,a,i){if(a)return vt.test(me.css(e,"display"))&&0===e.offsetWidth?pt(e,_t,function(){return D(e,t,i)}):D(e,t,i)},set:function(e,a,i){var n=i&&mt(e);return P(e,a,i?N(e,t,i,pe.boxSizing&&"border-box"===me.css(e,"boxSizing",!1,n),n):0)}}}),pe.opacity||(me.cssHooks.opacity={get:function(e,t){return ht.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var a=e.style,i=e.currentStyle,n=me.isNumeric(t)?"alpha(opacity="+100*t+")":"",r=i&&i.filter||a.filter||"";a.zoom=1,(t>=1||""===t)&&""===me.trim(r.replace(yt,""))&&a.removeAttribute&&(a.removeAttribute("filter"),""===t||i&&!i.filter)||(a.filter=yt.test(r)?r.replace(yt,n):r+" "+n)}}),me.cssHooks.marginRight=A(pe.reliableMarginRight,function(e,t){if(t)return pt(e,{display:"inline-block"},gt,[e,"marginRight"])}),me.cssHooks.marginLeft=A(pe.reliableMarginLeft,function(e,t){if(t)return(parseFloat(gt(e,"marginLeft"))||(me.contains(e.ownerDocument,e)?e.getBoundingClientRect().left-pt(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}):0))+"px"}),me.each({margin:"",padding:"",border:"Width"},function(e,t){me.cssHooks[e+t]={expand:function(a){for(var i=0,n={},r="string"==typeof a?a.split(" "):[a];i<4;i++)n[e+De[i]+t]=r[i]||r[i-2]||r[0];return n}},lt.test(e)||(me.cssHooks[e+t].set=P)}),me.fn.extend({css:function(e,t){return Le(this,function(e,t,a){var i,n,r={},s=0;if(me.isArray(t)){for(i=mt(e),n=t.length;s<n;s++)r[t[s]]=me.css(e,t[s],!1,i);return r}return a!==undefined?me.style(e,t,a):me.css(e,t)},e,t,arguments.length>1)},show:function(){return R(this,!0)},hide:function(){return R(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Oe(this)?me(this).show():me(this).hide()})}}),me.Tween=O,O.prototype={constructor:O,init:function(e,t,a,i,n,r){this.elem=e,this.prop=a,this.easing=n||me.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||(me.cssNumber[a]?"":"px")},cur:function(){var e=O.propHooks[this.prop];return e&&e.get?e.get(this):O.propHooks._default.get(this)},run:function(e){var t,a=O.propHooks[this.prop];return this.options.duration?this.pos=t=me.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),a&&a.set?a.set(this):O.propHooks._default.set(this),this}},O.prototype.init.prototype=O.prototype,O.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=me.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){me.fx.step[e.prop]?me.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[me.cssProps[e.prop]]&&!me.cssHooks[e.prop]?e.elem[e.prop]=e.now:me.style(e.elem,e.prop,e.now+e.unit)}}},O.propHooks.scrollTop=O.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},me.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},me.fx=O.prototype.init,me.fx.step={};var xt,jt,Tt=/^(?:toggle|show|hide)$/,zt=/queueHooks$/;me.Animation=me.extend(U,{tweeners:{"*":[function(e,t){var a=this.createTween(e,t);return u(a.elem,e,Ne.exec(t),a),a}]},tweener:function(e,t){me.isFunction(e)?(t=e,e=["*"]):e=e.match(Ee);for(var a,i=0,n=e.length;i<n;i++)a=e[i],U.tweeners[a]=U.tweeners[a]||[],U.tweeners[a].unshift(t)},prefilters:[$],prefilter:function(e,t){t?U.prefilters.unshift(e):U.prefilters.push(e)}}),me.speed=function(e,t,a){var i=e&&"object"==typeof e?me.extend({},e):{complete:a||!a&&t||me.isFunction(e)&&e,duration:e,easing:a&&t||t&&!me.isFunction(t)&&t};return i.duration=me.fx.off?0:"number"==typeof i.duration?i.duration:i.duration in me.fx.speeds?me.fx.speeds[i.duration]:me.fx.speeds._default,null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){me.isFunction(i.old)&&i.old.call(this),i.queue&&me.dequeue(this,i.queue)},i},me.fn.extend({fadeTo:function(e,t,a,i){return this.filter(Oe).css("opacity",0).show().end().animate({opacity:t},e,a,i)},animate:function(e,t,a,i){var n=me.isEmptyObject(e),r=me.speed(t,a,i),s=function(){var t=U(this,me.extend({},e),r);(n||me._data(this,"finish"))&&t.stop(!0)};return s.finish=s,n||!1===r.queue?this.each(s):this.queue(r.queue,s)},stop:function(e,t,a){var i=function(e){var t=e.stop;delete e.stop,t(a)};return"string"!=typeof e&&(a=t,t=e,e=undefined),t&&!1!==e&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=null!=e&&e+"queueHooks",r=me.timers,s=me._data(this);if(n)s[n]&&s[n].stop&&i(s[n]);else for(n in s)s[n]&&s[n].stop&&zt.test(n)&&i(s[n]);for(n=r.length;n--;)r[n].elem!==this||null!=e&&r[n].queue!==e||(r[n].anim.stop(a),t=!1,r.splice(n,1));!t&&a||me.dequeue(this,e)})},finish:function(e){return!1!==e&&(e=e||"fx"),this.each(function(){var t,a=me._data(this),i=a[e+"queue"],n=a[e+"queueHooks"],r=me.timers,s=i?i.length:0;for(a.finish=!0,me.queue(this,e,[]),n&&n.stop&&n.stop.call(this,!0),t=r.length;t--;)r[t].elem===this&&r[t].queue===e&&(r[t].anim.stop(!0),r.splice(t,1));for(t=0;t<s;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete a.finish})}}),me.each(["toggle","show","hide"],function(e,t){var a=me.fn[t];me.fn[t]=function(e,i,n){return null==e||"boolean"==typeof e?a.apply(this,arguments):this.animate(M(t,!0),e,i,n)}}),me.each({slideDown:M("show"),slideUp:M("hide"),slideToggle:M("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){me.fn[e]=function(e,a,i){return this.animate(t,e,a,i)}}),me.timers=[],me.fx.tick=function(){var e,t=me.timers,a=0;for(xt=me.now();a<t.length;a++)(e=t[a])()||t[a]!==e||t.splice(a--,1);t.length||me.fx.stop(),xt=undefined},me.fx.timer=function(e){me.timers.push(e),e()?me.fx.start():me.timers.pop()},me.fx.interval=13,me.fx.start=function(){jt||(jt=e.setInterval(me.fx.tick,me.fx.interval))},me.fx.stop=function(){e.clearInterval(jt),jt=null},me.fx.speeds={slow:600,fast:200,_default:400},me.fn.delay=function(t,a){return t=me.fx?me.fx.speeds[t]||t:t,a=a||"fx",this.queue(a,function(a,i){var n=e.setTimeout(a,t);i.stop=function(){e.clearTimeout(n)}})},function(){var e,t=ie.createElement("input"),a=ie.createElement("div"),i=ie.createElement("select"),n=i.appendChild(ie.createElement("option"));a=ie.createElement("div"),a.setAttribute("className","t"),a.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",e=a.getElementsByTagName("a")[0],t.setAttribute("type","checkbox"),a.appendChild(t),e=a.getElementsByTagName("a")[0],e.style.cssText="top:1px",pe.getSetAttribute="t"!==a.className,pe.style=/top/.test(e.getAttribute("style")),pe.hrefNormalized="/a"===e.getAttribute("href"),pe.checkOn=!!t.value,pe.optSelected=n.selected,pe.enctype=!!ie.createElement("form").enctype,i.disabled=!0,pe.optDisabled=!n.disabled,t=ie.createElement("input"),t.setAttribute("value",""),pe.input=""===t.getAttribute("value"),t.value="t",t.setAttribute("type","radio"),pe.radioValue="t"===t.value}();var Et=/\r/g,Ct=/[\x20\t\r\n\f]+/g;me.fn.extend({val:function(e){var t,a,i,n=this[0];{if(arguments.length)return i=me.isFunction(e),this.each(function(a){var n;1===this.nodeType&&(n=i?e.call(this,a,me(this).val()):e,null==n?n="":"number"==typeof n?n+="":me.isArray(n)&&(n=me.map(n,function(e){return null==e?"":e+""})),(t=me.valHooks[this.type]||me.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&t.set(this,n,"value")!==undefined||(this.value=n))});if(n)return(t=me.valHooks[n.type]||me.valHooks[n.nodeName.toLowerCase()])&&"get"in t&&(a=t.get(n,"value"))!==undefined?a:(a=n.value,"string"==typeof a?a.replace(Et,""):null==a?"":a)}}}),me.extend({valHooks:{option:{get:function(e){var t=me.find.attr(e,"value");return null!=t?t:me.trim(me.text(e)).replace(Ct," ")}},select:{get:function(e){for(var t,a,i=e.options,n=e.selectedIndex,r="select-one"===e.type||n<0,s=r?null:[],o=r?n+1:i.length,c=n<0?o:r?n:0;c<o;c++)if(a=i[c],(a.selected||c===n)&&(pe.optDisabled?!a.disabled:null===a.getAttribute("disabled"))&&(!a.parentNode.disabled||!me.nodeName(a.parentNode,"optgroup"))){if(t=me(a).val(),r)return t;s.push(t)}return s},set:function(e,t){for(var a,i,n=e.options,r=me.makeArray(t),s=n.length;s--;)if(i=n[s],me.inArray(me.valHooks.option.get(i),r)>-1)try{i.selected=a=!0}catch(e){i.scrollHeight}else i.selected=!1;return a||(e.selectedIndex=-1),n}}}}),me.each(["radio","checkbox"],function(){me.valHooks[this]={set:function(e,t){if(me.isArray(t))return e.checked=me.inArray(me(e).val(),t)>-1}},pe.checkOn||(me.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var St,At,It=me.expr.attrHandle,Rt=/^(?:checked|selected)$/i,Pt=pe.getSetAttribute,Nt=pe.input;me.fn.extend({attr:function(e,t){return Le(this,me.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){me.removeAttr(this,e)})}}),me.extend({attr:function(e,t,a){var i,n,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return"undefined"==typeof e.getAttribute?me.prop(e,t,a):(1===r&&me.isXMLDoc(e)||(t=t.toLowerCase(),n=me.attrHooks[t]||(me.expr.match.bool.test(t)?At:St)),a!==undefined?null===a?void me.removeAttr(e,t):n&&"set"in n&&(i=n.set(e,a,t))!==undefined?i:(e.setAttribute(t,a+""),a):n&&"get"in n&&null!==(i=n.get(e,t))?i:(i=me.find.attr(e,t),null==i?undefined:i))},attrHooks:{type:{set:function(e,t){if(!pe.radioValue&&"radio"===t&&me.nodeName(e,"input")){var a=e.value;return e.setAttribute("type",t),a&&(e.value=a),t}}}},removeAttr:function(e,t){var a,i,n=0,r=t&&t.match(Ee);if(r&&1===e.nodeType)for(;a=r[n++];)i=me.propFix[a]||a,me.expr.match.bool.test(a)?Nt&&Pt||!Rt.test(a)?e[i]=!1:e[me.camelCase("default-"+a)]=e[i]=!1:me.attr(e,a,""),e.removeAttribute(Pt?a:i)}}),At={set:function(e,t,a){return!1===t?me.removeAttr(e,a):Nt&&Pt||!Rt.test(a)?e.setAttribute(!Pt&&me.propFix[a]||a,a):e[me.camelCase("default-"+a)]=e[a]=!0,a}},me.each(me.expr.match.bool.source.match(/\w+/g),function(e,t){var a=It[t]||me.find.attr;Nt&&Pt||!Rt.test(t)?It[t]=function(e,t,i){var n,r;return i||(r=It[t],It[t]=n,n=null!=a(e,t,i)?t.toLowerCase():null,It[t]=r),n}:It[t]=function(e,t,a){if(!a)return e[me.camelCase("default-"+t)]?t.toLowerCase():null}}),Nt&&Pt||(me.attrHooks.value={set:function(e,t,a){if(!me.nodeName(e,"input"))return St&&St.set(e,t,a);e.defaultValue=t}}),Pt||(St={set:function(e,t,a){var i=e.getAttributeNode(a);if(i||e.setAttributeNode(i=e.ownerDocument.createAttribute(a)),i.value=t+="","value"===a||t===e.getAttribute(a))return t}},It.id=It.name=It.coords=function(e,t,a){var i;if(!a)return(i=e.getAttributeNode(t))&&""!==i.value?i.value:null},me.valHooks.button={get:function(e,t){var a=e.getAttributeNode(t);if(a&&a.specified)return a.value},set:St.set},me.attrHooks.contenteditable={set:function(e,t,a){St.set(e,""!==t&&t,a)}},me.each(["width","height"],function(e,t){me.attrHooks[t]={set:function(e,a){if(""===a)return e.setAttribute(t,"auto"),a}}})),pe.style||(me.attrHooks.style={get:function(e){return e.style.cssText||undefined},set:function(e,t){return e.style.cssText=t+""}});var Dt=/^(?:input|select|textarea|button|object)$/i,Ot=/^(?:a|area)$/i;me.fn.extend({prop:function(e,t){return Le(this,me.prop,e,t,arguments.length>1)},removeProp:function(e){return e=me.propFix[e]||e,this.each(function(){try{this[e]=undefined,delete this[e]}catch(e){}})}}),me.extend({prop:function(e,t,a){var i,n,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&me.isXMLDoc(e)||(t=me.propFix[t]||t,n=me.propHooks[t]),a!==undefined?n&&"set"in n&&(i=n.set(e,a,t))!==undefined?i:e[t]=a:n&&"get"in n&&null!==(i=n.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=me.find.attr(e,"tabindex");return t?parseInt(t,10):Dt.test(e.nodeName)||Ot.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),pe.hrefNormalized||me.each(["href","src"],function(e,t){me.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),pe.optSelected||(me.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),me.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){me.propFix[this.toLowerCase()]=this}),pe.enctype||(me.propFix.enctype="encoding");var Lt=/[\t\r\n\f]/g;me.fn.extend({addClass:function(e){var t,a,i,n,r,s,o,c=0;if(me.isFunction(e))return this.each(function(t){me(this).addClass(e.call(this,t,H(this)))});if("string"==typeof e&&e)for(t=e.match(Ee)||[];a=this[c++];)if(n=H(a),i=1===a.nodeType&&(" "+n+" ").replace(Lt," ")){for(s=0;r=t[s++];)i.indexOf(" "+r+" ")<0&&(i+=r+" ");o=me.trim(i),n!==o&&me.attr(a,"class",o)}return this},removeClass:function(e){var t,a,i,n,r,s,o,c=0;if(me.isFunction(e))return this.each(function(t){me(this).removeClass(e.call(this,t,H(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(Ee)||[];a=this[c++];)if(n=H(a),i=1===a.nodeType&&(" "+n+" ").replace(Lt," ")){for(s=0;r=t[s++];)for(;i.indexOf(" "+r+" ")>-1;)i=i.replace(" "+r+" "," ");o=me.trim(i),n!==o&&me.attr(a,"class",o)}return this},toggleClass:function(e,t){var a=typeof e;return"boolean"==typeof t&&"string"===a?t?this.addClass(e):this.removeClass(e):me.isFunction(e)?this.each(function(a){me(this).toggleClass(e.call(this,a,H(this),t),t)}):this.each(function(){var t,i,n,r;if("string"===a)for(i=0,n=me(this),r=e.match(Ee)||[];t=r[i++];)n.hasClass(t)?n.removeClass(t):n.addClass(t);else e!==undefined&&"boolean"!==a||(t=H(this),t&&me._data(this,"__className__",t),me.attr(this,"class",t||!1===e?"":me._data(this,"__className__")||""))})},hasClass:function(e){var t,a,i=0;for(t=" "+e+" ";a=this[i++];)if(1===a.nodeType&&(" "+H(a)+" ").replace(Lt," ").indexOf(t)>-1)return!0;return!1}}),me.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){me.fn[t]=function(e,a){return arguments.length>0?this.on(t,null,e,a):this.trigger(t)}}),me.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}});var Mt=e.location,Ft=me.now(),$t=/\?/,Bt=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;me.parseJSON=function(t){if(e.JSON&&e.JSON.parse)return e.JSON.parse(t+"");var a,i=null,n=me.trim(t+"");return n&&!me.trim(n.replace(Bt,function(e,t,n,r){return a&&t&&(i=0),0===i?e:(a=n||t,i+=!r-!n,"")}))?Function("return "+n)():me.error("Invalid JSON: "+t)},me.parseXML=function(t){var a,i;if(!t||"string"!=typeof t)return null;try{e.DOMParser?(i=new e.DOMParser,a=i.parseFromString(t,"text/xml")):(a=new e.ActiveXObject("Microsoft.XMLDOM"),a.async="false",a.loadXML(t))}catch(e){a=undefined}return a&&a.documentElement&&!a.getElementsByTagName("parsererror").length||me.error("Invalid XML: "+t),a};var Ut=/#.*$/,Ht=/([?&])_=[^&]*/,Wt=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Vt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Gt=/^(?:GET|HEAD)$/,Kt=/^\/\//,Qt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Yt={},Xt={},Zt="*/".concat("*"),Jt=Mt.href,ea=Qt.exec(Jt.toLowerCase())||[];me.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Jt,type:"GET",isLocal:Vt.test(ea[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Zt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":me.parseJSON,"text xml":me.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?G(G(e,me.ajaxSettings),t):G(me.ajaxSettings,e)},ajaxPrefilter:W(Yt),ajaxTransport:W(Xt),ajax:function(t,a){function i(t,a,i,n){var r,p,v,b,q,k=a;2!==_&&(_=2,c&&e.clearTimeout(c),d=undefined,o=n||"",w.readyState=t>0?4:0,r=t>=200&&t<300||304===t,i&&(b=K(u,w,i)),b=Q(u,b,w,r),r?(u.ifModified&&(q=w.getResponseHeader("Last-Modified"),q&&(me.lastModified[s]=q),(q=w.getResponseHeader("etag"))&&(me.etag[s]=q)),204===t||"HEAD"===u.type?k="nocontent":304===t?k="notmodified":(k=b.state,p=b.data,v=b.error,r=!v)):(v=k,!t&&k||(k="error",t<0&&(t=0))),w.status=t,w.statusText=(a||k)+"",r?f.resolveWith(m,[p,k,w]):f.rejectWith(m,[w,k,v]),w.statusCode(h),h=undefined,l&&g.trigger(r?"ajaxSuccess":"ajaxError",[w,u,r?p:v]),y.fireWith(m,[w,k]),l&&(g.trigger("ajaxComplete",[w,u]),--me.active||me.event.trigger("ajaxStop")))}"object"==typeof t&&(a=t,t=undefined),a=a||{};var n,r,s,o,c,l,d,p,u=me.ajaxSetup({},a),m=u.context||u,g=u.context&&(m.nodeType||m.jquery)?me(m):me.event,f=me.Deferred(),y=me.Callbacks("once memory"),h=u.statusCode||{},v={},b={},_=0,q="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(2===_){if(!p)for(p={};t=Wt.exec(o);)p[t[1].toLowerCase()]=t[2];t=p[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===_?o:null},setRequestHeader:function(e,t){var a=e.toLowerCase();return _||(e=b[a]=b[a]||e,v[e]=t),this},overrideMimeType:function(e){return _||(u.mimeType=e),this},statusCode:function(e){var t;if(e)if(_<2)for(t in e)h[t]=[h[t],e[t]];else w.always(e[w.status]);return this},abort:function(e){var t=e||q;return d&&d.abort(t),i(0,t),this}};if(f.promise(w).complete=y.add,w.success=w.done,w.error=w.fail,u.url=((t||u.url||Jt)+"").replace(Ut,"").replace(Kt,ea[1]+"//"),u.type=a.method||a.type||u.method||u.type,u.dataTypes=me.trim(u.dataType||"*").toLowerCase().match(Ee)||[""],null==u.crossDomain&&(n=Qt.exec(u.url.toLowerCase()),u.crossDomain=!(!n||n[1]===ea[1]&&n[2]===ea[2]&&(n[3]||("http:"===n[1]?"80":"443"))===(ea[3]||("http:"===ea[1]?"80":"443")))),u.data&&u.processData&&"string"!=typeof u.data&&(u.data=me.param(u.data,u.traditional)),V(Yt,u,a,w),2===_)return w;l=me.event&&u.global,l&&0==me.active++&&me.event.trigger("ajaxStart"),u.type=u.type.toUpperCase(),u.hasContent=!Gt.test(u.type),s=u.url,u.hasContent||(u.data&&(s=u.url+=($t.test(s)?"&":"?")+u.data,delete u.data),!1===u.cache&&(u.url=Ht.test(s)?s.replace(Ht,"$1_="+Ft++):s+($t.test(s)?"&":"?")+"_="+Ft++)),u.ifModified&&(me.lastModified[s]&&w.setRequestHeader("If-Modified-Since",me.lastModified[s]),me.etag[s]&&w.setRequestHeader("If-None-Match",me.etag[s])),(u.data&&u.hasContent&&!1!==u.contentType||a.contentType)&&w.setRequestHeader("Content-Type",u.contentType),w.setRequestHeader("Accept",u.dataTypes[0]&&u.accepts[u.dataTypes[0]]?u.accepts[u.dataTypes[0]]+("*"!==u.dataTypes[0]?", "+Zt+"; q=0.01":""):u.accepts["*"]);for(r in u.headers)w.setRequestHeader(r,u.headers[r]);if(u.beforeSend&&(!1===u.beforeSend.call(m,w,u)||2===_))return w.abort();q="abort";for(r in{success:1,error:1,complete:1})w[r](u[r]);if(d=V(Xt,u,a,w)){if(w.readyState=1,l&&g.trigger("ajaxSend",[w,u]),2===_)return w;u.async&&u.timeout>0&&(c=e.setTimeout(function(){w.abort("timeout")},u.timeout));try{_=1,d.send(v,i)}catch(e){if(!(_<2))throw e;i(-1,e)}}else i(-1,"No Transport");return w},getJSON:function(e,t,a){return me.get(e,t,a,"json")},getScript:function(e,t){return me.get(e,undefined,t,"script")}}),me.each(["get","post"],function(e,t){me[t]=function(e,a,i,n){return me.isFunction(a)&&(n=n||i,i=a,a=undefined),me.ajax(me.extend({url:e,type:t,dataType:n,data:a,success:i},me.isPlainObject(e)&&e))}}),me._evalUrl=function(e){return me.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},me.fn.extend({wrapAll:function(e){if(me.isFunction(e))return this.each(function(t){me(this).wrapAll(e.call(this,t))});if(this[0]){var t=me(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstChild&&1===e.firstChild.nodeType;)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return me.isFunction(e)?this.each(function(t){me(this).wrapInner(e.call(this,t))}):this.each(function(){var t=me(this),a=t.contents();a.length?a.wrapAll(e):t.append(e)})},wrap:function(e){var t=me.isFunction(e);return this.each(function(a){me(this).wrapAll(t?e.call(this,a):e)})},unwrap:function(){return this.parent().each(function(){me.nodeName(this,"body")||me(this).replaceWith(this.childNodes)}).end()}}),me.expr.filters.hidden=function(e){return pe.reliableHiddenOffsets()?e.offsetWidth<=0&&e.offsetHeight<=0&&!e.getClientRects().length:X(e)},me.expr.filters.visible=function(e){return!me.expr.filters.hidden(e)};var ta=/%20/g,aa=/\[\]$/,ia=/\r?\n/g,na=/^(?:submit|button|image|reset|file)$/i,ra=/^(?:input|select|textarea|keygen)/i;me.param=function(e,t){var a,i=[],n=function(e,t){t=me.isFunction(t)?t():null==t?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(t===undefined&&(t=me.ajaxSettings&&me.ajaxSettings.traditional),me.isArray(e)||e.jquery&&!me.isPlainObject(e))me.each(e,function(){n(this.name,this.value)});else for(a in e)Z(a,e[a],t,n);return i.join("&").replace(ta,"+")},me.fn.extend({serialize:function(){return me.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=me.prop(this,"elements");return e?me.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!me(this).is(":disabled")&&ra.test(this.nodeName)&&!na.test(e)&&(this.checked||!Me.test(e))}).map(function(e,t){var a=me(this).val();return null==a?null:me.isArray(a)?me.map(a,function(e){return{name:t.name,value:e.replace(ia,"\r\n")}}):{name:t.name,value:a.replace(ia,"\r\n")}}).get()}}),me.ajaxSettings.xhr=e.ActiveXObject!==undefined?function(){return this.isLocal?ee():ie.documentMode>8?J():/^(get|post|head|put|delete|options)$/i.test(this.type)&&J()||ee()}:J;var sa=0,oa={},ca=me.ajaxSettings.xhr();e.attachEvent&&e.attachEvent("onunload",function(){for(var e in oa)oa[e](undefined,!0)}),pe.cors=!!ca&&"withCredentials"in ca,ca=pe.ajax=!!ca,ca&&me.ajaxTransport(function(t){if(!t.crossDomain||pe.cors){var a;return{send:function(i,n){var r,s=t.xhr(),o=++sa;if(s.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(r in t.xhrFields)s[r]=t.xhrFields[r];t.mimeType&&s.overrideMimeType&&s.overrideMimeType(t.mimeType),t.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest");for(r in i)i[r]!==undefined&&s.setRequestHeader(r,i[r]+"");s.send(t.hasContent&&t.data||null),a=function(e,i){var r,c,l;if(a&&(i||4===s.readyState))if(delete oa[o],a=undefined,s.onreadystatechange=me.noop,i)4!==s.readyState&&s.abort();else{l={},r=s.status,"string"==typeof s.responseText&&(l.text=s.responseText);try{c=s.statusText}catch(e){c=""}r||!t.isLocal||t.crossDomain?1223===r&&(r=204):r=l.text?200:404}l&&n(r,c,l,s.getAllResponseHeaders())},t.async?4===s.readyState?e.setTimeout(a):s.onreadystatechange=oa[o]=a:a()},abort:function(){a&&a(undefined,!0)}}}}),me.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return me.globalEval(e),e}}}),me.ajaxPrefilter("script",function(e){e.cache===undefined&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),me.ajaxTransport("script",function(e){if(e.crossDomain){var t,a=ie.head||me("head")[0]||ie.documentElement;return{send:function(i,n){t=ie.createElement("script"),t.async=!0,e.scriptCharset&&(t.charset=e.scriptCharset),t.src=e.url,t.onload=t.onreadystatechange=function(e,a){(a||!t.readyState||/loaded|complete/.test(t.readyState))&&(t.onload=t.onreadystatechange=null,t.parentNode&&t.parentNode.removeChild(t),t=null,a||n(200,"success"))},a.insertBefore(t,a.firstChild)},abort:function(){t&&t.onload(undefined,!0)}}}});var la=[],da=/(=)\?(?=&|$)|\?\?/;me.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=la.pop()||me.expando+"_"+Ft++;return this[e]=!0,e}}),me.ajaxPrefilter("json jsonp",function(t,a,i){var n,r,s,o=!1!==t.jsonp&&(da.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&da.test(t.data)&&"data");if(o||"jsonp"===t.dataTypes[0])return n=t.jsonpCallback=me.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,o?t[o]=t[o].replace(da,"$1"+n):!1!==t.jsonp&&(t.url+=($t.test(t.url)?"&":"?")+t.jsonp+"="+n),t.converters["script json"]=function(){return s||me.error(n+" was not called"),s[0]},t.dataTypes[0]="json",r=e[n],e[n]=function(){s=arguments},i.always(function(){r===undefined?me(e).removeProp(n):e[n]=r,t[n]&&(t.jsonpCallback=a.jsonpCallback,la.push(n)),s&&me.isFunction(r)&&r(s[0]),s=r=undefined}),"script"}),me.parseHTML=function(e,t,a){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(a=t,t=!1),t=t||ie;var i=we.exec(e),n=!a&&[];return i?[t.createElement(i[1])]:(i=h([e],t,n),n&&n.length&&me(n).remove(),me.merge([],i.childNodes))};var pa=me.fn.load;me.fn.load=function(e,t,a){if("string"!=typeof e&&pa)return pa.apply(this,arguments);var i,n,r,s=this,o=e.indexOf(" ");return o>-1&&(i=me.trim(e.slice(o,e.length)),e=e.slice(0,o)),me.isFunction(t)?(a=t,t=undefined):t&&"object"==typeof t&&(n="POST"),s.length>0&&me.ajax({url:e,type:n||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(i?me("<div>").append(me.parseHTML(e)).find(i):e)}).always(a&&function(e,t){s.each(function(){a.apply(this,r||[e.responseText,t,e])})}),this},me.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){me.fn[t]=function(e){return this.on(t,e)}}),me.expr.filters.animated=function(e){return me.grep(me.timers,function(t){return e===t.elem}).length},me.offset={setOffset:function(e,t,a){var i,n,r,s,o,c,l,d=me.css(e,"position"),p=me(e),u={};"static"===d&&(e.style.position="relative"),o=p.offset(),r=me.css(e,"top"),c=me.css(e,"left"),l=("absolute"===d||"fixed"===d)&&me.inArray("auto",[r,c])>-1,l?(i=p.position(),s=i.top,n=i.left):(s=parseFloat(r)||0,n=parseFloat(c)||0),me.isFunction(t)&&(t=t.call(e,a,me.extend({},o))),null!=t.top&&(u.top=t.top-o.top+s),null!=t.left&&(u.left=t.left-o.left+n),"using"in t?t.using.call(e,u):p.css(u)}},me.fn.extend({offset:function(e){if(arguments.length)return e===undefined?this:this.each(function(t){me.offset.setOffset(this,e,t)});var t,a,i={top:0,left:0},n=this[0],r=n&&n.ownerDocument;if(r)return t=r.documentElement,me.contains(t,n)?("undefined"!=typeof n.getBoundingClientRect&&(i=n.getBoundingClientRect()),a=te(r),{top:i.top+(a.pageYOffset||t.scrollTop)-(t.clientTop||0),left:i.left+(a.pageXOffset||t.scrollLeft)-(t.clientLeft||0)}):i},position:function(){if(this[0]){var e,t,a={top:0,left:0},i=this[0];return"fixed"===me.css(i,"position")?t=i.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),me.nodeName(e[0],"html")||(a=e.offset()),a.top+=me.css(e[0],"borderTopWidth",!0),a.left+=me.css(e[0],"borderLeftWidth",!0)),{top:t.top-a.top-me.css(i,"marginTop",!0),left:t.left-a.left-me.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&!me.nodeName(e,"html")&&"static"===me.css(e,"position");)e=e.offsetParent;return e||ut})}}),me.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var a=/Y/.test(t);me.fn[e]=function(i){return Le(this,function(e,i,n){var r=te(e);if(n===undefined)return r?t in r?r[t]:r.document.documentElement[i]:e[i];r?r.scrollTo(a?me(r).scrollLeft():n,a?n:me(r).scrollTop()):e[i]=n},e,i,arguments.length,null)}}),me.each(["top","left"],function(e,t){me.cssHooks[t]=A(pe.pixelPosition,function(e,a){if(a)return a=gt(e,t),dt.test(a)?me(e).position()[t]+"px":a})}),me.each({Height:"height",Width:"width"},function(e,t){me.each({padding:"inner"+e,content:t,"":"outer"+e},function(a,i){me.fn[i]=function(i,n){var r=arguments.length&&(a||"boolean"!=typeof i),s=a||(!0===i||!0===n?"margin":"border");return Le(this,function(t,a,i){var n;return me.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(n=t.documentElement,Math.max(t.body["scroll"+e],n["scroll"+e],t.body["offset"+e],n["offset"+e],n["client"+e])):i===undefined?me.css(t,a,s):me.style(t,a,i,s)},t,r?i:undefined,r,null)}})}),me.fn.extend({bind:function(e,t,a){return this.on(e,null,t,a)},unbind:function(e,t){return this.off(e,null,t)},
delegate:function(e,t,a,i){return this.on(t,e,a,i)},undelegate:function(e,t,a){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",a)}}),me.fn.size=function(){return this.length},me.fn.andSelf=me.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return me});var ua=e.jQuery,ma=e.$;return me.noConflict=function(t){return e.$===me&&(e.$=ma),t&&e.jQuery===me&&(e.jQuery=ua),me},t||(e.jQuery=e.$=me),me}),function(e,t){"use strict";e.rails!==t&&e.error("jquery-ujs has already been loaded!");var a,i=e(document);e.rails=a={linkClickSelector:"a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]",buttonClickSelector:"button[data-remote]:not([form]):not(form button), button[data-confirm]:not([form]):not(form button)",inputChangeSelector:"select[data-remote], input[data-remote], textarea[data-remote]",formSubmitSelector:"form",formInputClickSelector:"form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])",disableSelector:"input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled",enableSelector:"input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled",requiredInputSelector:"input[name][required]:not([disabled]), textarea[name][required]:not([disabled])",fileInputSelector:"input[name][type=file]:not([disabled])",linkDisableSelector:"a[data-disable-with], a[data-disable]",buttonDisableSelector:"button[data-remote][data-disable-with], button[data-remote][data-disable]",csrfToken:function(){return e("meta[name=csrf-token]").attr("content")},csrfParam:function(){return e("meta[name=csrf-param]").attr("content")},CSRFProtection:function(e){var t=a.csrfToken();t&&e.setRequestHeader("X-CSRF-Token",t)},refreshCSRFTokens:function(){e('form input[name="'+a.csrfParam()+'"]').val(a.csrfToken())},fire:function(t,a,i){var n=e.Event(a);return t.trigger(n,i),!1!==n.result},confirm:function(e){return confirm(e)},ajax:function(t){return e.ajax(t)},href:function(e){return e[0].href},isRemote:function(e){return e.data("remote")!==t&&!1!==e.data("remote")},handleRemote:function(i){var n,r,s,o,c,l;if(a.fire(i,"ajax:before")){if(o=i.data("with-credentials")||null,c=i.data("type")||e.ajaxSettings&&e.ajaxSettings.dataType,i.is("form")){n=i.data("ujs:submit-button-formmethod")||i.attr("method"),r=i.data("ujs:submit-button-formaction")||i.attr("action"),s=e(i[0]).serializeArray();var d=i.data("ujs:submit-button");d&&(s.push(d),i.data("ujs:submit-button",null)),i.data("ujs:submit-button-formmethod",null),i.data("ujs:submit-button-formaction",null)}else i.is(a.inputChangeSelector)?(n=i.data("method"),r=i.data("url"),s=i.serialize(),i.data("params")&&(s=s+"&"+i.data("params"))):i.is(a.buttonClickSelector)?(n=i.data("method")||"get",r=i.data("url"),s=i.serialize(),i.data("params")&&(s=s+"&"+i.data("params"))):(n=i.data("method"),r=a.href(i),s=i.data("params")||null);return l={type:n||"GET",data:s,dataType:c,beforeSend:function(e,n){if(n.dataType===t&&e.setRequestHeader("accept","*/*;q=0.5, "+n.accepts.script),!a.fire(i,"ajax:beforeSend",[e,n]))return!1;i.trigger("ajax:send",e)},success:function(e,t,a){i.trigger("ajax:success",[e,t,a])},complete:function(e,t){i.trigger("ajax:complete",[e,t])},error:function(e,t,a){i.trigger("ajax:error",[e,t,a])},crossDomain:a.isCrossDomain(r)},o&&(l.xhrFields={withCredentials:o}),r&&(l.url=r),a.ajax(l)}return!1},isCrossDomain:function(e){var t=document.createElement("a");t.href=location.href;var a=document.createElement("a");try{return a.href=e,a.href=a.href,!((!a.protocol||":"===a.protocol)&&!a.host||t.protocol+"//"+t.host==a.protocol+"//"+a.host)}catch(e){return!0}},handleMethod:function(i){var n=a.href(i),r=i.data("method"),s=i.attr("target"),o=a.csrfToken(),c=a.csrfParam(),l=e('<form method="post" action="'+n+'"></form>'),d='<input name="_method" value="'+r+'" type="hidden" />';c===t||o===t||a.isCrossDomain(n)||(d+='<input name="'+c+'" value="'+o+'" type="hidden" />'),s&&l.attr("target",s),l.hide().append(d).appendTo("body"),l.submit()},formElements:function(t,a){return t.is("form")?e(t[0].elements).filter(a):t.find(a)},disableFormElements:function(t){a.formElements(t,a.disableSelector).each(function(){a.disableFormElement(e(this))})},disableFormElement:function(e){var a,i;a=e.is("button")?"html":"val",i=e.data("disable-with"),i!==t&&(e.data("ujs:enable-with",e[a]()),e[a](i)),e.prop("disabled",!0),e.data("ujs:disabled",!0)},enableFormElements:function(t){a.formElements(t,a.enableSelector).each(function(){a.enableFormElement(e(this))})},enableFormElement:function(e){var a=e.is("button")?"html":"val";e.data("ujs:enable-with")!==t&&(e[a](e.data("ujs:enable-with")),e.removeData("ujs:enable-with")),e.prop("disabled",!1),e.removeData("ujs:disabled")},allowAction:function(e){var t,i=e.data("confirm"),n=!1;if(!i)return!0;if(a.fire(e,"confirm")){try{n=a.confirm(i)}catch(e){(console.error||console.log).call(console,e.stack||e)}t=a.fire(e,"confirm:complete",[n])}return n&&t},blankInputs:function(t,a,i){var n,r,s,o,c=e(),l=a||"input,textarea",d=t.find(l),p={};return d.each(function(){n=e(this),n.is("input[type=radio]")?(o=n.attr("name"),p[o]||(0===t.find('input[type=radio]:checked[name="'+o+'"]').length&&(s=t.find('input[type=radio][name="'+o+'"]'),c=c.add(s)),p[o]=o)):(r=n.is("input[type=checkbox],input[type=radio]")?n.is(":checked"):!!n.val())===i&&(c=c.add(n))}),!!c.length&&c},nonBlankInputs:function(e,t){return a.blankInputs(e,t,!0)},stopEverything:function(t){return e(t.target).trigger("ujs:everythingStopped"),t.stopImmediatePropagation(),!1},disableElement:function(e){var i=e.data("disable-with");i!==t&&(e.data("ujs:enable-with",e.html()),e.html(i)),e.bind("click.railsDisable",function(e){return a.stopEverything(e)}),e.data("ujs:disabled",!0)},enableElement:function(e){e.data("ujs:enable-with")!==t&&(e.html(e.data("ujs:enable-with")),e.removeData("ujs:enable-with")),e.unbind("click.railsDisable"),e.removeData("ujs:disabled")}},a.fire(i,"rails:attachBindings")&&(e.ajaxPrefilter(function(e,t,i){e.crossDomain||a.CSRFProtection(i)}),e(window).on("pageshow.rails",function(){e(e.rails.enableSelector).each(function(){var t=e(this);t.data("ujs:disabled")&&e.rails.enableFormElement(t)}),e(e.rails.linkDisableSelector).each(function(){var t=e(this);t.data("ujs:disabled")&&e.rails.enableElement(t)})}),i.on("ajax:complete",a.linkDisableSelector,function(){a.enableElement(e(this))}),i.on("ajax:complete",a.buttonDisableSelector,function(){a.enableFormElement(e(this))}),i.on("click.rails",a.linkClickSelector,function(t){var i=e(this),n=i.data("method"),r=i.data("params"),s=t.metaKey||t.ctrlKey;if(!a.allowAction(i))return a.stopEverything(t);if(!s&&i.is(a.linkDisableSelector)&&a.disableElement(i),a.isRemote(i)){if(s&&(!n||"GET"===n)&&!r)return!0;var o=a.handleRemote(i);return!1===o?a.enableElement(i):o.fail(function(){a.enableElement(i)}),!1}return n?(a.handleMethod(i),!1):void 0}),i.on("click.rails",a.buttonClickSelector,function(t){var i=e(this);if(!a.allowAction(i)||!a.isRemote(i))return a.stopEverything(t);i.is(a.buttonDisableSelector)&&a.disableFormElement(i);var n=a.handleRemote(i);return!1===n?a.enableFormElement(i):n.fail(function(){a.enableFormElement(i)}),!1}),i.on("change.rails",a.inputChangeSelector,function(t){var i=e(this);return a.allowAction(i)&&a.isRemote(i)?(a.handleRemote(i),!1):a.stopEverything(t)}),i.on("submit.rails",a.formSubmitSelector,function(i){var n,r,s=e(this),o=a.isRemote(s);if(!a.allowAction(s))return a.stopEverything(i);if(s.attr("novalidate")===t)if(s.data("ujs:formnovalidate-button")===t){if((n=a.blankInputs(s,a.requiredInputSelector,!1))&&a.fire(s,"ajax:aborted:required",[n]))return a.stopEverything(i)}else s.data("ujs:formnovalidate-button",t);if(o){if(r=a.nonBlankInputs(s,a.fileInputSelector)){setTimeout(function(){a.disableFormElements(s)},13);var c=a.fire(s,"ajax:aborted:file",[r]);return c||setTimeout(function(){a.enableFormElements(s)},13),c}return a.handleRemote(s),!1}setTimeout(function(){a.disableFormElements(s)},13)}),i.on("click.rails",a.formInputClickSelector,function(t){var i=e(this);if(!a.allowAction(i))return a.stopEverything(t);var n=i.attr("name"),r=n?{name:n,value:i.val()}:null,s=i.closest("form");0===s.length&&(s=e("#"+i.attr("form"))),s.data("ujs:submit-button",r),s.data("ujs:formnovalidate-button",i.attr("formnovalidate")),s.data("ujs:submit-button-formaction",i.attr("formaction")),s.data("ujs:submit-button-formmethod",i.attr("formmethod"))}),i.on("ajax:send.rails",a.formSubmitSelector,function(t){this===t.target&&a.disableFormElements(e(this))}),i.on("ajax:complete.rails",a.formSubmitSelector,function(t){this===t.target&&a.enableFormElements(e(this))}),e(function(){a.refreshCSRFTokens()}))}(jQuery),function(e){var t="object"==typeof window&&window||"object"==typeof self&&self;"undefined"!=typeof exports?e(exports):t&&(t.hljs=e({}),"function"==typeof define&&define.amd&&define([],function(){return t.hljs}))}(function(e){function t(e){return e.replace(/[&<>]/gm,function(e){return S[e]})}function a(e){return e.nodeName.toLowerCase()}function i(e,t){var a=e&&e.exec(t);return a&&0===a.index}function n(e){return j.test(e)}function r(e){var t,a,i,r,s=e.className+" ";if(s+=e.parentNode?e.parentNode.className:"",a=T.exec(s))return _(a[1])?a[1]:"no-highlight";for(s=s.split(/\s+/),t=0,i=s.length;i>t;t++)if(r=s[t],n(r)||_(r))return r}function s(e,t){var a,i={};for(a in e)i[a]=e[a];if(t)for(a in t)i[a]=t[a];return i}function o(e){var t=[];return function e(i,n){for(var r=i.firstChild;r;r=r.nextSibling)3===r.nodeType?n+=r.nodeValue.length:1===r.nodeType&&(t.push({event:"start",offset:n,node:r}),n=e(r,n),a(r).match(/br|hr|img|input/)||t.push({event:"stop",offset:n,node:r}));return n}(e,0),t}function c(e,i,n){function r(){return e.length&&i.length?e[0].offset!==i[0].offset?e[0].offset<i[0].offset?e:i:"start"===i[0].event?e:i:e.length?e:i}function s(e){function i(e){return" "+e.nodeName+'="'+t(e.value)+'"'}d+="<"+a(e)+q.map.call(e.attributes,i).join("")+">"}function o(e){d+="</"+a(e)+">"}function c(e){("start"===e.event?s:o)(e.node)}for(var l=0,d="",p=[];e.length||i.length;){var u=r();if(d+=t(n.substr(l,u[0].offset-l)),l=u[0].offset,u===e){p.reverse().forEach(o);do{c(u.splice(0,1)[0]),u=r()}while(u===e&&u.length&&u[0].offset===l);p.reverse().forEach(s)}else"start"===u[0].event?p.push(u[0].node):p.pop(),c(u.splice(0,1)[0])}return d+t(n.substr(l))}function l(e){function t(e){return e&&e.source||e}function a(a,i){return new RegExp(t(a),"m"+(e.cI?"i":"")+(i?"g":""))}function i(n,r){if(!n.compiled){if(n.compiled=!0,n.k=n.k||n.bK,n.k){var o={},c=function(t,a){e.cI&&(a=a.toLowerCase()),a.split(" ").forEach(function(e){var a=e.split("|");o[a[0]]=[t,a[1]?Number(a[1]):1]})};"string"==typeof n.k?c("keyword",n.k):w(n.k).forEach(function(e){c(e,n.k[e])}),n.k=o}n.lR=a(n.l||/\w+/,!0),r&&(n.bK&&(n.b="\\b("+n.bK.split(" ").join("|")+")\\b"),n.b||(n.b=/\B|\b/),n.bR=a(n.b),n.e||n.eW||(n.e=/\B|\b/),n.e&&(n.eR=a(n.e)),n.tE=t(n.e)||"",n.eW&&r.tE&&(n.tE+=(n.e?"|":"")+r.tE)),n.i&&(n.iR=a(n.i)),null==n.r&&(n.r=1),n.c||(n.c=[]);var l=[];n.c.forEach(function(e){e.v?e.v.forEach(function(t){l.push(s(e,t))}):l.push("self"===e?n:e)}),n.c=l,n.c.forEach(function(e){i(e,n)}),n.starts&&i(n.starts,r);var d=n.c.map(function(e){return e.bK?"\\.?("+e.b+")\\.?":e.b}).concat([n.tE,n.i]).map(t).filter(Boolean);n.t=d.length?a(d.join("|"),!0):{exec:function(){return null}}}}i(e)}function d(e,a,n,r){function s(e,t){var a,n;for(a=0,n=t.c.length;n>a;a++)if(i(t.c[a].bR,e))return t.c[a]}function o(e,t){if(i(e.eR,t)){for(;e.endsParent&&e.parent;)e=e.parent;return e}return e.eW?o(e.parent,t):void 0}function c(e,t){return!n&&i(t.iR,e)}function u(e,t){var a=b.cI?t[0].toLowerCase():t[0];return e.k.hasOwnProperty(a)&&e.k[a]}function m(e,t,a,i){var n=i?"":C.classPrefix,r='<span class="'+n,s=a?"":E;return(r+=e+'">')+t+s}function g(){var e,a,i,n;if(!w.k)return t(T);for(n="",a=0,w.lR.lastIndex=0,i=w.lR.exec(T);i;)n+=t(T.substr(a,i.index-a)),e=u(w,i),e?(z+=e[1],n+=m(e[0],t(i[0]))):n+=t(i[0]),a=w.lR.lastIndex,i=w.lR.exec(T);return n+t(T.substr(a))}function f(){var e="string"==typeof w.sL;if(e&&!k[w.sL])return t(T);var a=e?d(w.sL,T,!0,x[w.sL]):p(T,w.sL.length?w.sL:void 0);return w.r>0&&(z+=a.r),e&&(x[w.sL]=a.top),m(a.language,a.value,!1,!0)}function y(){j+=null!=w.sL?f():g(),T=""}function h(e){j+=e.cN?m(e.cN,"",!0):"",w=Object.create(e,{parent:{value:w}})}function v(e,t){if(T+=e,null==t)return y(),0;var a=s(t,w);if(a)return a.skip?T+=t:(a.eB&&(T+=t),y(),a.rB||a.eB||(T=t)),h(a,t),a.rB?0:t.length;var i=o(w,t);if(i){var n=w;n.skip?T+=t:(n.rE||n.eE||(T+=t),y(),n.eE&&(T=t));do{w.cN&&(j+=E),w.skip||(z+=w.r),w=w.parent}while(w!==i.parent);return i.starts&&h(i.starts,""),n.rE?0:t.length}if(c(t,w))throw new Error('Illegal lexeme "'+t+'" for mode "'+(w.cN||"<unnamed>")+'"');return T+=t,t.length||1}var b=_(e);if(!b)throw new Error('Unknown language: "'+e+'"');l(b);var q,w=r||b,x={},j="";for(q=w;q!==b;q=q.parent)q.cN&&(j=m(q.cN,"",!0)+j);var T="",z=0;try{for(var S,A,I=0;w.t.lastIndex=I,S=w.t.exec(a);)A=v(a.substr(I,S.index-I),S[0]),I=S.index+A;for(v(a.substr(I)),q=w;q.parent;q=q.parent)q.cN&&(j+=E);return{r:z,value:j,language:e,top:w}}catch(e){if(e.message&&-1!==e.message.indexOf("Illegal"))return{r:0,value:t(a)};throw e}}function p(e,a){a=a||C.languages||w(k);var i={r:0,value:t(e)},n=i;return a.filter(_).forEach(function(t){var a=d(t,e,!1);a.language=t,a.r>n.r&&(n=a),a.r>i.r&&(n=i,i=a)}),n.language&&(i.second_best=n),i}function u(e){return C.tabReplace||C.useBR?e.replace(z,function(e,t){return C.useBR&&"\n"===e?"<br>":C.tabReplace?t.replace(/\t/g,C.tabReplace):void 0}):e}function m(e,t,a){var i=t?x[t]:a,n=[e.trim()];return e.match(/\bhljs\b/)||n.push("hljs"),-1===e.indexOf(i)&&n.push(i),n.join(" ").trim()}function g(e){var t,a,i,s,l,g=r(e);n(g)||(C.useBR?(t=document.createElementNS("http://www.w3.org/1999/xhtml","div"),t.innerHTML=e.innerHTML.replace(/\n/g,"").replace(/<br[ \/]*>/g,"\n")):t=e,l=t.textContent,i=g?d(g,l,!0):p(l),a=o(t),a.length&&(s=document.createElementNS("http://www.w3.org/1999/xhtml","div"),s.innerHTML=i.value,i.value=c(a,o(s),l)),i.value=u(i.value),e.innerHTML=i.value,e.className=m(e.className,g,i.language),e.result={language:i.language,re:i.r},i.second_best&&(e.second_best={language:i.second_best.language,re:i.second_best.r}))}function f(e){C=s(C,e)}function y(){if(!y.called){y.called=!0;var e=document.querySelectorAll("pre code");q.forEach.call(e,g)}}function h(){addEventListener("DOMContentLoaded",y,!1),addEventListener("load",y,!1)}function v(t,a){var i=k[t]=a(e);i.aliases&&i.aliases.forEach(function(e){x[e]=t})}function b(){return w(k)}function _(e){return e=(e||"").toLowerCase(),k[e]||k[x[e]]}var q=[],w=Object.keys,k={},x={},j=/^(no-?highlight|plain|text)$/i,T=/\blang(?:uage)?-([\w-]+)\b/i,z=/((^(<[^>]+>|\t|)+|(?:\n)))/gm,E="</span>",C={classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:void 0},S={"&":"&amp;","<":"&lt;",">":"&gt;"};return e.highlight=d,e.highlightAuto=p,e.fixMarkup=u,e.highlightBlock=g,e.configure=f,e.initHighlighting=y,e.initHighlightingOnLoad=h,e.registerLanguage=v,e.listLanguages=b,e.getLanguage=_,e.inherit=s,e.IR="[a-zA-Z]\\w*",e.UIR="[a-zA-Z_]\\w*",e.NR="\\b\\d+(\\.\\d+)?",e.CNR="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",e.BNR="\\b(0b[01]+)",e.RSR="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",e.BE={b:"\\\\[\\s\\S]",r:0},e.ASM={cN:"string",b:"'",e:"'",i:"\\n",c:[e.BE]},e.QSM={cN:"string",b:'"',e:'"',i:"\\n",c:[e.BE]},e.PWM={b:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\b/},e.C=function(t,a,i){var n=e.inherit({cN:"comment",b:t,e:a,c:[]},i||{});return n.c.push(e.PWM),n.c.push({cN:"doctag",b:"(?:TODO|FIXME|NOTE|BUG|XXX):",r:0}),n},e.CLCM=e.C("//","$"),e.CBCM=e.C("/\\*","\\*/"),e.HCM=e.C("#","$"),e.NM={cN:"number",b:e.NR,r:0},e.CNM={cN:"number",b:e.CNR,r:0},e.BNM={cN:"number",b:e.BNR,r:0},e.CSSNM={cN:"number",b:e.NR+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",r:0},e.RM={cN:"regexp",b:/\//,e:/\/[gimuy]*/,i:/\n/,c:[e.BE,{b:/\[/,e:/\]/,r:0,c:[e.BE]}]},e.TM={cN:"title",b:e.IR,r:0},e.UTM={cN:"title",b:e.UIR,r:0},e.METHOD_GUARD={b:"\\.\\s*"+e.UIR,r:0},e}),hljs.registerLanguage("java",function(e){var t=e.UIR+"(<"+e.UIR+"(\\s*,\\s*"+e.UIR+")*>)?",a="false synchronized int abstract float private char boolean static null if const for true while long strictfp finally protected import native final void enum else break transient catch instanceof byte super volatile case assert short package default double public try this switch continue throws protected public private module requires exports",i="\\b(0[bB]([01]+[01_]+[01]+|[01]+)|0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)|(([\\d]+[\\d_]+[\\d]+|[\\d]+)(\\.([\\d]+[\\d_]+[\\d]+|[\\d]+))?|\\.([\\d]+[\\d_]+[\\d]+|[\\d]+))([eE][-+]?\\d+)?)[lLfF]?",n={cN:"number",b:i,r:0};return{aliases:["jsp"],k:a,i:/<\/|#/,c:[e.C("/\\*\\*","\\*/",{r:0,c:[{b:/\w+@/,r:0},{cN:"doctag",b:"@[A-Za-z]+"}]}),e.CLCM,e.CBCM,e.ASM,e.QSM,{cN:"class",bK:"class interface",e:/[{;=]/,eE:!0,k:"class interface",i:/[:"\[\]]/,c:[{bK:"extends implements"},e.UTM]},{bK:"new throw return else",r:0},{cN:"function",b:"("+t+"\\s+)+"+e.UIR+"\\s*\\(",rB:!0,e:/[{;=]/,eE:!0,k:a,c:[{b:e.UIR+"\\s*\\(",rB:!0,r:0,c:[e.UTM]},{cN:"params",b:/\(/,e:/\)/,k:a,r:0,c:[e.ASM,e.QSM,e.CNM,e.CBCM]},e.CLCM,e.CBCM]},n,{cN:"meta",b:"@[A-Za-z]+"}]}}),hljs.registerLanguage("bash",function(e){var t={cN:"variable",v:[{b:/\$[\w\d#@][\w\d_]*/},{b:/\$\{(.*?)}/}]},a={cN:"string",b:/"/,e:/"/,c:[e.BE,t,{cN:"variable",b:/\$\(/,e:/\)/,c:[e.BE]}]},i={cN:"string",b:/'/,e:/'/};return{aliases:["sh","zsh"],l:/-?[a-z\._]+/,k:{keyword:"if then else elif fi for while in do done case esac function",literal:"true false",built_in:"break cd continue eval exec exit export getopts hash pwd readonly return shift test times trap umask unset alias bind builtin caller command declare echo enable help let local logout mapfile printf read readarray source type typeset ulimit unalias set shopt autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate fc fg float functions getcap getln history integer jobs kill limit log noglob popd print pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse zsocket zstyle ztcp",_:"-ne -eq -lt -gt -f -d -e -s -l -a"},c:[{cN:"meta",b:/^#![^\n]+sh\s*$/,r:10},{cN:"function",b:/\w[\w\d_]*\s*\(\s*\)\s*\{/,rB:!0,c:[e.inherit(e.TM,{b:/\w[\w\d_]*/})],r:0},e.HCM,a,i,t]}}),hljs.registerLanguage("xml",function(e){var t="[A-Za-z0-9\\._:-]+",a={eW:!0,i:/</,r:0,c:[{cN:"attr",b:t,r:0},{b:/=\s*/,r:0,c:[{cN:"string",endsParent:!0,v:[{b:/"/,e:/"/},{b:/'/,e:/'/},{b:/[^\s"'=<>`]+/}]}]}]};return{aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist"],cI:!0,c:[{cN:"meta",b:"<!DOCTYPE",e:">",r:10,c:[{b:"\\[",e:"\\]"}]},e.C("<!--","-->",{r:10}),{b:"<\\!\\[CDATA\\[",e:"\\]\\]>",r:10},{b:/<\?(php)?/,e:/\?>/,sL:"php",c:[{b:"/\\*",e:"\\*/",skip:!0}]},{cN:"tag",b:"<style(?=\\s|>|$)",e:">",k:{name:"style"},c:[a],starts:{e:"</style>",rE:!0,sL:["css","xml"]}},{cN:"tag",b:"<script(?=\\s|>|$)",e:">",k:{name:"script"},c:[a],starts:{e:"</script>",rE:!0,sL:["actionscript","javascript","handlebars","xml"]}},{cN:"meta",v:[{b:/<\?xml/,e:/\?>/,r:10},{b:/<\?\w+/,e:/\?>/}]},{cN:"tag",b:"</?",e:"/?>",c:[{cN:"name",b:/[^\/><\s]+/,r:0},a]}]}}),hljs.registerLanguage("ruby",function(e){var t="[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?",a={keyword:"and then defined module in return redo if BEGIN retry end for self when next until do begin unless END rescue else break undef not super class case require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor",literal:"true false nil"},i={cN:"doctag",b:"@[A-Za-z]+"},n={b:"#<",e:">"},r=[e.C("#","$",{c:[i]}),e.C("^\\=begin","^\\=end",{c:[i],r:10}),e.C("^__END__","\\n$")],s={cN:"subst",b:"#\\{",e:"}",k:a},o={cN:"string",c:[e.BE,s],v:[{b:/'/,e:/'/},{b:/"/,e:/"/},{b:/`/,e:/`/},{b:"%[qQwWx]?\\(",e:"\\)"},{b:"%[qQwWx]?\\[",e:"\\]"},{b:"%[qQwWx]?{",e:"}"},{b:"%[qQwWx]?<",e:">"},{b:"%[qQwWx]?/",e:"/"},{b:"%[qQwWx]?%",e:"%"},{b:"%[qQwWx]?-",e:"-"},{b:"%[qQwWx]?\\|",e:"\\|"},{b:/\B\?(\\\d{1,3}|\\x[A-Fa-f0-9]{1,2}|\\u[A-Fa-f0-9]{4}|\\?\S)\b/},{b:/<<(-?)\w+$/,e:/^\s*\w+$/}]},c={cN:"params",b:"\\(",e:"\\)",endsParent:!0,k:a},l=[o,n,{cN:"class",bK:"class module",e:"$|;",i:/=/,c:[e.inherit(e.TM,{b:"[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?"}),{b:"<\\s*",c:[{b:"("+e.IR+"::)?"+e.IR}]}].concat(r)},{cN:"function",bK:"def",e:"$|;",c:[e.inherit(e.TM,{b:t}),c].concat(r)},{b:e.IR+"::"},{cN:"symbol",b:e.UIR+"(\\!|\\?)?:",r:0},{cN:"symbol",b:":(?!\\s)",c:[o,{b:t}],r:0},{cN:"number",b:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0},{b:"(\\$\\W)|((\\$|\\@\\@?)(\\w+))"},{cN:"params",b:/\|/,e:/\|/,k:a},{b:"("+e.RSR+")\\s*",c:[n,{cN:"regexp",c:[e.BE,s],i:/\n/,v:[{b:"/",e:"/[a-z]*"},{b:"%r{",e:"}[a-z]*"},{b:"%r\\(",e:"\\)[a-z]*"},{b:"%r!",e:"![a-z]*"},{b:"%r\\[",e:"\\][a-z]*"}]}].concat(r),r:0}].concat(r);s.c=l,c.c=l;var d="[>?]>",p="[\\w#]+\\(\\w+\\):\\d+:\\d+>",u="(\\w+-)?\\d+\\.\\d+\\.\\d(p\\d+)?[^>]+>",m=[{b:/^\s*=>/,starts:{e:"$",c:l}},{cN:"meta",b:"^("+d+"|"+p+"|"+u+")",starts:{e:"$",c:l}}];return{aliases:["rb","gemspec","podspec","thor","irb"],k:a,i:/\/\*/,c:r.concat(m).concat(l)}}),hljs.registerLanguage("erb",function(e){return{sL:"xml",c:[e.C("<%#","%>"),{b:"<%[%=-]?",e:"[%-]?%>",sL:"ruby",eB:!0,eE:!0}]}}),hljs.registerLanguage("objectivec",function(e){var t={cN:"built_in",b:"\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+"},a={keyword:"int float while char export sizeof typedef const struct for union unsigned long volatile static bool mutable if do return goto void enum else break extern asm case short default double register explicit signed typename this switch continue wchar_t inline readonly assign readwrite self @synchronized id typeof nonatomic super unichar IBOutlet IBAction strong weak copy in out inout bycopy byref oneway __strong __weak __block __autoreleasing @private @protected @public @try @property @end @throw @catch @finally @autoreleasepool @synthesize @dynamic @selector @optional @required @encode @package @import @defs @compatibility_alias __bridge __bridge_transfer __bridge_retained __bridge_retain __covariant __contravariant __kindof _Nonnull _Nullable _Null_unspecified __FUNCTION__ __PRETTY_FUNCTION__ __attribute__ getter setter retain unsafe_unretained nonnull nullable null_unspecified null_resettable class instancetype NS_DESIGNATED_INITIALIZER NS_UNAVAILABLE NS_REQUIRES_SUPER NS_RETURNS_INNER_POINTER NS_INLINE NS_AVAILABLE NS_DEPRECATED NS_ENUM NS_OPTIONS NS_SWIFT_UNAVAILABLE NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_REFINED_FOR_SWIFT NS_SWIFT_NAME NS_SWIFT_NOTHROW NS_DURING NS_HANDLER NS_ENDHANDLER NS_VALUERETURN NS_VOIDRETURN",literal:"false true FALSE TRUE nil YES NO NULL",built_in:"BOOL dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once"},i=/[a-zA-Z@][a-zA-Z0-9_]*/,n="@interface @class @protocol @implementation";return{aliases:["mm","objc","obj-c"],k:a,l:i,i:"</",c:[t,e.CLCM,e.CBCM,e.CNM,e.QSM,{cN:"string",v:[{b:'@"',e:'"',i:"\\n",c:[e.BE]},{b:"'",e:"[^\\\\]'",i:"[^\\\\][^']"}]},{cN:"meta",b:"#",e:"$",c:[{cN:"meta-string",v:[{b:'"',e:'"'},{b:"<",e:">"}]}]},{cN:"class",b:"("+n.split(" ").join("|")+")\\b",e:"({|$)",eE:!0,k:n,l:i,c:[e.UTM]},{b:"\\."+e.UIR,r:0}]}}),hljs.registerLanguage("cs",function(e){var t={keyword:"abstract as base bool break byte case catch char checked const continue decimal default delegate do double else enum event explicit extern finally fixed float for foreach goto if implicit in int interface internal is lock long object operator out override params private protected public readonly ref sbyte sealed short sizeof stackalloc static string struct switch this try typeof uint ulong unchecked unsafe ushort using virtual void volatile while nameof add alias ascending async await by descending dynamic equals from get global group into join let on orderby partial remove select set value var where yield",literal:"null false true"},a={cN:"string",b:'@"',e:'"',c:[{b:'""'}]},i=e.inherit(a,{i:/\n/}),n={cN:"subst",b:"{",e:"}",k:t},r=e.inherit(n,{i:/\n/}),s={cN:"string",b:/\$"/,e:'"',i:/\n/,c:[{b:"{{"},{b:"}}"},e.BE,r]},o={cN:"string",b:/\$@"/,e:'"',c:[{b:"{{"},{b:"}}"},{b:'""'},n]},c=e.inherit(o,{i:/\n/,c:[{b:"{{"},{b:"}}"},{b:'""'},r]});n.c=[o,s,a,e.ASM,e.QSM,e.CNM,e.CBCM],r.c=[c,s,i,e.ASM,e.QSM,e.CNM,e.inherit(e.CBCM,{i:/\n/})];var l={v:[o,s,a,e.ASM,e.QSM]},d=e.IR+"(<"+e.IR+"(\\s*,\\s*"+e.IR+")*>)?(\\[\\])?";return{aliases:["csharp"],k:t,i:/::/,c:[e.C("///","$",{rB:!0,c:[{cN:"doctag",v:[{b:"///",r:0},{b:"<!--|-->"},{b:"</?",e:">"}]}]}),e.CLCM,e.CBCM,{cN:"meta",b:"#",e:"$",k:{"meta-keyword":"if else elif endif define undef warning error line region endregion pragma checksum"}},l,e.CNM,{bK:"class interface",e:/[{;=]/,i:/[^\s:]/,c:[e.TM,e.CLCM,e.CBCM]},{bK:"namespace",e:/[{;=]/,i:/[^\s:]/,c:[e.inherit(e.TM,{b:"[a-zA-Z](\\.?\\w)*"}),e.CLCM,e.CBCM]},{bK:"new return throw await",r:0},{cN:"function",b:"("+d+"\\s+)+"+e.IR+"\\s*\\(",rB:!0,e:/[{;=]/,eE:!0,k:t,c:[{b:e.IR+"\\s*\\(",rB:!0,c:[e.TM],r:0},{cN:"params",b:/\(/,e:/\)/,eB:!0,eE:!0,k:t,r:0,c:[l,e.CNM,e.CBCM]},e.CLCM,e.CBCM]}]}}),hljs.registerLanguage("http",function(){var e="HTTP/[0-9\\.]+";return{aliases:["https"],i:"\\S",c:[{b:"^"+e,e:"$",c:[{cN:"number",b:"\\b\\d{3}\\b"}]},{b:"^[A-Z]+ (.*?) "+e+"$",rB:!0,e:"$",c:[{cN:"string",b:" ",e:" ",eB:!0,eE:!0},{b:e},{cN:"keyword",b:"[A-Z]+"}]},{cN:"attribute",b:"^\\w",e:": ",eE:!0,i:"\\n|\\s|=",starts:{e:"$",r:0}},{b:"\\n\\n",starts:{sL:[],eW:!0}}]}}),hljs.registerLanguage("css",function(e){var t={b:/[A-Z\_\.\-]+\s*:/,rB:!0,e:";",eW:!0,c:[{cN:"attribute",b:/\S/,e:":",eE:!0,starts:{eW:!0,eE:!0,c:[{b:/[\w-]+\(/,rB:!0,c:[{cN:"built_in",b:/[\w-]+/},{b:/\(/,e:/\)/,c:[e.ASM,e.QSM]}]},e.CSSNM,e.QSM,e.ASM,e.CBCM,{cN:"number",b:"#[0-9A-Fa-f]+"},{cN:"meta",b:"!important"}]}}]};return{cI:!0,i:/[=\/|'\$]/,c:[e.CBCM,{cN:"selector-id",b:/#[A-Za-z0-9_-]+/},{cN:"selector-class",b:/\.[A-Za-z0-9_-]+/},{cN:"selector-attr",b:/\[/,e:/\]/,i:"$"},{cN:"selector-pseudo",b:/:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/},{b:"@(font-face|page)",l:"[a-z-]+",k:"font-face page"},{b:"@",e:"[{;]",i:/:/,c:[{cN:"keyword",b:/\w+/},{b:/\s/,eW:!0,eE:!0,r:0,c:[e.ASM,e.QSM,e.CSSNM]}]},{cN:"selector-tag",b:"[a-zA-Z-][a-zA-Z0-9_-]*",r:0},{b:"{",e:"}",i:/\S/,c:[e.CBCM,t]}]}}),hljs.registerLanguage("php",function(e){var t={b:"\\$+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*"},a={cN:"meta",b:/<\?(php)?|\?>/},i={cN:"string",c:[e.BE,a],v:[{b:'b"',e:'"'},{b:"b'",e:"'"},e.inherit(e.ASM,{i:null}),e.inherit(e.QSM,{i:null})]},n={v:[e.BNM,e.CNM]};return{aliases:["php3","php4","php5","php6"],cI:!0,k:"and include_once list abstract global private echo interface as static endswitch array null if endwhile or const for endforeach self var while isset public protected exit foreach throw elseif include __FILE__ empty require_once do xor return parent clone use __CLASS__ __LINE__ else break print eval new catch __METHOD__ case exception default die require __FUNCTION__ enddeclare final try switch continue endfor endif declare unset true false trait goto instanceof insteadof __DIR__ __NAMESPACE__ yield finally",c:[e.HCM,e.C("//","$",{c:[a]}),e.C("/\\*","\\*/",{c:[{cN:"doctag",b:"@[A-Za-z]+"}]}),e.C("__halt_compiler.+?;",!1,{eW:!0,k:"__halt_compiler",l:e.UIR}),{cN:"string",b:/<<<['"]?\w+['"]?$/,e:/^\w+;?$/,c:[e.BE,{cN:"subst",v:[{b:/\$\w+/},{b:/\{\$/,e:/\}/}]}]},a,{cN:"keyword",b:/\$this\b/},t,{b:/(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/},{cN:"function",bK:"function",e:/[;{]/,eE:!0,i:"\\$|\\[|%",c:[e.UTM,{cN:"params",b:"\\(",e:"\\)",c:["self",t,e.CBCM,i,n]}]},{cN:"class",bK:"class interface",e:"{",eE:!0,i:/[:\(\$"]/,c:[{bK:"extends implements"},e.UTM]},{bK:"namespace",e:";",i:/[\.']/,c:[e.UTM]},{bK:"use",e:";",c:[e.UTM]},{b:"=>"},i,n]}}),hljs.registerLanguage("python",function(e){var t={cN:"meta",b:/^(>>>|\.\.\.) /},a={cN:"string",c:[e.BE],v:[{b:/(u|b)?r?'''/,e:/'''/,c:[t],r:10},{b:/(u|b)?r?"""/,e:/"""/,c:[t],r:10},{b:/(u|r|ur)'/,e:/'/,r:10},{b:/(u|r|ur)"/,e:/"/,r:10},{b:/(b|br)'/,e:/'/},{b:/(b|br)"/,e:/"/},e.ASM,e.QSM]},i={cN:"number",r:0,v:[{b:e.BNR+"[lLjJ]?"},{b:"\\b(0o[0-7]+)[lLjJ]?"},{b:e.CNR+"[lLjJ]?"}]},n={cN:"params",b:/\(/,e:/\)/,c:["self",t,i,a]};return{aliases:["py","gyp"],k:{keyword:"and elif is global as in if from raise for except finally print import pass return exec else break not with class assert yield try while continue del or def lambda async await nonlocal|10 None True False",built_in:"Ellipsis NotImplemented"},i:/(<\/|->|\?)/,c:[t,i,a,e.HCM,{v:[{cN:"function",bK:"def",r:10},{cN:"class",bK:"class"}],e:/:/,i:/[${=;\n,]/,c:[e.UTM,n,{b:/->/,eW:!0,k:"None"}]},{cN:"meta",b:/^[\t ]*@/,e:/$/},{b:/\b(print|exec)\(/}]}}),hljs.registerLanguage("json",function(e){var t={literal:"true false null"},a=[e.QSM,e.CNM],i={e:",",eW:!0,eE:!0,c:a,k:t},n={b:"{",e:"}",c:[{cN:"attr",b:/"/,e:/"/,c:[e.BE],i:"\\n"},e.inherit(i,{b:/:/})],i:"\\S"},r={b:"\\[",e:"\\]",c:[e.inherit(i)],i:"\\S"};return a.splice(a.length,0,n,r),{c:a,k:t,i:"\\S"}}),hljs.registerLanguage("javascript",function(e){var t="[A-Za-z$_][0-9A-Za-z$_]*",a={keyword:"in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as",literal:"true false null undefined NaN Infinity",built_in:"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"},i={cN:"number",v:[{b:"\\b(0[bB][01]+)"},{b:"\\b(0[oO][0-7]+)"},{b:e.CNR}],r:0},n={cN:"subst",b:"\\$\\{",e:"\\}",k:a,c:[]},r={cN:"string",b:"`",e:"`",c:[e.BE,n]};n.c=[e.ASM,e.QSM,r,i,e.RM];var s=n.c.concat([e.CBCM,e.CLCM]);return{aliases:["js","jsx"],k:a,c:[{cN:"meta",r:10,b:/^\s*['"]use (strict|asm)['"]/},{cN:"meta",b:/^#!/,e:/$/},e.ASM,e.QSM,r,e.CLCM,e.CBCM,i,{b:/[{,]\s*/,r:0,c:[{b:t+"\\s*:",rB:!0,r:0,c:[{cN:"attr",b:t,r:0}]}]},{b:"("+e.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw case",c:[e.CLCM,e.CBCM,e.RM,{cN:"function",b:"(\\(.*?\\)|"+t+")\\s*=>",rB:!0,e:"\\s*=>",c:[{cN:"params",v:[{b:t},{b:/\(\s*\)/},{b:/\(/,e:/\)/,eB:!0,eE:!0,k:a,c:s}]}]},{b:/</,e:/(\/\w+|\w+\/)>/,sL:"xml",c:[{b:/<\w+\s*\/>/,skip:!0},{b:/<\w+/,e:/(\/\w+|\w+\/)>/,skip:!0,c:[{b:/<\w+\s*\/>/,skip:!0},"self"]}]}],r:0},{cN:"function",bK:"function",e:/\{/,eE:!0,c:[e.inherit(e.TM,{b:t}),{cN:"params",b:/\(/,e:/\)/,eB:!0,eE:!0,c:s}],i:/\[|%/},{b:/\$[(.]/},e.METHOD_GUARD,{cN:"class",bK:"class",e:/[{;=]/,eE:!0,i:/[:"\[\]]/,c:[{bK:"extends"},e.UTM]},{bK:"constructor",e:/\{/,eE:!0}],i:/#(?!!)/}}),function(e){e.fn.tipuesearch=function(t){var a=e.extend({show:7,newWindow:!1,showURL:!0,showTitleCount:!0,minimumLength:3,descriptiveWords:25,highlightTerms:!0,highlightEveryTerm:!1,mode:"static",liveDescription:"*",liveContent:"*",contentLocation:"tipuesearch/tipuesearch_content.json",debug:!1},t);return this.each(function(){function t(e){return decodeURIComponent((new RegExp("[?|&]"+e+"=([^&;]+?)(&|#|;|$)").exec(location.search)||[,""])[1].replace(/\+/g,"%20"))||null}function i(t,s){s=!1,e("#tipue_search_content").hide(),e("#tipue_search_content").html('<div class="tipue_search_spinner"><div class="tipue_search_rect1"></div><div class="tipue_search_rect2"></div><div class="rect3"></div></div>'),e("#tipue_search_content").show();var c="",l=!1,d=!1,p=!0,u=0;found=[];var m=e("#tipue_search_input").val().toLowerCase();if(m=e.trim(m),
(m.match('^"')&&m.match('"$')||m.match("^'")&&m.match("'$"))&&(p=!1),p){var g=m.split(" ");m="";for(var f=0;f<g.length;f++){for(var y=!0,h=0;h<tipuesearch_stop_words.length;h++)g[f]==tipuesearch_stop_words[h]&&(y=!1,d=!0);y&&(m=m+" "+g[f])}m=e.trim(m),g=m.split(" ")}else m=m.substring(1,m.length-1);if(m.length>=a.minimumLength){if(p){if(s){for(var v=m,f=0;f<g.length;f++)for(var h=0;h<tipuesearch_replace.words.length;h++)g[f]==tipuesearch_replace.words[h].word&&(m=m.replace(g[f],tipuesearch_replace.words[h].replace_with),l=!0);g=m.split(" ")}for(var b=m,f=0;f<g.length;f++)for(var h=0;h<tipuesearch_stem.words.length;h++)g[f]==tipuesearch_stem.words[h].word&&(b=b+" "+tipuesearch_stem.words[h].stem);g=b.split(" ");for(var f=0;f<n.pages.length;f++){for(var _=0,q=n.pages[f].text,h=0;h<g.length;h++){var w=new RegExp(g[h],"gi");if(-1!=n.pages[f].title.search(w)){var k=n.pages[f].title.match(w).length;_+=50*k}if(-1!=n.pages[f].text.search(w)){var k=n.pages[f].text.match(w).length;_+=20*k}if(a.highlightTerms){if(a.highlightEveryTerm)var x=new RegExp("("+g[h]+")","gi");else var x=new RegExp("("+g[h]+")","i");q=q.replace(x,'<span class="h01">$1</span>')}if(-1!=n.pages[f].tags.search(w)){var k=n.pages[f].tags.match(w).length;_+=10*k}if(-1!=n.pages[f].url.search(w)&&(_+=20),0!=_)for(var j=0;j<tipuesearch_weight.weight.length;j++)n.pages[f].url==tipuesearch_weight.weight[j].url&&(_+=tipuesearch_weight.weight[j].score);g[h].match("^-")&&(w=new RegExp(g[h].substring(1),"i"),-1==n.pages[f].title.search(w)&&-1==n.pages[f].text.search(w)&&-1==n.pages[f].tags.search(w)||(_=0))}0!=_&&(found.push({score:_,title:n.pages[f].title,desc:q,url:n.pages[f].url}),u++)}}else for(var f=0;f<n.pages.length;f++){var _=0,q=n.pages[f].text,w=new RegExp(m,"gi");if(-1!=n.pages[f].title.search(w)){var k=n.pages[f].title.match(w).length;_+=20*k}if(-1!=n.pages[f].text.search(w)){var k=n.pages[f].text.match(w).length;_+=20*k}if(a.highlightTerms){if(a.highlightEveryTerm)var x=new RegExp("("+m+")","gi");else var x=new RegExp("("+m+")","i");q=q.replace(x,'<span class="h01">$1</span>')}if(-1!=n.pages[f].tags.search(w)){var k=n.pages[f].tags.match(w).length;_+=10*k}if(-1!=n.pages[f].url.search(w)&&(_+=20),0!=_)for(var j=0;j<tipuesearch_weight.weight.length;j++)n.pages[f].url==tipuesearch_weight.weight[j].url&&(_+=tipuesearch_weight.weight[j].score);0!=_&&(found.push({score:_,title:n.pages[f].title,desc:q,url:n.pages[f].url}),u++)}if(0!=u){if(a.showTitleCount&&0==r){var T=document.title;document.title="("+u+") "+T,r++}1==l&&(c+='<div id="tipue_search_warning">'+tipuesearch_string_2+" "+m+". "+tipuesearch_string_3+' <a id="tipue_search_replaced">'+v+"</a></div>"),1==u?c+='<div id="tipue_search_results_count">'+tipuesearch_string_4+"</div>":(c_c=u.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),c+='<div id="tipue_search_results_count">'+c_c+" "+tipuesearch_string_5+"</div>"),found.sort(function(e,t){return t.score-e.score});for(var z=0,f=0;f<found.length;f++){if(z>=t&&z<a.show+t){var E=found[f].url.split("#"),C=E[0]+"?q="+encodeURIComponent(m);if(E.length>1&&(C=C+"#"+E[1]),c+='<div class="tipue_search_content_title"><a href="'+C+'"'+o+">"+found[f].title+"</a></div>",a.debug&&(c+='<div class="tipue_search_content_debug">Score: '+found[f].score+"</div>"),a.showURL){var S=found[f].url.toLowerCase();0==S.indexOf("http://")&&(S=S.slice(7)),c+='<div class="tipue_search_content_url"><a href="'+found[f].url+'"'+o+">"+S+"</a></div>"}if(found[f].desc){var A=found[f].desc,I="",R=A.split(" ");if(R.length<a.descriptiveWords)I=A;else for(var h=0;h<a.descriptiveWords;h++)I+=R[h]+" ";I=e.trim(I),"."!=I.charAt(I.length-1)&&(I+=" ..."),c+='<div class="tipue_search_content_text">'+I+"</div>"}}z++}if(u>a.show){var P=Math.ceil(u/a.show),N=t/a.show;if(c+='<div id="tipue_search_foot"><ul id="tipue_search_foot_boxes">',t>0&&(c+='<li><a class="tipue_search_foot_box" id="'+(t-a.show)+"_"+s+'">'+tipuesearch_string_6+"</a></li>"),N<=2){var D=P;P>3&&(D=3);for(var h=0;h<D;h++)c+=h==N?'<li class="current">'+(h+1)+"</li>":'<li><a class="tipue_search_foot_box" id="'+h*a.show+"_"+s+'">'+(h+1)+"</a></li>"}else{var D=N+2;D>P&&(D=P);for(var h=N-1;h<D;h++)c+=h==N?'<li class="current">'+(h+1)+"</li>":'<li><a class="tipue_search_foot_box" id="'+h*a.show+"_"+s+'">'+(h+1)+"</a></li>"}N+1!=P&&(c+='<li><a class="tipue_search_foot_box" id="'+(t+a.show)+"_"+s+'">'+tipuesearch_string_7+"</a></li>"),c+="</ul></div>"}}else c+='<div id="tipue_search_warning">'+tipuesearch_string_8+"</div>"}else d?c+='<div id="tipue_search_warning">'+tipuesearch_string_8+". "+tipuesearch_string_9+"</div>":(c+='<div id="tipue_search_warning">'+tipuesearch_string_10+"</div>",1==a.minimumLength?c+='<div id="tipue_search_warning">'+tipuesearch_string_11+"</div>":c+='<div id="tipue_search_warning">'+tipuesearch_string_12+" "+a.minimumLength+" "+tipuesearch_string_13+"</div>");e("#tipue_search_content").hide(),e("#tipue_search_content").html(c),e("#tipue_search_content").slideDown(200),e("#tipue_search_replaced").click(function(){i(0,!1)}),e(".tipue_search_foot_box").click(function(){var t=e(this).attr("id"),a=t.split("_");i(parseInt(a[0]),a[1])})}var n={pages:[]};e.ajaxSetup({async:!1});var r=0;if("live"==a.mode)for(var s=0;s<tipuesearch_pages.length;s++)e.get(tipuesearch_pages[s]).done(function(t){var i=e(a.liveContent,t).text();i=i.replace(/\s+/g," ");var r=e(a.liveDescription,t).text();r=r.replace(/\s+/g," ");var o=t.toLowerCase().indexOf("<title>"),c=t.toLowerCase().indexOf("</title>",o+7);if(-1!=o&&-1!=c)var l=t.slice(o+7,c);else var l=tipuesearch_string_1;n.pages.push({title:l,text:r,tags:i,url:tipuesearch_pages[s]})});"json"==a.mode&&e.getJSON(a.contentLocation).done(function(t){n=e.extend({},t)}),"static"==a.mode&&(n=e.extend({},tipuesearch));var o="";a.newWindow&&(o=' target="_blank"'),t("q")&&(e("#tipue_search_input").val(t("q")),i(0,!0)),e(this).keyup(function(e){"13"==e.keyCode&&i(0,!0)})})}}(jQuery);var tipuesearch_stop_words=["a","about","above","after","again","against","all","am","an","and","any","are","aren't","as","at","be","because","been","before","being","below","between","both","but","by","can't","cannot","could","couldn't","did","didn't","do","does","doesn't","doing","don't","down","during","each","few","for","from","further","had","hadn't","has","hasn't","have","haven't","having","he","he'd","he'll","he's","her","here","here's","hers","herself","him","himself","his","how","how's","i","i'd","i'll","i'm","i've","if","in","into","is","isn't","it","it's","its","itself","let's","me","more","most","mustn't","my","myself","no","nor","not","of","off","on","once","only","or","other","ought","our","ours","ourselves","out","over","own","same","shan't","she","she'd","she'll","she's","should","shouldn't","so","some","such","than","that","that's","the","their","theirs","them","themselves","then","there","there's","these","they","they'd","they'll","they're","they've","this","those","through","to","too","under","until","up","very","was","wasn't","we","we'd","we'll","we're","we've","were","weren't","what","what's","when","when's","where","where's","which","while","who","who's","whom","why","why's","with","won't","would","wouldn't","you","you'd","you'll","you're","you've","your","yours","yourself","yourselves"],tipuesearch_replace={words:[{word:"tipua",replace_with:"tipue"},{word:"javscript",replace_with:"javascript"},{word:"jqeury",replace_with:"jquery"}]},tipuesearch_stem={words:[{word:"e-mail",stem:"email"},{word:"javascript",stem:"jquery"},{word:"javascript",stem:"js"},{word:"zip",stem:"postal"}]},tipuesearch_string_1="No title",tipuesearch_string_2="Showing results for",tipuesearch_string_3="Search instead for",tipuesearch_string_4="1 result",tipuesearch_string_5="results",tipuesearch_string_6="Prev",tipuesearch_string_7="Next",tipuesearch_string_8="No results found",tipuesearch_string_9="Common words such as 'the' are ignored.",tipuesearch_string_10="Search too short",tipuesearch_string_11="Should be one character or more",tipuesearch_string_12="Should be",tipuesearch_string_13="characters or more";!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.EventstreamClient=e()}}(function(){var e;return function e(t,a,i){function n(s,o){if(!a[s]){if(!t[s]){var c="function"==typeof require&&require;if(!o&&c)return c(s,!0);if(r)return r(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var d=a[s]={exports:{}};t[s][0].call(d.exports,function(e){var a=t[s][1][e];return n(a||e)},d,d.exports,e,t,a,i)}return a[s].exports}for(var r="function"==typeof require&&require,s=0;s<i.length;s++)n(i[s]);return n}({1:[function(e,t){function a(e,t){if(!e)throw new Error(t)}function i(){return this.initialize.apply(this,arguments),this}var n=e("./utils");i.prototype.EVENTSTREAM_ENDPOINT="/1.0/log/pixel_tracking",i.prototype.EVENTSTREAM_V2_ENDPOINT="/2.0/log/pixel_tracking",i.prototype.ANONYMOUS_VISITOR_TOKEN_COOKIE="_savt",i.prototype.TRACK_COOKIE="track_cookie",i.prototype.IDENTIFIED_VISITOR_TOKEN_PARAM="ivt",i.prototype.ANONYMOUS_VISITOR_TOKEN_PARAM="avt",i.prototype.MERCHANT_TOKEN_PARAM="mct",i.prototype.SESSION_TOKEN_PARAM="st",i.prototype.UNIT_TOKEN_PARAM="unt",i.prototype.PERSON_TOKEN_PARAM="prt",i.prototype.EMPLOYMENT_TOKEN_PARAM="emt",i.prototype.PAYMENT_TOKEN_PARAM="pmt",i.prototype.LIBRARY_NAME="js/eventstream",i.prototype.LIBRARY_VERSION="2.1.11",i.prototype.ES2_COOKIE_PREFIX_MAP={f:"track_cookie_forecast_channel",d:"track_cookie_detail_channel",p:"track_cookie_partner_channel",c:"track_cookie_campaign_channel",o:"track_cookie_offer_channel",u:"track_cookie_url_channel",l:"track_cookie_location_channel",dt:"track_cookie_device_channel",pr:"track_cookie_product_channel",sq:"track_cookie_marin_tag"},i.prototype.callCount=0,i.prototype.initialize=function(e){a(e.applicationName,"EventstreamClient.initialize: applicationName is required"),a(e.environment,"EventstreamClient.initialize: environment is required"),this.applicationName=e.applicationName,this.environment=e.environment,this.anonymousId=e.anonymousId,this.userId=e.userId,this.merchantId=e.merchantId,this.unitId=e.unitId,this.personId=e.personId,this.employmentId=e.employmentId,this.paymentId=e.paymentId,this.defaultFields=e.defaultFields,this.sessionId=e.sessionId},i.prototype.trackV2PageView=function(e){e===undefined&&(e={}),this.trackV2WithDefaults(n.mergeObjects([{catalog_name:"page_view"},e]))},i.prototype.trackV2WithDefaults=function(e){var t={},a=n.getPageMetrics();for(var i in a)t["webpage_"+i]=a[i];var r=n.getUtmCampaignData();for(var s in r)t["webpage_"+s]=r[s];t=n.mergeObjects([t,n.getBrowserAndOSMetrics()]);var o=n.getScreenMetrics();for(var c in o){t[c.replace("screen","browser")]=o[c]}e===undefined&&(e={}),this.trackV2(n.mergeObjects([t,e]))},i.prototype.track=function(e){a(e.eventName,"EventstreamClient.track: eventName is required"),a(e.eventValue,"EventstreamClient.track: eventValue is required");var t=n.filterUrl(e.eventName),i=n.filterUrl(e.eventValue),r=this._applyDefaults(e.rawData||{}),s=e.anonymousId||this.anonymousId||this._getCookieValue(this.ANONYMOUS_VISITOR_TOKEN_COOKIE),o=this._getEncodedCookieValue(this.TRACK_COOKIE),c=e.userId||this.userId,l=e.merchantId||this.merchantId,d=e.unitId||this.unitId,p=e.personId||this.personId,u=e.employmentId||this.employmentId,m=e.paymentId||this.paymentId,g=e.sessionId||this.sessionId,f=e.callback||null;if(null!==this._getApiHost()){var y=[n.getMetrics(),r];o&&y.push({track_cookie:o}),r=n.mergeObjects(y);var h=new Image;"function"==typeof f&&n.addEvent(h,"load",f,!0),h.src=this._urlFor(t,i,r,s,c,l,d,p,u,m,g)}},i.prototype.trackV2=function(e){if(a(e.catalog_name,"EventstreamClient.trackV2: catalog_name is required"),null!==this._getApiHost()){var t={app_name:this.applicationName,u_library_name:this.LIBRARY_NAME,u_library_version:this.LIBRARY_VERSION},i=e.anonymousId||this.anonymousId||this._getCookieValue(this.ANONYMOUS_VISITOR_TOKEN_COOKIE);e.subject_anonymous_token=i,e.anonymousId=undefined;var r=e.userId||this.userId;e.subject_user_token=r,e.userId=undefined;var s=e.merchantId||this.merchantId;e.subject_merchant_token=s,e.merchantId=undefined;var o=e.unitId||this.unitId;e.subject_unit_token=o,e.unitId=undefined;var c=e.personId||this.personId;e.subject_person_token=c,e.personId=undefined;var l=e.employmentId||this.employmentId;e.subject_employment_token=l,e.employmentId=undefined;var d=e.paymentId||this.paymentId;e.subject_payment_token=d,e.paymentId=undefined;var p=e.sessionId||this.sessionId;e.session_token=p,e.sessionId=undefined;var u=e.callback||null;e.callback=undefined;for(var m,g,f=Object.keys(e),y=0;y<f.length;y++)m=f[y],(g=e[m])!==undefined&&null!==g&&(t[m]=g);this._addTrackCookiesToData(t);var h=new Image;"function"==typeof u&&n.addEvent(h,"load",u,!0),h.src=this._es2UrlFor(t)}},i.prototype._es2UrlFor=function(e){for(var t,a=[],i=Object.keys(e),n=0;n<i.length;n++)t=i[n],a.push(encodeURIComponent(t)+"="+encodeURIComponent(e[t]));return this.callCount+=1,a.push("nocache="+Date.now()+this.callCount),this._getApiHost()+this.EVENTSTREAM_V2_ENDPOINT+"?"+a.join("&")},i.prototype._applyDefaults=function(e){return this.defaultFields?n.mergeObjects([this.defaultFields,e]):e},i.prototype._urlFor=function(e,t,a,i,n,r,s,o,c,l,d){var p=[];return i&&p.push(this.ANONYMOUS_VISITOR_TOKEN_PARAM+"="+encodeURIComponent(i)),n&&p.push(this.IDENTIFIED_VISITOR_TOKEN_PARAM+"="+encodeURIComponent(n)),r&&p.push(this.MERCHANT_TOKEN_PARAM+"="+encodeURIComponent(r)),s&&p.push(this.UNIT_TOKEN_PARAM+"="+encodeURIComponent(s)),o&&p.push(this.PERSON_TOKEN_PARAM+"="+encodeURIComponent(o)),c&&p.push(this.EMPLOYMENT_TOKEN_PARAM+"="+encodeURIComponent(c)),l&&p.push(this.PAYMENT_TOKEN_PARAM+"="+encodeURIComponent(l)),d&&p.push(this.SESSION_TOKEN_PARAM+"="+encodeURIComponent(d)),p.push("app_name="+encodeURIComponent(this.applicationName)),p.push("n="+encodeURIComponent(e)),p.push("v="+encodeURIComponent(t)),p.push("m="+encodeURIComponent(JSON.stringify(a))),p.push("ln="+encodeURIComponent(this.LIBRARY_NAME)),p.push("lv="+encodeURIComponent(this.LIBRARY_VERSION)),this.callCount+=1,p.push("nocache="+Date.now()+this.callCount),this._getApiHost()+this.EVENTSTREAM_ENDPOINT+"?"+p.join("&")},i.prototype._getApiHost=function(){return"production"===this.environment?"https://api.squareup.com":"staging"===this.environment?"https://api.squareupstaging.com":"development"===this.environment?"https://api.squareupstaging.com":"test-eventstream"===this.environment?"https://eventstream.example.com":null},i.prototype._getCookieValue=function(e){for(var t=document.cookie.split(";"),a=0;a<t.length;a++){var i=t[a].split("=");if(i[0].replace(/^\s+|\s+$/g,"")==e)return decodeURIComponent(i[1])}return null},i.prototype._getEncodedCookieValue=function(e){var t=this._getCookieValue(e);return t?atob(t.split("--")[0]):null},i.prototype._addTrackCookiesToData=function(e){try{var t=JSON.parse(this._getEncodedCookieValue(this.TRACK_COOKIE))}catch(e){return}if(t)for(var a,i,n,r,s=0;s<t.length;s++)a=t[s],n=a.split("_")[0],i=this.ES2_COOKIE_PREFIX_MAP[n],i!==undefined&&null!==i||(r=a.split("-")[0],i=this.ES2_COOKIE_PREFIX_MAP[r]),i===undefined&&null===i||(e[i]=a)},t.exports=i},{"./utils":6}],2:[function(e,t){"use strict";function a(e){if(null===e||e===undefined)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function i(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},a=0;a<10;a++)t["_"+String.fromCharCode(a)]=a;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach(function(e){i[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(e){return!1}}var n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;t.exports=i()?Object.assign:function(e){for(var t,i,s=a(e),o=1;o<arguments.length;o++){t=Object(arguments[o]);for(var c in t)n.call(t,c)&&(s[c]=t[c]);if(Object.getOwnPropertySymbols){i=Object.getOwnPropertySymbols(t);for(var l=0;l<i.length;l++)r.call(t,i[l])&&(s[i[l]]=t[i[l]])}}return s}},{}],3:[function(e,t,a){"use strict";function i(e,t){return t.encode?t.strict?n(e):encodeURIComponent(e):e}var n=e("strict-uri-encode"),r=e("object-assign");a.extract=function(e){return e.split("?")[1]||""},a.parse=function(e){var t=Object.create(null);return"string"!=typeof e?t:(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach(function(e){var a=e.replace(/\+/g," ").split("="),i=a.shift(),n=a.length>0?a.join("="):undefined;i=decodeURIComponent(i),n=n===undefined?null:decodeURIComponent(n),t[i]===undefined?t[i]=n:Array.isArray(t[i])?t[i].push(n):t[i]=[t[i],n]}),t):t},a.stringify=function(e,t){return t=r({encode:!0,strict:!0},t),e?Object.keys(e).sort().map(function(a){var n=e[a];if(n===undefined)return"";if(null===n)return i(a,t);if(Array.isArray(n)){var r=[];return n.slice().forEach(function(e){e!==undefined&&(null===e?r.push(i(a,t)):r.push(i(a,t)+"="+i(e,t)))}),r.join("&")}return i(a,t)+"="+i(n,t)}).filter(function(e){return e.length>0}).join("&"):""}},{"object-assign":2,"strict-uri-encode":4}],4:[function(e,t){"use strict";t.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}},{}],5:[function(t,a,i){!function(t,n){"use strict";var r="",s="?",o="function",c="undefined",l="object",d="string",p="model",u="name",m="type",g="vendor",f="version",y="architecture",h="console",v="mobile",b="tablet",_="smarttv",q="wearable",w={extend:function(e,t){var a={};for(var i in e)t[i]&&t[i].length%2==0?a[i]=t[i].concat(e[i]):a[i]=e[i];return a},has:function(e,t){return"string"==typeof e&&-1!==t.toLowerCase().indexOf(e.toLowerCase())},lowerize:function(e){return e.toLowerCase()},major:function(e){return typeof e===d?e.replace(/[^\d\.]/g,"").split(".")[0]:n},trim:function(e){return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}},k={rgx:function(){for(var e,t,a,i,r,s,d,p=0,u=arguments;p<u.length&&!s;){var m=u[p],g=u[p+1];if(typeof e===c){e={};for(i in g)g.hasOwnProperty(i)&&(r=g[i],typeof r===l?e[r[0]]=n:e[r]=n)}for(t=a=0;t<m.length&&!s;)if(s=m[t++].exec(this.getUA()))for(i=0;i<g.length;i++)d=s[++a],r=g[i],typeof r===l&&r.length>0?2==r.length?typeof r[1]==o?e[r[0]]=r[1].call(this,d):e[r[0]]=r[1]:3==r.length?typeof r[1]!==o||r[1].exec&&r[1].test?e[r[0]]=d?d.replace(r[1],r[2]):n:e[r[0]]=d?r[1].call(this,d,r[2]):n:4==r.length&&(e[r[0]]=d?r[3].call(this,d.replace(r[1],r[2])):n):e[r]=d||n;p+=2}return e},str:function(e,t){for(var a in t)if(typeof t[a]===l&&t[a].length>0){for(var i=0;i<t[a].length;i++)if(w.has(t[a][i],e))return a===s?n:a}else if(w.has(t[a],e))return a===s?n:a;return e}},x={browser:{oldsafari:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"}}},device:{amazon:{model:{"Fire Phone":["SD","KF"]}},sprint:{model:{"Evo Shift 4G":"7373KT"},vendor:{HTC:"APA",Sprint:"Sprint"}}},os:{windows:{version:{ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2000:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"}}}},j={browser:[[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,/(opera).+version\/([\w\.]+)/i,/(opera)[\/\s]+([\w\.]+)/i],[u,f],[/(opios)[\/\s]+([\w\.]+)/i],[[u,"Opera Mini"],f],[/\s(opr)\/([\w\.]+)/i],[[u,"Opera"],f],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i,/(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(rekonq)\/([\w\.]+)*/i,/(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs)\/([\w\.-]+)/i],[u,f],[/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],[[u,"IE"],f],[/(edge)\/((\d+)?[\w\.]+)/i],[u,f],[/(yabrowser)\/([\w\.]+)/i],[[u,"Yandex"],f],[/(comodo_dragon)\/([\w\.]+)/i],[[u,/_/g," "],f],[/(micromessenger)\/([\w\.]+)/i],[[u,"WeChat"],f],[/xiaomi\/miuibrowser\/([\w\.]+)/i],[f,[u,"MIUI Browser"]],[/\swv\).+(chrome)\/([\w\.]+)/i],[[u,/(.+)/,"$1 WebView"],f],[/android.+samsungbrowser\/([\w\.]+)/i,/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i],[f,[u,"Android Browser"]],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i,/(qqbrowser)[\/\s]?([\w\.]+)/i],[u,f],[/(uc\s?browser)[\/\s]?([\w\.]+)/i,/ucweb.+(ucbrowser)[\/\s]?([\w\.]+)/i,/juc.+(ucweb)[\/\s]?([\w\.]+)/i],[[u,"UCBrowser"],f],[/(dolfin)\/([\w\.]+)/i],[[u,"Dolphin"],f],[/((?:android.+)crmo|crios)\/([\w\.]+)/i],[[u,"Chrome"],f],[/;fbav\/([\w\.]+);/i],[f,[u,"Facebook"]],[/fxios\/([\w\.-]+)/i],[f,[u,"Firefox"]],[/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],[f,[u,"Mobile Safari"]],[/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],[f,u],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[u,[f,k.str,x.browser.oldsafari.version]],[/(konqueror)\/([\w\.]+)/i,/(webkit|khtml)\/([\w\.]+)/i],[u,f],[/(navigator|netscape)\/([\w\.-]+)/i],[[u,"Netscape"],f],[/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i,/(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]+)*/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[u,f]],cpu:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[[y,"amd64"]],[/(ia32(?=;))/i],[[y,w.lowerize]],[/((?:i[346]|x)86)[;\)]/i],[[y,"ia32"]],[/windows\s(ce|mobile);\sppc;/i],[[y,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[[y,/ower/,"",w.lowerize]],[/(sun4\w)[;\)]/i],[[y,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i],[[y,w.lowerize]]],device:[[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i],[p,g,[m,b]],[/applecoremedia\/[\w\.]+ \((ipad)/],[p,[g,"Apple"],[m,b]],[/(apple\s{0,1}tv)/i],[[p,"Apple TV"],[g,"Apple"]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad)/i,/(hp).+(tablet)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i],[g,p,[m,b]],[/(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i],[p,[g,"Amazon"],[m,b]],[/(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i],[[p,k.str,x.device.amazon.model],[g,"Amazon"],[m,v]],[/\((ip[honed|\s\w*]+);.+(apple)/i],[p,g,[m,v]],[/\((ip[honed|\s\w*]+);/i],[p,[g,"Apple"],[m,v]],[/(blackberry)[\s-]?(\w+)/i,/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|huawei|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i],[g,p,[m,v]],[/\(bb10;\s(\w+)/i],[p,[g,"BlackBerry"],[m,v]],[/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)/i],[p,[g,"Asus"],[m,b]],[/(sony)\s(tablet\s[ps])\sbuild\//i,/(sony)?(?:sgp.+)\sbuild\//i],[[g,"Sony"],[p,"Xperia Tablet"],[m,b]],[/(?:sony)?(?:(?:(?:c|d)\d{4})|(?:so[-l].+))\sbuild\//i],[[g,"Sony"],[p,"Xperia Phone"],[m,v]],[/\s(ouya)\s/i,/(nintendo)\s([wids3u]+)/i],[g,p,[m,h]],[/android.+;\s(shield)\sbuild/i],[p,[g,"Nvidia"],[m,h]],[/(playstation\s[34portablevi]+)/i],[p,[g,"Sony"],[m,h]],[/(sprint\s(\w+))/i],[[g,k.str,x.device.sprint.vendor],[p,k.str,x.device.sprint.model],[m,v]],[/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i],[g,p,[m,b]],[/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i,/(zte)-(\w+)*/i,/(alcatel|geeksphone|huawei|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i],[g,[p,/_/g," "],[m,v]],[/(nexus\s9)/i],[p,[g,"HTC"],[m,b]],[/(nexus\s6p)/i],[p,[g,"Huawei"],[m,v]],[/(microsoft);\s(lumia[\s\w]+)/i],[g,p,[m,v]],[/[\s\(;](xbox(?:\sone)?)[\s\);]/i],[p,[g,"Microsoft"],[m,h]],[/(kin\.[onetw]{3})/i],[[p,/\./g," "],[g,"Microsoft"],[m,v]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i,/mot[\s-]?(\w+)*/i,/(XT\d{3,4}) build\//i,/(nexus\s6)/i],[p,[g,"Motorola"],[m,v]],[/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[p,[g,"Motorola"],[m,b]],[/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],[[g,w.trim],[p,w.trim],[m,_]],[/hbbtv.+maple;(\d+)/i],[[p,/^/,"SmartTV"],[g,"Samsung"],[m,_]],[/\(dtv[\);].+(aquos)/i],[p,[g,"Sharp"],[m,_]],[/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,/((SM-T\w+))/i],[[g,"Samsung"],p,[m,b]],[/smart-tv.+(samsung)/i],[g,[m,_],p],[/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,/(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i,/sec-((sgh\w+))/i],[[g,"Samsung"],p,[m,v]],[/sie-(\w+)*/i],[p,[g,"Siemens"],[m,v]],[/(maemo|nokia).*(n900|lumia\s\d+)/i,/(nokia)[\s_-]?([\w-]+)*/i],[[g,"Nokia"],p,[m,v]],[/android\s3\.[\s\w;-]{10}(a\d{3})/i],[p,[g,"Acer"],[m,b]],[/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],[[g,"LG"],p,[m,b]],[/(lg) netcast\.tv/i],[g,p,[m,_]],[/(nexus\s[45])/i,/lg[e;\s\/-]+(\w+)*/i],[p,[g,"LG"],[m,v]],[/android.+(ideatab[a-z0-9\-\s]+)/i],[p,[g,"Lenovo"],[m,b]],[/linux;.+((jolla));/i],[g,p,[m,v]],[/((pebble))app\/[\d\.]+\s/i],[g,p,[m,q]],[/android.+;\s(glass)\s\d/i],[p,[g,"Google"],[m,q]],[/android.+(\w+)\s+build\/hm\1/i,/android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,/android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build/i],[[p,/_/g," "],[g,"Xiaomi"],[m,v]],[/android.+a000(1)\s+build/i],[p,[g,"OnePlus"],[m,v]],[/\s(tablet)[;\/]/i,/\s(mobile)(?:[;\/]|\ssafari)/i],[[m,w.lowerize],g,p]],engine:[[/windows.+\sedge\/([\w\.]+)/i],[f,[u,"EdgeHTML"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[u,f],[/rv\:([\w\.]+).*(gecko)/i],[f,u]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[u,f],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*/i,/(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i],[u,[f,k.str,x.os.windows.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[u,"Windows"],[f,k.str,x.os.windows.version]],[/\((bb)(10);/i],[[u,"BlackBerry"],f],[/(blackberry)\w*\/?([\w\.]+)*/i,/(tizen)[\/\s]([\w\.]+)/i,/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i,/linux;.+(sailfish);/i],[u,f],[/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i],[[u,"Symbian"],f],[/\((series40);/i],[u],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[u,"Firefox OS"],f],[/(nintendo|playstation)\s([wids34portablevu]+)/i,/(mint)[\/\s\(]?(\w+)*/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*/i,/(hurd|linux)\s?([\w\.]+)*/i,/(gnu)\s?([\w\.]+)*/i],[u,f],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[u,"Chromium OS"],f],[/(sunos)\s?([\w\.]+\d)*/i],[[u,"Solaris"],f],[/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i],[u,f],[/(haiku)\s(\w+)/i],[u,f],[/(ip[honead]+)(?:.*os\s([\w]+)*\slike\smac|;\sopera)/i],[[u,"iOS"],[f,/_/g,"."]],[/(mac\sos\sx)\s?([\w\s\.]+\w)*/i,/(macintosh|mac(?=_powerpc)\s)/i],[[u,"Mac OS"],[f,/_/g,"."]],[/((?:open)?solaris)[\/\s-]?([\w\.]+)*/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i,/(unix)\s?([\w\.]+)*/i],[u,f]]},T=function(e,a){if(!(this instanceof T))return new T(e,a).getResult();var i=e||(t&&t.navigator&&t.navigator.userAgent?t.navigator.userAgent:r),n=a?w.extend(j,a):j;return this.getBrowser=function(){var e=k.rgx.apply(this,n.browser);return e.major=w.major(e.version),e},this.getCPU=function(){return k.rgx.apply(this,n.cpu)},this.getDevice=function(){return k.rgx.apply(this,n.device)},this.getEngine=function(){return k.rgx.apply(this,n.engine)},this.getOS=function(){return k.rgx.apply(this,n.os)},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return i},this.setUA=function(e){return i=e,this},this};T.VERSION="0.7.12",T.BROWSER={NAME:u,MAJOR:"major",VERSION:f},T.CPU={ARCHITECTURE:y},T.DEVICE={MODEL:p,VENDOR:g,TYPE:m,CONSOLE:h,MOBILE:v,SMARTTV:_,TABLET:b,WEARABLE:q,EMBEDDED:"embedded"},T.ENGINE={NAME:u,VERSION:f},T.OS={NAME:u,VERSION:f},typeof i!==c?(typeof a!==c&&a.exports&&(i=a.exports=T),i.UAParser=T):typeof e===o&&e.amd?e(function(){return T}):t.UAParser=T;var z=t.jQuery||t.Zepto;if(typeof z!==c){var E=new T;z.ua=E.getResult(),z.ua.get=function(){return E.getUA()},z.ua.set=function(e){E.setUA(e);var t=E.getResult();for(var a in t)z.ua[a]=t[a]}}}("object"==typeof window?window:this)},{}],6:[function(e,t){function a(e){for(var t={},a=0;a<e.length;a++)for(var i in e[a])t[i]=e[a][i];return t}function i(e){var t="",a="";if(-1!=e.indexOf("?")){var i=e.split("?");t=i[0],a=i[1]}else a=e;var r=["email","email_confirmation","password"],s=a.split("&");return s=s.map(function(e){var t=e.split("="),a=t[0];return-1!=r.indexOf(a)?t[1]="[REDACTED]":t[1]!==undefined&&n(t[1]),t.join("=")}),n(""!=t?t+"?"+s.join("&"):s.join("&"))}function n(e){var t=/[a-zA-Z0-9\.\_\-\+]+(@|%40)[a-zA-Z0-9]+\.[a-zA-Z0-9]+/g;return e.replace(t,"[REDACTED]")}function r(){return{path:window.document.location.pathname,referrer:i(window.document.referrer),title:window.document.title,search:i(window.document.location.search),full_url:i(window.document.location.href),base_url:window.document.location.origin}}function s(){return{screen_height:window.screen.height,screen_width:window.screen.width}}function o(){var e=p(window.navigator.userAgent);return{browser_name:e.browser.name,browser_version:e.browser.version,browser_major_version:e.browser.major,os_name:e.os.name,os_version:e.os.version}}function c(){var e=u.parse(window.document.location.search),t={};return e.utm_source&&(t.utm_source=e.utm_source),e.utm_medium&&(t.utm_medium=e.utm_medium),e.utm_campaign&&(t.utm_campaign=e.utm_campaign),e.utm_term&&(t.utm_term=e.utm_term),e.utm_content&&(t.utm_content=e.utm_content),t}function l(){return a([s(),r(),o(),c()])}function d(e,t,a,i){return e.addEventListener?(e.addEventListener(t,a,i),!0):e.attachEvent?e.attachEvent("on"+t,a):(e["on"+t]=a,!0)}var p=e("ua-parser-js"),u=e("query-string");t.exports={mergeObjects:a,getMetrics:l,getBrowserAndOSMetrics:o,getScreenMetrics:s,getPageMetrics:r,getUtmCampaignData:c,filterUrl:i,addEvent:d}},{"query-string":3,"ua-parser-js":5}]},{},[1])(1)}),function(e){"use strict";function t(){var t=e.crypto||e.msCrypto;if(!o&&t&&t.getRandomValues)try{var a=new Uint8Array(16);d=o=function(){return t.getRandomValues(a),a},o()}catch(e){}if(!o){var i=new Array(16);c=o=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),i[t]=e>>>((3&t)<<3)&255;return i},"undefined"!=typeof console&&console.warn&&console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()")}}function a(){if("function"==typeof require)try{var e=require("crypto").randomBytes;l=o=e&&function(){return e(16)},o()}catch(e){}}function i(e,t,a){var i=t&&a||0,n=0;for(t=t||[],e.toLowerCase().replace(/[0-9a-f]{2}/g,function(e){n<16&&(t[i+n++]=g[e])});n<16;)t[i+n++]=0;return t}function n(e,t){var a=t||0,i=m;return i[e[a++]]+i[e[a++]]+i[e[a++]]+i[e[a++]]+"-"+i[e[a++]]+i[e[a++]]+"-"+i[e[a++]]+i[e[a++]]+"-"+i[e[a++]]+i[e[a++]]+"-"+i[e[a++]]+i[e[a++]]+i[e[a++]]+i[e[a++]]+i[e[a++]]+i[e[a++]]}function r(e,t,a){var i=t&&a||0,r=t||[];e=e||{};var s=null!=e.clockseq?e.clockseq:v,o=null!=e.msecs?e.msecs:(new Date).getTime(),c=null!=e.nsecs?e.nsecs:_+1,l=o-b+(c-_)/1e4;if(l<0&&null==e.clockseq&&(s=s+1&16383),(l<0||o>b)&&null==e.nsecs&&(c=0),c>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");b=o,_=c,v=s,o+=122192928e5;var d=(1e4*(268435455&o)+c)%4294967296;r[i++]=d>>>24&255,r[i++]=d>>>16&255,r[i++]=d>>>8&255,r[i++]=255&d;var p=o/4294967296*1e4&268435455;r[i++]=p>>>8&255,r[i++]=255&p,r[i++]=p>>>24&15|16,r[i++]=p>>>16&255,r[i++]=s>>>8|128,r[i++]=255&s;for(var u=e.node||h,m=0;m<6;m++)r[i+m]=u[m];return t||n(r)}function s(e,t,a){var i=t&&a||0;"string"==typeof e&&(t="binary"===e?new u(16):null,e=null),e=e||{};var r=e.random||(e.rng||o)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t)for(var s=0;s<16;s++)t[i+s]=r[s];return t||n(r)}var o,c,l,d,p;e?t():a();for(var u="function"==typeof Buffer?Buffer:Array,m=[],g={},f=0;f<256;f++)m[f]=(f+256).toString(16).substr(1),g[m[f]]=f;var y=o(),h=[1|y[0],y[1],y[2],y[3],y[4],y[5]],v=16383&(y[6]<<8|y[7]),b=0,_=0,q=s;q.v1=r,q.v4=s,q.parse=i,q.unparse=n,q.BufferClass=u,q._rng=o,q._mathRNG=c,q._nodeRNG=l,q._whatwgRNG=d,"undefined"!=typeof module&&module.exports?module.exports=q:"function"==typeof define&&define.amd?define(function(){return q}):(p=e.uuid,q.noConflict=function(){return e.uuid=p,q},e.uuid=q)
}("undefined"!=typeof window?window:null),function(e){"use strict";function t(t){return this.each(function(){var i=e(this),n=i.data("bs.tooltip"),r="object"==typeof t&&t;!n&&/destroy|hide/.test(t)||(n||i.data("bs.tooltip",n=new a(this,r)),"string"==typeof t&&n[t]())})}var a=function(e,t){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",e,t)};a.VERSION="3.3.7",a.TRANSITION_DURATION=150,a.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},a.prototype.init=function(t,a,i){if(this.enabled=!0,this.type=t,this.$element=e(a),this.options=this.getOptions(i),this.$viewport=this.options.viewport&&e(e.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var n=this.options.trigger.split(" "),r=n.length;r--;){var s=n[r];if("click"==s)this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this));else if("manual"!=s){var o="hover"==s?"mouseenter":"focusin",c="hover"==s?"mouseleave":"focusout";this.$element.on(o+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(c+"."+this.type,this.options.selector,e.proxy(this.leave,this))}}this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},a.prototype.getDefaults=function(){return a.DEFAULTS},a.prototype.getOptions=function(t){return t=e.extend({},this.getDefaults(),this.$element.data(),t),t.delay&&"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t},a.prototype.getDelegateOptions=function(){var t={},a=this.getDefaults();return this._options&&e.each(this._options,function(e,i){a[e]!=i&&(t[e]=i)}),t},a.prototype.enter=function(t){var a=t instanceof this.constructor?t:e(t.currentTarget).data("bs."+this.type);return a||(a=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,a)),t instanceof e.Event&&(a.inState["focusin"==t.type?"focus":"hover"]=!0),a.tip().hasClass("in")||"in"==a.hoverState?void(a.hoverState="in"):(clearTimeout(a.timeout),a.hoverState="in",a.options.delay&&a.options.delay.show?void(a.timeout=setTimeout(function(){"in"==a.hoverState&&a.show()},a.options.delay.show)):a.show())},a.prototype.isInStateTrue=function(){for(var e in this.inState)if(this.inState[e])return!0;return!1},a.prototype.leave=function(t){var a=t instanceof this.constructor?t:e(t.currentTarget).data("bs."+this.type);if(a||(a=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,a)),t instanceof e.Event&&(a.inState["focusout"==t.type?"focus":"hover"]=!1),!a.isInStateTrue()){if(clearTimeout(a.timeout),a.hoverState="out",!a.options.delay||!a.options.delay.hide)return a.hide();a.timeout=setTimeout(function(){"out"==a.hoverState&&a.hide()},a.options.delay.hide)}},a.prototype.show=function(){var t=e.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(t);var i=e.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(t.isDefaultPrevented()||!i)return;var n=this,r=this.tip(),s=this.getUID(this.type);this.setContent(),r.attr("id",s),this.$element.attr("aria-describedby",s),this.options.animation&&r.addClass("fade");var o="function"==typeof this.options.placement?this.options.placement.call(this,r[0],this.$element[0]):this.options.placement,c=/\s?auto?\s?/i,l=c.test(o);l&&(o=o.replace(c,"")||"top"),r.detach().css({top:0,left:0,display:"block"}).addClass(o).data("bs."+this.type,this),this.options.container?r.appendTo(this.options.container):r.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var d=this.getPosition(),p=r[0].offsetWidth,u=r[0].offsetHeight;if(l){var m=o,g=this.getPosition(this.$viewport);o="bottom"==o&&d.bottom+u>g.bottom?"top":"top"==o&&d.top-u<g.top?"bottom":"right"==o&&d.right+p>g.width?"left":"left"==o&&d.left-p<g.left?"right":o,r.removeClass(m).addClass(o)}var f=this.getCalculatedOffset(o,d,p,u);this.applyPlacement(f,o);var y=function(){var e=n.hoverState;n.$element.trigger("shown.bs."+n.type),n.hoverState=null,"out"==e&&n.leave(n)};e.support.transition&&this.$tip.hasClass("fade")?r.one("bsTransitionEnd",y).emulateTransitionEnd(a.TRANSITION_DURATION):y()}},a.prototype.applyPlacement=function(t,a){var i=this.tip(),n=i[0].offsetWidth,r=i[0].offsetHeight,s=parseInt(i.css("margin-top"),10),o=parseInt(i.css("margin-left"),10);isNaN(s)&&(s=0),isNaN(o)&&(o=0),t.top+=s,t.left+=o,e.offset.setOffset(i[0],e.extend({using:function(e){i.css({top:Math.round(e.top),left:Math.round(e.left)})}},t),0),i.addClass("in");var c=i[0].offsetWidth,l=i[0].offsetHeight;"top"==a&&l!=r&&(t.top=t.top+r-l);var d=this.getViewportAdjustedDelta(a,t,c,l);d.left?t.left+=d.left:t.top+=d.top;var p=/top|bottom/.test(a),u=p?2*d.left-n+c:2*d.top-r+l,m=p?"offsetWidth":"offsetHeight";i.offset(t),this.replaceArrow(u,i[0][m],p)},a.prototype.replaceArrow=function(e,t,a){this.arrow().css(a?"left":"top",50*(1-e/t)+"%").css(a?"top":"left","")},a.prototype.setContent=function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},a.prototype.hide=function(t){function i(){"in"!=n.hoverState&&r.detach(),n.$element&&n.$element.removeAttr("aria-describedby").trigger("hidden.bs."+n.type),t&&t()}var n=this,r=e(this.$tip),s=e.Event("hide.bs."+this.type);if(this.$element.trigger(s),!s.isDefaultPrevented())return r.removeClass("in"),e.support.transition&&r.hasClass("fade")?r.one("bsTransitionEnd",i).emulateTransitionEnd(a.TRANSITION_DURATION):i(),this.hoverState=null,this},a.prototype.fixTitle=function(){var e=this.$element;(e.attr("title")||"string"!=typeof e.attr("data-original-title"))&&e.attr("data-original-title",e.attr("title")||"").attr("title","")},a.prototype.hasContent=function(){return this.getTitle()},a.prototype.getPosition=function(t){t=t||this.$element;var a=t[0],i="BODY"==a.tagName,n=a.getBoundingClientRect();null==n.width&&(n=e.extend({},n,{width:n.right-n.left,height:n.bottom-n.top}));var r=window.SVGElement&&a instanceof window.SVGElement,s=i?{top:0,left:0}:r?null:t.offset(),o={scroll:i?document.documentElement.scrollTop||document.body.scrollTop:t.scrollTop()},c=i?{width:e(window).width(),height:e(window).height()}:null;return e.extend({},n,o,c,s)},a.prototype.getCalculatedOffset=function(e,t,a,i){return"bottom"==e?{top:t.top+t.height,left:t.left+t.width/2-a/2}:"top"==e?{top:t.top-i,left:t.left+t.width/2-a/2}:"left"==e?{top:t.top+t.height/2-i/2,left:t.left-a}:{top:t.top+t.height/2-i/2,left:t.left+t.width}},a.prototype.getViewportAdjustedDelta=function(e,t,a,i){var n={top:0,left:0};if(!this.$viewport)return n;var r=this.options.viewport&&this.options.viewport.padding||0,s=this.getPosition(this.$viewport);if(/right|left/.test(e)){var o=t.top-r-s.scroll,c=t.top+r-s.scroll+i;o<s.top?n.top=s.top-o:c>s.top+s.height&&(n.top=s.top+s.height-c)}else{var l=t.left-r,d=t.left+r+a;l<s.left?n.left=s.left-l:d>s.right&&(n.left=s.left+s.width-d)}return n},a.prototype.getTitle=function(){var e=this.$element,t=this.options;return e.attr("data-original-title")||("function"==typeof t.title?t.title.call(e[0]):t.title)},a.prototype.getUID=function(e){do{e+=~~(1e6*Math.random())}while(document.getElementById(e));return e},a.prototype.tip=function(){if(!this.$tip&&(this.$tip=e(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},a.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},a.prototype.enable=function(){this.enabled=!0},a.prototype.disable=function(){this.enabled=!1},a.prototype.toggleEnabled=function(){this.enabled=!this.enabled},a.prototype.toggle=function(t){var a=this;t&&((a=e(t.currentTarget).data("bs."+this.type))||(a=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,a))),t?(a.inState.click=!a.inState.click,a.isInStateTrue()?a.enter(a):a.leave(a)):a.tip().hasClass("in")?a.leave(a):a.enter(a)},a.prototype.destroy=function(){var e=this;clearTimeout(this.timeout),this.hide(function(){e.$element.off("."+e.type).removeData("bs."+e.type),e.$tip&&e.$tip.detach(),e.$tip=null,e.$arrow=null,e.$viewport=null,e.$element=null})};var i=e.fn.tooltip;e.fn.tooltip=t,e.fn.tooltip.Constructor=a,e.fn.tooltip.noConflict=function(){return e.fn.tooltip=i,this}}(jQuery),function(e){"use strict";function t(t){return this.each(function(){var i=e(this),n=i.data("bs.popover"),r="object"==typeof t&&t;!n&&/destroy|hide/.test(t)||(n||i.data("bs.popover",n=new a(this,r)),"string"==typeof t&&n[t]())})}var a=function(e,t){this.init("popover",e,t)};if(!e.fn.tooltip)throw new Error("Popover requires tooltip.js");a.VERSION="3.3.7",a.DEFAULTS=e.extend({},e.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),a.prototype=e.extend({},e.fn.tooltip.Constructor.prototype),a.prototype.constructor=a,a.prototype.getDefaults=function(){return a.DEFAULTS},a.prototype.setContent=function(){var e=this.tip(),t=this.getTitle(),a=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof a?"html":"append":"text"](a),e.removeClass("fade top bottom left right in"),e.find(".popover-title").html()||e.find(".popover-title").hide()},a.prototype.hasContent=function(){return this.getTitle()||this.getContent()},a.prototype.getContent=function(){var e=this.$element,t=this.options;return e.attr("data-content")||("function"==typeof t.content?t.content.call(e[0]):t.content)},a.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var i=e.fn.popover;e.fn.popover=t,e.fn.popover.Constructor=a,e.fn.popover.noConflict=function(){return e.fn.popover=i,this}}(jQuery),function(e){"use strict";function t(){$(".copy-button").click(function(){var e=$(this);if(!e.hasClass("copy-button--disabled")){var t=e.next().clone();a(t),i(t.text()),e.text("Copied to Clipboard"),e.addClass("copy-button--disabled"),setTimeout(function(){e.fadeOut("fast"),setTimeout(function(){e.text("Copy"),e.fadeIn("slow",function(){e.removeClass("copy-button--disabled")})},500)},1500)}})}function a(e){e.find(".line-numbers").remove(),e.find(".hljs-line-numbers").remove()}function i(t){var a=$("<textarea>");$("body").append(a),a.val(t).select(),e.document.execCommand("copy"),a.remove()}$(t)}(window),window.CookieManager=function(){function e(e){var a={};return t(e).forEach(function(e){var t=e.split("=");2===t.length&&(a[t[0]]=t[1])}),a}function t(e){return e.split(/; */)}return{getCookie:function(t,a){return e(t.cookie)[a]},setCookie:function(e,t,a,i){i=i||{},i.domain||(i.domain=e.location.host.split(".").slice(-2).join("."));var n=Object.keys(i).reduce(function(e,t){return e.push(t+"="+i[t]),e},[t+"="+a]).join("; ");e.cookie=n}}}(),window.getEnv=function(){return $("meta[name=environment]").attr("content")},$(function(){try{var e=CookieManager.getCookie(document,"_savt");if(!e){e=uuid();var t=new Date(Date.now()+94608e6).toUTCString();CookieManager.setCookie(document,"_savt",e,{expires:t})}var a=window.getEnv(),i=a&&"development"!=a?EventstreamClient:LocalTrackingClient,n=new Tracker(i,e,a);window.tracker=n,n.trackPageLoad(document.location),$("a[href]").click(function(e){n.trackLinkClick(e)}),$(".copy-button").click(function(){var e=this.closest(".CodeRay")||this.closest("pre[id]");n.trackButtonClick(e.id)}),Ratings.init(n)}catch(e){console.warn(e)}}),function(e,t,a,i,n,r,s){e.GoogleAnalyticsObject=n,e[n]=e[n]||function(){(e[n].q=e[n].q||[]).push(arguments)},e[n].l=1*new Date,r=t.createElement(a),s=t.getElementsByTagName(a)[0],r.async=1,r.src=i,s.parentNode.insertBefore(r,s)}(window,document,"script","https://www.google-analytics.com/analytics.js","ga"),$(function(){ga("create","UA-63283804-1","auto"),ga("send","pageview"),$("a").click(function(){ga("send","event","link","click",this.href)}),$(".copy-button").click(function(){var e=this.closest(".CodeRay")||this.closest("pre[id]");ga("send","event","copy-button","click",e.id)})}),function(){"use strict";function e(e){return e.split(t).length}$(function(){$(".code-block--highlight .code-block__code").each(function(e,t){hljs.highlightBlock(t)}),$(".code-block--numbered .code-block__code").each(function(t,a){for(var i="",n=e(a.textContent),r=0;r<n;r++)i+=r+1+"\n";$("<code>").addClass("hljs hljs-line-numbers").text(i).prependTo($(a))})});var t=/\r\n|\r|\n/g}(window),window.LocalTrackingClient=function(){function e(e){console.log(JSON.stringify(e))}function t(){}return t.prototype.track=e,t.prototype.trackV2PageView=e,t.prototype.trackV2WithDefaults=e,t}(),window.Ratings=function(){return{init:function(e){var t=$(".ratings__rating");t.click(function(a){$target=$(a.currentTarget),t.off("click"),$(".ratings__prompt").text("Thank you for your feedback!"),t.not($target).addClass("ratings__rating--inactive"),$target.addClass("ratings__rating--active");var i=$target.hasClass("ratings__rating--happy")?1:-1;e._v2client.trackV2WithDefaults({catalog_name:"page_click",page_click_action:"ratings-click",page_click_description:i}),"function"==typeof ga&&ga("send",{hitType:"event",eventCategory:"ratings",eventAction:"click",eventValue:i})})}}}(),function(){"use strict";$(function(){function e(){a.addClass("open"),i.addClass("disabled"),n.addClass("no-scroll")}function t(){a.removeClass("open"),i.removeClass("disabled"),n.removeClass("no-scroll")}var a=$(".article-picker"),i=$("#page-cover"),n=$(".page-container");$("#menu-link").click(e),$("#close-button").click(t),i.click(t)})}(window),$(function(){$("#tipue_search_input").tipuesearch({showURL:!1,showTitleCount:!1,show:10,descriptiveWords:15})}),function(){"use strict";function e(){var e=$(".article-toc-section__title");e.click(function(e){for(var t=$(e.target);!t.hasClass("article-toc-section__title");)t=t.parent();var a=t.next(".article-toc-subsection");t.toggleClass("article-toc-section__title--active"),a.slideToggle("fast")}),e.keyup(function(e){13===e.keyCode&&$(this).click(),9===e.keyCode&&($(".article-toc-focus-outline").removeClass("article-toc-focus-outline"),$(this).addClass("article-toc-focus-outline"))})}$(e)}(window);var tipuesearch={pages:[{title:"Obtaining an Android app fingerprint",text:"Obtaining an Android app fingerprint In order to use the Point of Sale obtaining android app fingerprint order point sale api android need provide fingerprint app certificate square application dashboard article demonstrates obtain certificate fingerprints process differs slightly generating fingerprint debug build ultimate release build order point sale api android need provide fingerprint app certificate square application dashboard fingerprint app certificate application dashboard article demonstrates obtain certificate fingerprints process differs slightly generating fingerprint debug build ultimate release build debug build release build debug fingerprint building app locally debugging testing default signs debug certificate generated automatically android sdk tools certificate information located debug keystore file alongside android environment configuration files default files live android directory obtain fingerprint debug certificate run following command keytool list keystore android debug keystore alias androiddebugkey storepass android keypass android command output includes section looks like certificate fingerprints md5 not_this_value sha1 this_value sha256 not_this_value value string hex values separated colons copy value sha1 fingerprint value provide application dashboard communicate square point sale app debug build debug fingerprint building app locally debugging testing default signs debug certificate generated automatically android sdk tools certificate information located debug keystore file alongside android environment configuration files default files live android directory debug keystore android obtain fingerprint debug certificate run following command keytool list keystore android debug keystore alias androiddebugkey storepass android keypass android command output includes section looks like certificate fingerprints md5 not_this_value sha1 this_value sha256 not_this_value value string hex values separated colons copy value sha1 fingerprint value provide application dashboard communicate square point sale app debug build sha1 application dashboard release fingerprint order release android app first sign certificate create typically following steps described article obtaining fingerprint certificate similar obtaining fingerprint debug certificate except time run keytool keystore file created app keytool list keystore path_to_keystore alias value_of_alias command output includes section looks like certificate fingerprints md5 not_this_value sha1 this_value sha256 not_this_value copy value sha1 fingerprint value provide application dashboard communicate square point sale app release build release fingerprint order release android app first sign certificate create typically following steps described article article obtaining fingerprint certificate similar obtaining fingerprint debug certificate except time run keytool keystore file created app keytool keystore keytool list keystore path_to_keystore alias value_of_alias command output includes section looks like certificate fingerprints md5 not_this_value sha1 this_value sha256 not_this_value copy value sha1 fingerprint value provide application dashboard communicate square point sale app release build sha1 application dashboard obtaining fingerprint directly signed apk access signed apk keystore file also obtain fingerprint directly apk like keytool list printcert jarfile my_app apk obtaining fingerprint directly signed apk access signed apk keystore file also obtain fingerprint directly apk like keystore keytool list printcert jarfile my_app apk",tags:"",url:"/articles/android-app-fingerprint"},{title:"Catalog API (2017-05)",text:"Catalog API (2017-05) Square Catalog API replaces the Item Management V1 API. With catalog api 2017-05 square catalog api replaces item management v1 api new release developers manage product catalog faster scalable fashion catalog api moves per-location management approach per-seller approach eliminating need manage separate catalog location also simplifies large catalog management introducing bulk operations information see catalog overview explanation catalog api works see catalog api reference learn available endpoints square catalog api replaces item management v1 api new release developers manage product catalog faster scalable fashion catalog api moves per-location management approach per-seller approach eliminating need manage separate catalog location also simplifies large catalog management introducing bulk operations item management v1 api information see catalog overview explanation catalog api works see catalog api reference learn available endpoints see catalog overview explanation catalog api works catalog overview see catalog api reference learn available endpoints catalog api reference",tags:"",url:"/articles/catalog-api-2017-05"},{title:"Catalog API Overview",
text:"Catalog API Overview Specs at a glance Language Support HTTP C# Java PHP Python catalog api overview specs glance language support http java php python ruby platform web resources technical reference sample app java square dashboard square catalog lets developers create maintain collection items physical digital services available sale square merchant account catalog v2 api replaces square items connect v1 api improved efficiency expanded functionality including individual batch support retrieval upsert insert update delete catalog api lets developers handle simple tasks minimal endpoint calls still providing functionality needed sophisticated applications specs glance language support http java php python ruby platform web resources technical reference sample app java square dashboard specs glance language support http java php python ruby language support http java php python ruby http java php python ruby platform web platform web web resources technical reference sample app java square dashboard resources technical reference sample app java square dashboard technical reference sample app java square dashboard square catalog lets developers create maintain collection items physical digital services available sale square merchant account catalog v2 api replaces square items connect v1 api improved efficiency expanded functionality including individual batch support retrieval upsert insert update delete retrieval upsert insert update delete catalog api lets developers handle simple tasks minimal endpoint calls still providing functionality needed sophisticated applications requirements limitations square catalog api provide integrated inventory management inventory management currently handled inventory api v1 catalog calls include authorization token header targeted merchant account anonymous catalog calls allowed applications using catalog api items_read items_write permissions targeted merchant account square catalog api supported sandbox mode time requirements limitations square catalog api provide integrated inventory management inventory management currently handled inventory api v1 catalog calls include authorization token header targeted merchant account anonymous catalog calls allowed applications using catalog api items_read items_write permissions targeted merchant account square catalog api supported sandbox mode time square catalog api provide integrated inventory management inventory management currently handled inventory api v1 inventory api v1 catalog calls include authorization token header targeted merchant account anonymous catalog calls allowed authorization token header applications using catalog api items_read items_write permissions targeted merchant account items_read items_write permissions square catalog api supported sandbox mode time sandbox mode catalog object model catalog api packages information catalogobject generalized wrapper classes across catalog object model including catalogitem core product information used configure top-level entities catalog latte catalogitemvariation one incarnations product used represent actual item sold assigned price sku small medium large catalogmodifier information individual modifier used provide customization information product whole milk skim milk almond milk catalogmodifierlist collection modifiers logically grouped milk choices catalogcategory product category information used logically group similar products pens vs pencils hot drinks vs cold drinks catalogdiscount discount information used provide manually defined discounts goods services catalogtax taxation information used configure tax requirements items catalog catalog items variations modifiers working square catalog important understand distinction catalog items variations modifiers catalog item core representation thing words product sold latte variation instantiation specific catalog item assigned price sku medium latte modifier product customization applicable one variations may may associated additional cost medium latte whole milk foam catalog items versus variations catalog items represent digital physical items pdf printable coffee services personal training dog walking donations dues artistic patronage club memberships catalogitem price sku represents high-level product actual item service sold example pdf printables monthly activity tracker february 2017 sherlock holmes coloring page daily agenda blank coffee latte mocha espresso personal training personal training session fitness assessment nutritional planning pet care dog walking grooming training donation options patronage membership sponsorship advertising partner catalogitem least one variation catalogitemvariation associated added purchase used transaction variations represent specific version product sold often assigned sku price example pdf printable monthly activity tracker february 2017 a3 size a4 size a5 size latte large medium small personal training session 30-minute session 60-minute session dog walking 60-minute session 90-minute session patronage membership membership dues monthly recurring donation annual one-time donation exactly draw line item variation nuanced complicated entirely dependent products offered example merchant providing personal training might offer following catalog service-based products on-site training in-home training fitness evaluation nutritional evaluation first glance may seem like first two products on-site training in-home training need variations on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session fitness evaluation nutritional evaluation every catalog item least one variation work one solution group fitness evaluation nutritional evaluation common offering health evaluation two variations one fitness level one nutrition example on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session health evaluation fitness evaluation nutritional evaluation consider situation evaluations need in-person case might make sense keep original product listing add variations based evaluation takes place example on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session fitness evaluation in-person consult nutritional evaluation in-person consult online vc consult forcing product least one variation may seem arbitrary important distinction add modifications different versions given product may different skus different prices offered specific store locations offered specific quantities based location differentiating idea product catalogitem manifestation catalogitemvariation creates greater flexibility distribution chain inventory management without requiring excessive duplication variations versus modifiers modifiers catalogmodifier customizations product associated specific transaction related variations associated price skus lack sku means product agnostic also means quantity modifiers also grouped list catalogmodifierlist based nature customization example milk type whole 2 1 almond coconut soy toppings pickles lettuce onions mayo mustard pesto cover color steel blue jay barn red language english spanish japanese german difference variations modifications modifications relevant product customized part order example selecting preferred pickup window dog walking service early morning afternoon early evening selecting wrapping paper pattern purchase gift blue green stripes polka dots selecting custom embroidery patterns jersey bees gophers ham sandwich cases specific catalogitemvariation thing added purchase irrelevant customization example pickup window equally relevant whether customer orders 30-minute walk 60 minute walk wrapping paper selected applies regardless gift purchased size jersey affect custom embroidery selected categories catalogcategory object provides basic structure organizing items catalog categories listed categories page square dashboard categories tab items applet square point sale app category names entirely arbitrary hot drinks team favorites quetzalcoatlus make sense displayed dashboard pos categories useful making large catalog easier look manage designed care given catalog item may belong one category discounts catalogdiscount object provides information reducing total cost order discounts listed discounts page square dashboard discounts tab items applet square point sale app discounts fixed value percentage dynamic value entered time sale applied pre-tax total entire purchase individual item purchase taxes catalogtax object provides basic structure calculating appropriate taxes catalogitemvariation object tax values strictly percentage-based applied individual items sale associated tax part configuration catalogitem specifies taxes apply default although merchant override defaults time sale important note catalogtax objects exist parallel catalogitem objects new catalogitem created taxes apply unless associated catalogtax object explicitly provided taxes listed taxes page square dashboard catalogtax defined additive tax added top price items applied example additive 10 tax applied 100 item total 110 inclusive tax assumed already included price items apply example inclusive 10 tax applied 100 item total still 100 actual base cost item assumed 90 91 9 09 total tax amount defined taxes applied payments one following phases subtotal phase taxes applied subtotal phase applied base cost applicable items vast majority taxes applied phase total phase taxes applied total phase applied base cost applicable items tax amounts applied items subtotal phase case catalogitem subject additive inclusive taxes additive tax applies portion price excludes inclusive tax example 100 item 10 inclusive tax 5 additive tax 5 additive tax applies 90 91 base price item item price minus inclusive tax catalog object model catalog api packages information catalogobject generalized wrapper classes across catalog object model including catalogitem core product information used configure top-level entities catalog latte catalogitemvariation one incarnations product used represent actual item sold assigned price sku small medium large catalogmodifier information individual modifier used provide customization information product whole milk skim milk almond milk catalogmodifierlist collection modifiers logically grouped milk choices catalogcategory product category information used logically group similar products pens vs pencils hot drinks vs cold drinks catalogdiscount discount information used provide manually defined discounts goods services catalogtax taxation information used configure tax requirements items catalog catalogitem core product information used configure top-level entities catalog latte catalogitem catalogitemvariation one incarnations product used represent actual item sold assigned price sku small medium large catalogitemvariation catalogmodifier information individual modifier used provide customization information product whole milk skim milk almond milk catalogmodifier catalogmodifierlist collection modifiers logically grouped milk choices catalogmodifierlist catalogcategory product category information used logically group similar products pens vs pencils hot drinks vs cold drinks catalogcategory catalogdiscount discount information used provide manually defined discounts goods services catalogdiscount catalogtax taxation information used configure tax requirements items catalog catalogtax catalog items variations modifiers working square catalog important understand distinction catalog items variations modifiers catalog item core representation thing words product sold latte variation instantiation specific catalog item assigned price sku medium latte modifier product customization applicable one variations may may associated additional cost medium latte whole milk foam catalog item core representation thing words product sold latte catalog item variation instantiation specific catalog item assigned price sku medium latte variation modifier product customization applicable one variations may may associated additional cost medium latte whole milk foam modifier catalog items versus variations catalog items represent digital physical items pdf printable coffee services personal training dog walking donations dues artistic patronage club memberships digital physical items pdf printable coffee services personal training dog walking donations dues artistic patronage club memberships catalogitem price sku represents high-level product actual item service sold example catalogitem pdf printables monthly activity tracker february 2017 sherlock holmes coloring page daily agenda blank coffee latte mocha espresso personal training personal training session fitness assessment nutritional planning pet care dog walking grooming training donation options patronage membership sponsorship advertising partner pdf printables monthly activity tracker february 2017 sherlock holmes coloring page daily agenda blank coffee latte mocha espresso personal training personal training session fitness assessment nutritional planning pet care dog walking grooming training donation options patronage membership sponsorship advertising partner pdf printables monthly activity tracker february 2017 sherlock holmes coloring page daily agenda blank pdf printables monthly activity tracker february 2017 sherlock holmes coloring page daily agenda blank coffee latte mocha espresso coffee latte mocha espresso personal training personal training session fitness assessment nutritional planning personal training personal training session fitness assessment nutritional planning pet care dog walking grooming training pet care dog walking grooming training donation options patronage membership sponsorship advertising partner donation options patronage membership sponsorship advertising partner catalogitem least one variation catalogitemvariation associated added purchase used transaction variations represent specific version product sold often assigned sku price example catalogitem variation catalogitemvariation pdf printable monthly activity tracker february 2017 a3 size a4 size a5 size latte large medium small personal training session 30-minute session 60-minute session dog walking 60-minute session 90-minute session patronage membership membership dues monthly recurring donation annual one-time donation pdf printable monthly activity tracker february 2017 a3 size a4 size a5 size latte large medium small personal training session 30-minute session 60-minute session dog walking 60-minute session 90-minute session patronage membership membership dues monthly recurring donation annual one-time donation pdf printable monthly activity tracker february 2017 a3 size a4 size a5 size pdf printable monthly activity tracker february 2017 a3 size a4 size a5 size latte large medium small latte large medium small personal training session 30-minute session 60-minute session personal training session 30-minute session 60-minute session dog walking 60-minute session 90-minute session dog walking 60-minute session 90-minute session patronage membership membership dues monthly recurring donation annual one-time donation patronage membership membership dues monthly recurring donation annual one-time donation exactly draw line item variation nuanced complicated entirely dependent products offered example merchant providing personal training might offer following catalog service-based products on-site training in-home training fitness evaluation nutritional evaluation on-site training in-home training fitness evaluation nutritional evaluation first glance may seem like first two products on-site training in-home training need variations on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session fitness evaluation nutritional evaluation on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session fitness evaluation nutritional evaluation on-site training 30-minute session 60-minute session on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session in-home training 60-minute session 90-minute session fitness evaluation fitness evaluation nutritional evaluation nutritional evaluation every catalog item least one variation work one solution group fitness evaluation nutritional evaluation common offering health evaluation two variations one fitness level one nutrition example every catalog item least one variation on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session health evaluation fitness evaluation nutritional evaluation on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session health evaluation fitness evaluation nutritional evaluation on-site training 30-minute session 60-minute session on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session in-home training 60-minute session 90-minute session health evaluation fitness evaluation nutritional evaluation health evaluation fitness evaluation nutritional evaluation consider situation evaluations need in-person case might make sense keep original product listing add variations based evaluation takes place example on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session fitness evaluation in-person consult nutritional evaluation in-person consult online vc consult on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session fitness evaluation in-person consult nutritional evaluation in-person consult online vc consult on-site training 30-minute session 60-minute session on-site training 30-minute session 60-minute session in-home training 60-minute session 90-minute session in-home training 60-minute session 90-minute session fitness evaluation in-person consult fitness evaluation in-person consult nutritional evaluation in-person consult online vc consult nutritional evaluation in-person consult online vc consult forcing product least one variation may seem arbitrary important distinction add modifications different versions given product may different skus different prices offered specific store locations offered specific quantities based location different skus different prices offered specific store locations offered specific quantities based location differentiating idea product catalogitem manifestation catalogitemvariation creates greater flexibility distribution chain inventory management without requiring excessive duplication catalogitem catalogitemvariation variations versus modifiers modifiers catalogmodifier customizations product associated specific transaction related variations associated price skus lack sku means product agnostic also means quantity catalogmodifier customizations modifiers also grouped list catalogmodifierlist based nature customization example catalogmodifierlist milk type whole 2 1 almond coconut soy toppings pickles lettuce onions mayo mustard pesto cover color steel blue jay barn red language english spanish japanese german milk type whole 2 1 almond coconut soy toppings pickles lettuce onions mayo mustard pesto cover color steel blue jay barn red language english spanish japanese german milk type whole 2 1 almond coconut soy milk type whole 2 1 almond coconut soy toppings pickles lettuce onions mayo mustard pesto toppings pickles lettuce onions mayo mustard pesto cover color steel blue jay barn red cover color steel blue jay barn red language english spanish japanese german language english spanish japanese german difference variations modifications modifications relevant product customized part order example modifications relevant product customized part order selecting preferred pickup window dog walking service early morning afternoon early evening selecting wrapping paper pattern purchase gift blue green stripes polka dots selecting custom embroidery patterns jersey bees gophers ham sandwich selecting preferred pickup window dog walking service early morning afternoon early evening selecting wrapping paper pattern purchase gift blue green stripes polka dots selecting custom embroidery patterns jersey bees gophers ham sandwich cases specific catalogitemvariation thing added purchase irrelevant customization example pickup window equally relevant whether customer orders 30-minute walk 60 minute walk wrapping paper selected applies regardless gift purchased size jersey affect custom embroidery selected catalogitemvariation categories catalogcategory object provides basic structure organizing items catalog categories listed categories page square dashboard categories tab items applet square point sale app catalogcategory category names entirely arbitrary hot drinks team favorites quetzalcoatlus make sense displayed dashboard pos categories useful making large catalog easier look manage designed care given catalog item may belong one category discounts catalogdiscount object provides information reducing total cost order discounts listed discounts page square dashboard discounts tab items applet square point sale app catalogdiscount discounts fixed value percentage dynamic value entered time sale applied pre-tax total entire purchase individual item purchase taxes catalogtax object provides basic structure calculating appropriate taxes catalogitemvariation object tax values strictly percentage-based applied individual items sale associated tax part configuration catalogitem specifies taxes apply default although merchant override defaults time sale important note catalogtax objects exist parallel catalogitem objects new catalogitem created taxes apply unless associated catalogtax object explicitly provided taxes listed taxes page square dashboard catalogtax catalogitemvariation catalogitem catalogtax catalogitem catalogitem catalogtax catalogtax defined catalogtax additive tax added top price items applied example additive 10 tax applied 100 item total 110 inclusive tax assumed already included price items apply example inclusive 10 tax applied 100 item total still 100 actual base cost item assumed 90 91 9 09 total tax amount additive tax added top price items applied example additive 10 tax applied 100 item total 110 inclusive tax assumed already included price items apply example inclusive 10 tax applied 100 item total still 100 actual base cost item assumed 90 91 9 09 total tax amount defined taxes applied payments one following phases subtotal phase taxes applied subtotal phase applied base cost applicable items vast majority taxes applied phase total phase taxes applied total phase applied base cost applicable items tax amounts applied items subtotal phase subtotal phase taxes applied subtotal phase applied base cost applicable items vast majority taxes applied phase total phase taxes applied total phase applied base cost applicable items tax amounts applied items subtotal phase case catalogitem subject additive inclusive taxes additive tax applies portion price excludes inclusive tax example 100 item 10 inclusive tax 5 additive tax 5 additive tax applies 90 91 base price item item price minus inclusive tax catalogitem technical overview catalog api includes bulk endpoints help reduce number api calls required catalog management pagination large result sets reduce server load changes made catalog api stored square database immediately visible square dashboard square point sale across merchant locations exchanges catalog endpoints catalogobject data type generalized wrapper configuring common parameters type package entity-specific information core types catalog object model type item item_variation modifier modifier_list category discount tax set catalog object creation updated_at date time recent update version version catalogobject is_deleted true false set catalog connect_v1_ids catalog_v1_id itemid catalog v1 location_id location v1 used present_at_all_locations true false present_at_location_ids locationid-1 locationid-n absent_at_location_ids locationid-1 locationid-n item_data populated catalogitem object type item item_variation_data populated catalogitemvariation object type item_variation modifier_data populated catalogmodifier object type modifier modifier_list_data populated catalogmodifierlist object type modifier_list category_data populated catalogcategory object type category discount_data populated catalogdiscount object type discount tax_data populated catalogtax object type tax important note catalogobject generalized wrapper inherently imply anything data inside catalogobjects nested example consider product called consulting detective two variations called sherlock holmes shawn spencer represented catalogobject type item contained two child catalogobject entries type item_variation type item w62uwfy35cwmygvwk6twjdni updated_at 2016-11-16t22 25 24 878z version 1479335124878 is_deleted false present_at_all_locations true item_data name consulting detective description solver difficult mysteries often excessive ego category_id bjnqcf2fj6s6uidt65abhlrx tax_ids hurxqooaic4izsi2bexqryfy variations type item_variation 2tzfaohwgg7pak2qexwypzsp updated_at 2016-11-16t22 25 24 878z is_deleted false present_at_all_locations true item_variation_data item_id w62uwfy35cwmygvwk6twjdni name sherlock holmes ordinal 0 pricing_type fixed_pricing price_money amount 1500 currency usd type item_variation 2tzfaohwgg7pak2qexwypzsp updated_at 2016-11-16t22 25 24 878z is_deleted false present_at_all_locations true item_variation_data item_id w62uwfy35cwmygvwk6twjdni name shawn spencer ordinal 1 pricing_type fixed_pricing price_money amount 5000 currency usd idempotency keys idempotency keys strings unique across change requests made application catalog required transaction alter data catalog identical request issued unchanged idempotency key server will return response returned original request keys reused makes sense retry identical request attempts reuse idempotency key new altered request will fail square stores request response bodies reasonable amount time applications plan able retry request days weeks past pagination catalog endpoints potential return large number objects employ pagination large result sets endpoint returns initial subset first page objects pagination cursor pagination cursor either set string represents current place result set empty string current page final page results fetch next page cursor appended original query request calling endpoint technical overview catalog api includes bulk endpoints help reduce number api calls required catalog management pagination large result sets reduce server load changes made catalog api stored square database immediately visible square dashboard square point sale across merchant locations exchanges catalog endpoints catalogobject data type generalized wrapper configuring common parameters type package entity-specific information core types catalog object model type item item_variation modifier modifier_list category discount tax set catalog object creation updated_at date time recent update version version catalogobject is_deleted true false set catalog connect_v1_ids catalog_v1_id itemid catalog v1 location_id location v1 used present_at_all_locations true false present_at_location_ids locationid-1 locationid-n absent_at_location_ids locationid-1 locationid-n item_data populated catalogitem object type item item_variation_data populated catalogitemvariation object type item_variation modifier_data populated catalogmodifier object type modifier modifier_list_data populated catalogmodifierlist object type modifier_list category_data populated catalogcategory object type category discount_data populated catalogdiscount object type discount tax_data populated catalogtax object type tax type item item_variation modifier modifier_list category discount tax set catalog object creation updated_at date time recent update version version catalogobject is_deleted true false set catalog connect_v1_ids catalog_v1_id itemid catalog v1 location_id location v1 used present_at_all_locations true false present_at_location_ids locationid-1 locationid-n absent_at_location_ids locationid-1 locationid-n item_data populated catalogitem object type item item_variation_data populated catalogitemvariation object type item_variation modifier_data populated catalogmodifier object type modifier modifier_list_data populated catalogmodifierlist object type modifier_list category_data populated catalogcategory object type category discount_data populated catalogdiscount object type discount tax_data populated catalogtax object type tax type item item_variation modifier modifier_list category discount tax set catalog object creation updated_at date time recent update version j is_deleted true false connect_v1_ids catalog_v1_id itemid catalog v1 location_id location v1 used present_at_all_locations true false present_at_location_ids locationid-1 locationid-n absent_at_location_ids locationid-1 locationid-n item_data j item_variation_data j _ modifier_data j modifier_list_data j _ category_data j discount_data j tax_data x j x important note catalogobject generalized wrapper inherently imply anything data inside catalogobjects nested catalogobject catalogobject nested example consider product called consulting detective two variations called sherlock holmes shawn spencer represented catalogobject type item contained two child catalogobject entries type item_variation catalogobject item catalogobject item_variation type item w62uwfy35cwmygvwk6twjdni updated_at 2016-11-16t22 25 24 878z version 1479335124878 is_deleted false present_at_all_locations true item_data name consulting detective description solver difficult mysteries often excessive ego category_id bjnqcf2fj6s6uidt65abhlrx tax_ids hurxqooaic4izsi2bexqryfy variations type item_variation 2tzfaohwgg7pak2qexwypzsp updated_at 2016-11-16t22 25 24 878z is_deleted false present_at_all_locations true item_variation_data item_id w62uwfy35cwmygvwk6twjdni name sherlock holmes ordinal 0 pricing_type fixed_pricing price_money amount 1500 currency usd type item_variation 2tzfaohwgg7pak2qexwypzsp updated_at 2016-11-16t22 25 24 878z is_deleted false present_at_all_locations true item_variation_data item_id w62uwfy35cwmygvwk6twjdni name shawn spencer ordinal 1 pricing_type fixed_pricing price_money amount 5000 currency usd type item w62uwfy35cwmygvwk6twjdni updated_at 2016-11-16t22 25 24 878z version 1479335124878 is_deleted false present_at_all_locations true item_data name consulting detective description solver difficult mysteries often excessive ego category_id bjnqcf2fj6s6uidt65abhlrx tax_ids hurxqooaic4izsi2bexqryfy variations type item_variation 2tzfaohwgg7pak2qexwypzsp updated_at 2016-11-16t22 25 24 878z is_deleted false present_at_all_locations true item_variation_data item_id w62uwfy35cwmygvwk6twjdni name sherlock holmes ordinal 0 pricing_type fixed_pricing price_money amount 1500 currency usd type item_variation 2tzfaohwgg7pak2qexwypzsp updated_at 2016-11-16t22 25 24 878z is_deleted false present_at_all_locations true item_variation_data item_id w62uwfy35cwmygvwk6twjdni name shawn spencer ordinal 1 pricing_type fixed_pricing price_money amount 5000 currency usd type item w62uwfy35cwmygvwk6twjdni updated_at 2016-11-16t22 25 24 878z version 1479335124878 is_deleted false present_at_all_locations true item_data name consulting detective description solver difficult mysteries often excessive ego category_id bjnqcf2fj6s6uidt65abhlrx tax_ids hurxqooaic4izsi2bexqryfy variations type item_variation 2tzfaohwgg7pak2qexwypzsp updated_at 2016-11-16t22 25 24 878z is_deleted false present_at_all_locations true item_variation_data item_id w62uwfy35cwmygvwk6twjdni name sherlock holmes ordinal 0 pricing_type fixed_pricing price_money amount 1500 currency usd type item_variation 2tzfaohwgg7pak2qexwypzsp updated_at 2016-11-16t22 25 24 878z is_deleted false present_at_all_locations true item_variation_data item_id w62uwfy35cwmygvwk6twjdni name shawn spencer ordinal 1 pricing_type fixed_pricing price_money amount 5000 currency usd idempotency keys idempotency keys strings unique across change requests made application catalog required transaction alter data catalog identical request issued unchanged idempotency key server will return response returned original request keys reused makes sense retry identical request attempts reuse idempotency key new altered request will fail square stores request response bodies reasonable amount time applications plan able retry request days weeks past pagination catalog endpoints potential return large number objects employ pagination large result sets endpoint returns initial subset first page objects pagination cursor pagination cursor either set string represents current place result set empty string current page final page results fetch next page cursor appended original query request calling endpoint",
tags:"",url:"/articles/catalog-overview"},{title:"Checkout API released, Transactions API updated (2017-06)",text:"Checkout API released, Transactions API updated (2017-06) Release Summary: Checkout API, Transactions API Checkout checkout api released transactions api updated 2017-06 release summary checkout api transactions api checkout api ui months beta testing square checkout api now generally available checkout api lets developers accept online payments using checkout ui hosted square servers checkout ui currently supports us-english strictly required strongly recommend using checkout api conjunction ssl certification information checkout api see announcement blog post checkout overview explanation checkout api works checkout get started step step explanation product transactions api square apis expand outside united states canada heard feedback developers like remove postal code field ecommerce payment form result postal code longer required field merchants based japan australia information transactions api see announcement blog post transactions api overview release summary checkout api transactions api checkout api ui months beta testing square checkout api now generally available checkout api lets developers accept online payments using checkout ui hosted square servers checkout ui currently supports us-english strictly required strongly recommend using checkout api conjunction ssl certification information checkout api see announcement blog post checkout overview explanation checkout api works checkout get started step step explanation product announcement blog post checkout overview explanation checkout api works checkout overview checkout get started step step explanation product checkout get started transactions api square apis expand outside united states canada heard feedback developers like remove postal code field ecommerce payment form result postal code longer required field merchants based japan australia ecommerce payment form information transactions api see announcement blog post transactions api overview announcement blog post transactions api overview transactions api overview new functionality checkout api ui features itemized transactions including explicit tax discounts international shipping address localization checkout form integration square dashboard reviewing transactions new functionality checkout api ui features itemized transactions including explicit tax discounts international shipping address localization checkout form integration square dashboard reviewing transactions itemized transactions including explicit tax discounts international shipping address localization checkout form integration square dashboard reviewing transactions improved functionality transactions api improvements billing postal codes longer required merchants based japan australia merchants choose collect billing postal code makes sense opt collecting modifying square payment form checkout api ui improvements beta launch checkout ui automatically loads omits billing postal code field based country associated merchant account postal code filtering handled automatically ui require code change activate improved functionality transactions api improvements billing postal codes longer required merchants based japan australia merchants choose collect billing postal code makes sense opt collecting modifying square payment form billing postal codes longer required merchants based japan australia merchants choose collect billing postal code makes sense opt collecting modifying square payment form checkout api ui improvements beta launch checkout ui automatically loads omits billing postal code field based country associated merchant account postal code filtering handled automatically ui require code change activate checkout ui automatically loads omits billing postal code field based country associated merchant account postal code filtering handled automatically ui require code change activate",tags:"",url:"/articles/checkout-api-released-transactions-api-updated-2017-06"},{title:"Connect API client libraries",text:"Connect API client libraries Connect v2 client libraries are available for a selection connect api client libraries connect v2 client libraries available selection programming languages php ruby net python java node js setup instructions client libraries client libraries provide methods communicating v1 v2 endpoints currently provide methods communicating oauth flow endpoints alternatively explore apis postman generate sdk using swagger language connect v2 client libraries available selection programming languages php ruby net python java node js php ruby net python java node js setup instructions client libraries client libraries provide methods communicating v1 v2 endpoints currently provide methods communicating oauth flow endpoints alternatively explore apis postman generate sdk using swagger language explore apis postman generate sdk using swagger php client library installation php client library hosted packagist available installation via composer add project first add following dependency application composer json file require square connect dependencies also add dependency running php composer phar require square connect download application dependencies running php composer phar install usage include client library code following require statement require vendor autoload php sample implementation article walks using php sdk accept ecommerce payment additionally source client library available github source generate apigen reference library php client library installation php client library hosted packagist available installation via composer packagist composer add project first add following dependency application composer json file composer json require square connect dependencies also add dependency running php composer phar require square connect php composer phar require square connect download application dependencies running php composer phar install usage include client library code following require statement require require vendor autoload php sample implementation article walks using php sdk accept ecommerce payment article additionally source client library available github source generate apigen reference library github apigen ruby client library installation ruby client library available gem install run following command gem install square_connect usage include client library code following require statement require square_connect sample implementation article walks using ruby sdk accept ecommerce payment additionally source client library available github source generate rdoc reference library ruby client library installation ruby client library available gem install run following command gem gem install square_connect usage include client library code following require statement require require square_connect sample implementation article walks using ruby sdk accept ecommerce payment article additionally source client library available github source generate rdoc reference library github net client library installation client library available nuget package windows run following command nuget package manager console install-package square connect mac linux run following command nuget install square connect usage include installed square connect dll project following namespaces include client library code using square connect api using square connect client using square connect model sample implementation sample implementation uses client library available github documentation source code net client library installation client library available nuget package nuget windows run following command nuget package manager console windows nuget package manager console install-package square connect mac linux run following command mac linux nuget install square connect usage include installed square connect dll project following namespaces include client library code square connect dll using square connect api using square connect client using square connect model sample implementation sample implementation uses client library available github documentation source code sample implementation documentation source code python client library installation python client library available pypi package install run following command pip install squareconnect usage include client library code following import statement import squareconnect sample implementation sample implementation uses python client library available github documentation source code python client library installation python client library available pypi package install run following command pypi pip install squareconnect usage include client library code following import statement import squareconnect sample implementation sample implementation uses python client library available github documentation source code sample implementation documentation source code java client library maven java client library available maven dependency install edit project pom include dependency groupid com squareup groupid artifactid connect artifactid version 2 0 0 version scope compile scope dependency gradle using gradle add dependency project build file compile com squareup connect 2 usage sample implementation documentation source code available github java client library maven java client library available maven dependency install edit project pom include maven dependency groupid com squareup groupid artifactid connect artifactid version 2 0 0 version scope compile scope dependency gradle using gradle add dependency project build file compile com squareup connect 2 usage sample implementation documentation source code available github documentation source code node js client library installation node js client library available npm package install run following command npm install save square-connect usage include client library code following require statement const squareconnect require square-connect sample implementation sample implementation uses node js client library available github documentation source code node js client library installation node js client library available npm package install run following command npm npm install save square-connect usage include client library code following require statement const squareconnect require square-connect sample implementation sample implementation uses node js client library available github documentation source code sample implementation documentation source code running postman explore apis postman app easy restful api exploration postman collection try square connect endpoints read blog post setting postman configuring api credentials click run postman explore v1 v2 api collection running postman explore apis postman app easy restful api exploration postman collection try square connect endpoints read blog post setting postman configuring api credentials postman blog post click run postman explore v1 v2 api collection generating client libraries tools swagger version 1 2 connect api defined swagger specification definition available github definition following generate connect client library another language swagger code generator import definition rest tool postman simplify manual testing note oauth flow endpoints currently defined swagger generating client libraries tools swagger version 1 2 connect api defined swagger specification definition available github definition following swagger specification github generate connect client library another language swagger code generator import definition rest tool postman simplify manual testing generate connect client library another language swagger code generator swagger code generator import definition rest tool postman simplify manual testing postman note oauth flow endpoints currently defined swagger",tags:"",url:"/articles/client-libraries"},{title:"Code samples",text:"Code samples Code samples for Square APIs are available on Github. Code samples code samples code samples square apis available github code samples square apis available github connect v2 ecommerce samples php rails includes front-end implementations jquery angular react ember others java net python node js connect v2 ecommerce samples php rails includes front-end implementations jquery angular react ember others java net python node js php php rails includes front-end implementations jquery angular react ember others rails java java net net python python node js node js point sale api in-person payment samples objective-c android point sale api in-person payment samples objective-c android objective-c objective-c android android oauth samples php ruby java python oauth samples php ruby java python php php ruby ruby java java python python connect v1 samples php ruby java python connect v1 samples php ruby java python php php ruby ruby java java python python",tags:"",url:"/articles/code-samples"},{title:"Connect API changes (2016-02-16)",text:"Connect API changes (2016-02-16) On February 16, 2016, changes were made to the connect api changes 2016-02-16 february 16 2016 changes made representation square merchant connect api changes different effects connect api applications created february 16 applications created february 16 continue work february 16 2016 changes made representation square merchant connect api changes different effects connect api applications created february 16 applications created february 16 continue work applications created february 16 continue work changed square merchants single account used process payments manage items applications necessary permissions access transactions items change square merchant instead business entity includes one locations location typically represents different brick-and-mortar store one transactions items change rolls square creating business entity every merchant business single location contains merchant existing transactions items majority merchants will choose stick single location add many locations want merchant dashboard affect applications created february 16 created connect api application february 16 application works however application single-location application means following application endpoints listed business management section connect api reference endpoints primarily managing business employees timecards one merchants adds location business application will access new location transactions items new merchant authorizes application will automatically prompted choose one locations grant application access order grant application access multiple locations merchant will complete oauth flow location application will need keep track different access token location affect applications created february 16 created connect api application february 16 application business-level application means merchant authorizes application grant access business locations business-level applications specify location requests access transactions items example path list items endpoint v1 location_id items single-location applications always able simply specify value location_id parameter business-level applications provide location want list items business-level applications will able get business location ids sending get request v1 locations changed square merchants single account used process payments manage items applications necessary permissions access transactions items change square merchant instead business entity includes one locations location typically represents different brick-and-mortar store one transactions items business locations change rolls square creating business entity every merchant business single location contains merchant existing transactions items majority merchants will choose stick single location add many locations want merchant dashboard affect applications created february 16 created connect api application february 16 application works however application single-location application means following single-location application application endpoints listed business management section connect api reference endpoints primarily managing business employees timecards one merchants adds location business application will access new location transactions items new merchant authorizes application will automatically prompted choose one locations grant application access order grant application access multiple locations merchant will complete oauth flow location application will need keep track different access token location application endpoints listed business management section connect api reference endpoints primarily managing business employees timecards business management one merchants adds location business application will access new location transactions items will new merchant authorizes application will automatically prompted choose one locations grant application access one order grant application access multiple locations merchant will complete oauth flow location application will need keep track different access token location location affect applications created february 16 created connect api application february 16 application business-level application means merchant authorizes application grant access business locations business-level application business-level applications specify location requests access transactions items example path list items endpoint list items v1 location_id items single-location applications always able simply specify value location_id parameter business-level applications provide location want list items location_id business-level applications will able get business location ids sending get request get v1 locations faq upgrade single-location application business-level application possible upgrade existing application listed application dashboard instead create new application dashboard february 16 reauthorize merchants new application move merchants new application will need make sure new application code supports location requirement business-level applications described endpoint paths changing exception applications created february 16 will able specify path request access location transactions items applications created february 16 continue specify usual faq upgrade single-location application business-level application possible upgrade existing application listed application dashboard application dashboard instead create new application dashboard february 16 reauthorize merchants new application new move merchants new application will need make sure new application code supports location requirement business-level applications described endpoint paths changing exception applications created february 16 will able specify path request access location transactions items applications created february 16 continue specify usual",tags:"",url:"/articles/connect-api-changes-2016-02"},{title:"Connect API v2 released (2016-03)",text:"Connect API v2 released (2016-03) is now available. Connect v2 provides the following connect api v2 released 2016-03 now available connect v2 provides following new features accepting ecommerce payments webpage secure customizable web form managing customer data online buyers including cards file square point sale api also now generally available point sale api lets deep-link square point sale ios native web app process in-person payments square now available connect v2 provides following new features accepting ecommerce payments webpage secure customizable web form managing customer data online buyers including cards file accepting ecommerce payments webpage secure customizable web form accepting ecommerce payments managing customer data online buyers including cards file managing customer data square point sale api also now generally available point sale api lets deep-link square point sale ios native web app process in-person payments square square point sale api release faq countries square apis available currently square apis available developers united states canada working make available additional countries soon pricing payments processed square apis online payments accepted connect v2 square processing fee 2 9 30 cents fee assessed square transaction in-person payments accepted via square point sale point sale api standard square fees apply see article details square fees need create new connect api application connect v2 endpoints created application application dashboard 16 feburary 2016 applications created 16 february connect v2 endpoints created application 16 february create new application application dashboard need switch existing application connect v2 instead connect v1 fact significant number connect v1 endpoints yet available v2 application communicate endpoints versions see primary faq summary actions currently supported v2 conventions v1 carry v2 endpoint base url connect api endpoints hosted https connect squareup com parameter formats get delete requests expect parameters query string url whereas post put requests expect body request required headers connect api endpoints require following headers authorization bearer your_access_token content-type application json accept application json oauth api endpoints oauth api endpoints unchanged format authorization header provide requests conventions v2 differ v1 monetary amounts monetary amounts returned v2 endpoints positive v1 monetary amounts negative represent money paid merchant square processing fee dates v2 dates provide conform rfc 3339 rfc 3339-compliant date effectively iso 8601-compliant date omits optional components besides fractional seconds example 2016-01-15t00 00 00z valid iso 8601 date valid rfc 3339 date whereas 2016-01-15 valid iso 8601 invalid rfc 3339 v1 dates conform less strict iso 8601 pagination v2 endpoints paginate results return cursor field response body provide query string followup request get next set results v1 pagination information instead provided link response header default sort order v2 endpoints return date-sorted results listtransactions list results newest-first order default additionally parameter change behavior called sort_order v1 corresponding endpoints list payments list results oldest-first order default parameter change behavior called order error format v2 endpoints include errors array response body errors occured corresponding request error object included array consistent format described v1 one error ever returned single response errors different format v2 errors v1 format described release faq countries square apis available currently square apis available developers united states canada working make available additional countries soon pricing payments processed square apis online payments accepted connect v2 square processing fee 2 9 30 cents fee assessed square transaction 2 9 30 cents in-person payments accepted via square point sale point sale api standard square fees apply see article details square fees article need create new connect api application connect v2 endpoints created application application dashboard 16 feburary 2016 applications created 16 february connect v2 endpoints 16 feburary 2016 created application 16 february create new application application dashboard application dashboard need switch existing application connect v2 instead connect v1 fact significant number connect v1 endpoints yet available v2 application communicate endpoints versions see primary faq summary actions currently supported v2 primary faq conventions v1 carry v2 endpoint base url connect api endpoints hosted https connect squareup com endpoint base url https connect squareup com parameter formats get delete requests expect parameters query string url whereas post put requests expect body request parameter formats required headers connect api endpoints require following headers required headers authorization bearer your_access_token content-type application json accept application json oauth api endpoints oauth api endpoints unchanged format authorization header provide requests oauth api endpoints authorization conventions v2 differ v1 monetary amounts monetary amounts returned v2 endpoints positive monetary amounts positive v1 monetary amounts negative represent money paid merchant square processing fee dates v2 dates provide conform rfc 3339 rfc 3339-compliant date effectively iso 8601-compliant date omits optional components besides fractional seconds dates rfc 3339 iso 8601 example 2016-01-15t00 00 00z valid iso 8601 date valid rfc 3339 date whereas 2016-01-15 valid iso 8601 invalid rfc 3339 2016-01-15t00 00 00z 2016-01-15 invalid v1 dates conform less strict iso 8601 pagination v2 endpoints paginate results return cursor field response body provide query string followup request get next set results pagination cursor v1 pagination information instead provided link response header link default sort order v2 endpoints return date-sorted results listtransactions list results newest-first order default additionally parameter change behavior called sort_order default sort order listtransactions newest-first sort_order v1 corresponding endpoints list payments list results oldest-first order default parameter change behavior called order list payments oldest-first order error format v2 endpoints include errors array response body errors occured corresponding request error object included array consistent format described error format errors error v1 one error ever returned single response errors different format v2 errors v1 format described",tags:"",url:"/articles/connect-v2-released-2016-03"},{title:"Square API FAQ",text:"Square API FAQ General How do I create a Square developer account? Which square api faq general create square developer account products supported square apis square apis available country build application multiple square merchants receive answers technical implementation questions provide feedback feature requests connect api change application allowed python errors parsing valueerror json object decoded import client library cloud environment lookup location general create square developer account products supported square apis square apis available country build application multiple square merchants receive answers technical implementation questions provide feedback feature requests connect api change application allowed python errors parsing valueerror json object decoded import client library cloud environment lookup location create square developer account create square developer account products supported square apis products supported square apis square apis available country square apis available country build application multiple square merchants build application multiple square merchants receive answers technical implementation questions receive answers technical implementation questions provide feedback feature requests connect api provide feedback feature requests connect api change application allowed change application allowed python errors parsing valueerror json object decoded python errors parsing valueerror json object decoded import client library cloud environment import client library cloud environment lookup location lookup location ecommerce payments calling charge endpoint receiving not_found error wrong ecommerce payments calling charge endpoint receiving not_found error wrong calling charge endpoint receiving not_found error wrong calling charge endpoint receiving not_found error wrong in-person payments point sale api versions square point sale support point sale api need go oauth flow point sale api in-person payments point sale api versions square point sale support point sale api need go oauth flow point sale api versions square point sale support point sale api versions square point sale support point sale api need go oauth flow point sale api need go oauth flow point sale api point sale api android version square point sale installed android device emulator point sale api android version square point sale installed android device emulator version square point sale installed android device emulator version square point sale installed android device emulator",tags:"",url:"/articles/faq"},{title:"[FAQ] How do I change what my application is allowed to do?",text:"How do I change what my application is allowed to do? The permissions change application allowed permissions granted application determined oauth url merchant followed authorize application order change permissions need revoke current oauth access token re-authorize application api revoke access token documented revoked token need re-authorize application obtain new token using redirect_url application settings application dashboard reconstruct oauth url permissions want application described documentation permissions granted application determined oauth url merchant followed authorize application order change permissions need revoke current oauth access token re-authorize application api revoke access token documented documented revoked token need re-authorize application obtain new token using redirect_url application settings application dashboard reconstruct oauth url permissions want application described documentation redirect_url application dashboard documentation",tags:"",url:"/articles/faq-changing-or-revoking-oauth-permissions"},{title:"[FAQ] I'm calling the Charge endpoint but receiving a not_found error. What's wrong?",text:"I'm calling the Charge endpoint but receiving a not_found error. What's wrong? Receiving calling charge endpoint receiving not_found error wrong receiving not_found error charge endpoint commonly caused one following issues using payments form obtain card_nonce calling charge endpoint calling charge endpoint without providing card_nonce json request body see payment form setup guide information either obtaining card_nonce using sandbox credentials attempting charge nonce oauth credentials obtaining card_nonce using oauth credentials attempting charge sandbox credentials please check make sure credentials used obtain card_nonce credentials used charge sandbox credentials identifiable starting string sandbox find application credentials application dashboard see documentation using sandbox information not_found receiving not_found error charge endpoint commonly caused one following issues not_found using payments form obtain card_nonce calling charge endpoint calling charge endpoint without providing card_nonce json request body see payment form setup guide information either obtaining card_nonce using sandbox credentials attempting charge nonce oauth credentials obtaining card_nonce using oauth credentials attempting charge sandbox credentials please check make sure credentials used obtain card_nonce credentials used charge sandbox credentials identifiable starting string sandbox find application credentials application dashboard see documentation using sandbox information using payments form obtain card_nonce calling charge endpoint calling charge endpoint without providing card_nonce json request body see payment form setup guide information card_nonce card_nonce payment form setup guide either obtaining card_nonce using sandbox credentials attempting charge nonce oauth credentials obtaining card_nonce using oauth credentials attempting charge sandbox credentials please check make sure credentials used obtain card_nonce credentials used charge sandbox credentials identifiable starting string sandbox find application credentials application dashboard see documentation using sandbox information card_nonce card_nonce card_nonce application dashboard documentation using sandbox",tags:"",url:"/articles/faq-charge-returns-not-found-error"},{title:"[FAQ] How do I create a Square developer account?",
text:"How do I create a Square developer account? Square developer accounts are the create square developer account square developer accounts square merchant accounts already square account set already square account create one start using api api calls made without activating payment processing planning square apis create card payments sure activate create account ensure account enabled payment processing instance testing production ecommerce point sale api transactions developer account will want create square account see square apis getting started learn basics using square apis square developer accounts square merchant accounts already square account set already square account create one start using api api calls made without activating payment processing create one planning square apis create card payments sure activate create account ensure account enabled payment processing instance testing production ecommerce point sale api transactions developer account will want activate create square account see square apis getting started learn basics using square apis square apis getting started",tags:"",url:"/articles/faq-create-account"},{title:"[FAQ] How can I provide feedback or feature requests for the Connect API?",text:"How can I provide feedback or feature requests for the Connect API? Please provide feedback feature requests connect api please contact support feedback feature request please contact support feedback feature request contact support",tags:"",url:"/articles/faq-feedback"},{title:"[FAQ] How can I receive answers to technical implementation questions?",text:"How can I receive answers to technical implementation questions? See questions tagged with receive answers technical implementation questions see questions tagged square-connect stack overflow solutions common issues existing question applies issue feel free submit new one square api development team monitors responds questions tag question appropriate stack overflow stack overflow account please contact support details question see questions tagged square-connect stack overflow solutions common issues existing question applies issue feel free submit new one square api development team monitors responds questions tag square-connect stack overflow question appropriate stack overflow stack overflow account please contact support details question contact support",tags:"",url:"/articles/faq-implementation-questions"},{title:"[FAQ] Are Square APIs available in my country?",text:"Are Square APIs available in my country? Currently, Square APIs are available only square apis available country currently square apis available developers united states canada australia united kingdom japan working make available additional countries soon additionally api endpoints pertaining merchant online store list orders available merchants countries square online store available currently united states currently square apis available developers united states canada australia united kingdom japan working make available additional countries soon additionally api endpoints pertaining merchant online store list orders available merchants countries square online store available currently united states list orders",tags:"",url:"/articles/faq-international-availability"},{title:"[FAQ] How do I lookup my Location ID?",text:"How do I lookup my Location ID? Assuming you have an active Application, you lookup location assuming active application find location ids making simple api request see also getting started article assuming active application find location ids making simple api request making simple api request see also getting started article getting started making simple api request every square merchant business consists one locations every payment merchant processes associated one locations even online payments order api calls connect v2 need know location want associate operation connect sdk easy method obtaining business location ids list_locations method ruby gem install gem install square_connect paste following locations-test rb file run ruby locations-test rb sure specify appropriate oauth token dealing many merchants using app personal access token just used application dashboard details business locations will appear console copy 1require square_connect 2 3access_token replace_with_your_access_token 4 5squareconnect configure config 6 config access_token access_token 7end 8 9locations_api squareconnect locationsapi new 10 11begin 12 locations_response locations_api list_locations 13 puts locations_response 14rescue squareconnect apierror 15 raise error encountered listing locations message 16end similar connect sdk methods exist supported sdk languages listed making simple api request every square merchant business consists one locations every payment merchant processes associated one locations even online payments order api calls connect v2 need know location want associate operation locations connect sdk easy method obtaining business location ids list_locations method list_locations ruby gem install gem install square_connect paste following locations-test rb file run ruby locations-test rb sure specify appropriate oauth token dealing many merchants using app personal access token just used application dashboard details business locations will appear console gem install square_connect locations-test rb ruby locations-test rb application dashboard copy 1require square_connect 2 3access_token replace_with_your_access_token 4 5squareconnect configure config 6 config access_token access_token 7end 8 9locations_api squareconnect locationsapi new 10 11begin 12 locations_response locations_api list_locations 13 puts locations_response 14rescue squareconnect apierror 15 raise error encountered listing locations message 16end copy 1require square_connect 2 3access_token replace_with_your_access_token 4 5squareconnect configure config 6 config access_token access_token 7end 8 9locations_api squareconnect locationsapi new 10 11begin 12 locations_response locations_api list_locations 13 puts locations_response 14rescue squareconnect apierror 15 raise error encountered listing locations message 16end 1 square_connect 2 3 replace_with_your_access_token 4 5 squareconnect 6 7 end 8 9 squareconnect locationsapi 10 11 begin 12 13 14 rescue squareconnect apierror 15 error encountered listing locations message 16 end similar connect sdk methods exist supported sdk languages listed",tags:"",url:"/articles/faq-lookup-my-location-id"},{title:"[FAQ] Can I build an application for multiple Square merchants to use?",text:"Can I build an application for multiple Square merchants to use? By default, build application multiple square merchants default square oauth api lets 500 square merchants authorize application access data please contact support developing application larger audience default square oauth api lets 500 square merchants authorize application access data please contact support developing application larger audience oauth api 500 contact support",tags:"",url:"/articles/faq-multiple-merchants"},{title:"[FAQ] Do I need to go through the OAuth flow to use Point of Sale API?",text:"Do I need to go through the OAuth flow to use Point of need go oauth flow point sale api square point sale 4 52 android square point sale 4 53 ios longer need go oauth flow accept payments point sale api already completed oauth flow will affect application still need oauth connect apis square point sale 4 52 android square point sale 4 53 ios longer need go oauth flow accept payments point sale api already completed oauth flow will affect application still need oauth connect apis",tags:"",url:"/articles/faq-oauth-point-of-sale-api"},{title:"[FAQ] What version of Square Point of Sale is installed on my Android device/emulator?",text:"What version of Square Point of Sale is installed on my Android device/emulator? version square point sale installed android device emulator determine version square point sale manually via settings running adb shell dumpsys package com squareup grep versionname via shell determine version square point sale manually via settings running adb shell dumpsys package com squareup grep versionname via shell manually via settings settings running adb shell dumpsys package com squareup grep versionname via shell adb shell dumpsys package com squareup grep versionname",tags:"",url:"/articles/faq-point-of-sale-android-version"},{title:"[FAQ] Python errors while parsing with ValueError: No JSON object could be decoded.",text:"Python errors while parsing with ValueError: No JSON object could be decoded. Square python errors parsing valueerror json object decoded square api endpoints return responses transfer-encoding chunked format many libraries will handle automatically however python httplib json libraries examples https docs python org 2 library httplib html httpresponse read will return raw chunked request body receiving valueerror json object decoded calling json loads response body likely verify chunked encoding used checking response http headers value transfer-encoding header alternatively examine response body alternating lines hexadecimal numbers json text response chunked learn transfer-encoding alternative method making requests python urllib3 libraries streaming io explained valueerror json object decoded square api endpoints return responses transfer-encoding chunked format many libraries will handle automatically however python httplib json libraries examples https docs python org 2 library httplib html httpresponse read will return raw chunked request body transfer-encoding chunked httplib json https docs python org 2 library httplib html httpresponse read receiving valueerror json object decoded calling json loads response body likely verify chunked encoding used checking response http headers value transfer-encoding header alternatively examine response body alternating lines hexadecimal numbers json text response chunked learn transfer-encoding valueerror json object decoded json loads transfer-encoding alternative method making requests python urllib3 libraries streaming io explained urllib3",tags:"",url:"/articles/faq-python-fails-to-parse-json"},{title:"[FAQ] I can't import a client library into my cloud environment",text:"I can't import a client library into my cloud environment If you are import client library cloud environment building application using mobile platform service provider like appery io adobe phonegap firebase etc install sdks rest apis rest apis used language app building application using mobile platform service provider like appery io adobe phonegap firebase etc install sdks rest apis rest apis used language app",tags:"",url:"/articles/faq-sdk-paas"},{title:"[FAQ] What versions of Square Point of Sale support the Point of Sale API?",text:"What versions of Square Point of Sale support the Point of Sale API? versions square point sale support point sale api ios point sale api officially supported square point sale version 4 34 later android point sale api officially supported square point sale version 4 41 later ios point sale api officially supported square point sale version 4 34 later android point sale api officially supported square point sale version 4 41 later",tags:"",url:"/articles/faq-supported-point-of-sale-versions"},{title:"[FAQ] Which products are supported by Square APIs?",text:"Which products are supported by Square APIs? Version 2 of the Connect API products supported square apis version 2 connect api provides http endpoints following tasks processing online payments managing merchant online customer information including customer cards file retrieving merchant transaction history payments refunds issuing refunds completed payments version 1 connect api provides http endpoints following additional tasks yet supported v2 retrieving merchant deposit history managing orders merchant online store managing merchant items library inventory managing merchant employees roles timecards square point sale api provides support following tasks processing in-person payment square point sale ios native web application following square products currently provide public api invoices appointments square capital square cash caviar version 2 connect api provides http endpoints following tasks version 2 connect api processing online payments managing merchant online customer information including customer cards file retrieving merchant transaction history payments refunds issuing refunds completed payments processing online payments managing merchant online customer information including customer cards file retrieving merchant transaction history payments refunds issuing refunds completed payments version 1 connect api provides http endpoints following additional tasks yet supported v2 version 1 connect api retrieving merchant deposit history managing orders merchant online store managing merchant items library inventory managing merchant employees roles timecards retrieving merchant deposit history managing orders merchant online store managing merchant items library inventory managing merchant employees roles timecards square point sale api provides support following tasks square point sale api processing in-person payment square point sale ios native web application processing in-person payment square point sale ios native web application following square products currently provide public api invoices appointments square capital square cash caviar invoices appointments square capital square cash caviar",tags:"",url:"/articles/faq-supported-products"},{title:"Square APIs: Getting Started",text:"Square APIs: Getting Started Square provides a collection of APIs to help you square apis getting started square provides collection apis help build integrations wide range merchant cases common cases ecommerce merchants accept online payments secure customizable form embed website also issue refunds previously processed payments in-person commerce custom ios android point-of-sale apps square point sale api process payments securely square hardware reporting merchants download details transaction deposit history along item inventory information employee management business owners track employee hours set employee permissions certain activities like issuing refunds square point sale complete steps article get running familiarize square apis please note using square apis requires experience programming important square transactions point sale apis currently available united states canada australia united kingdom japan working make available additional countries soon version 1 api available everywhere square provides collection apis help build integrations wide range merchant cases common cases ecommerce merchants accept online payments secure customizable form embed website also issue refunds previously processed payments ecommerce in-person commerce custom ios android point-of-sale apps square point sale api process payments securely square hardware in-person commerce reporting merchants download details transaction deposit history along item inventory information reporting employee management business owners track employee hours set employee permissions certain activities like issuing refunds square point sale employee management complete steps article get running familiarize square apis please note using square apis requires experience programming important square transactions point sale apis currently available united states canada australia united kingdom japan working make available additional countries soon version 1 api available everywhere important square transactions point sale apis currently available united states canada australia united kingdom japan working make available additional countries soon version 1 api available everywhere important transactions point sale version 1 step 1 create square account square developer accounts square merchant accounts already square account set already square account create one start using api planning square apis process card payments sure activate create account ensure account enabled payment processing otherwise non-sandbox api requires payments activation may get error responses activate step 1 create square account square developer accounts square merchant accounts already square account set already square account create one start using api create one planning square apis process card payments sure activate create account ensure account enabled payment processing otherwise non-sandbox api requires payments activation may get error responses activate activate step 2 register application square now square account visit application dashboard sign application dashboard register new applications change application settings find application credentials register first application click new application enter name application click create app note application name include word square soon application created control panel appears control panel consists four tabs credentials oauth webhooks point sale api multiple sections step 2 register application square now square account visit application dashboard sign application dashboard application dashboard register new applications change application settings find application credentials application dashboard register first application click new application enter name application click create app note application name include word square click new application new application enter name application click create app note application name include word square create app square soon application created control panel appears control panel consists four tabs credentials oauth webhooks point sale api multiple sections control panel credentials oauth webhooks point sale api step 3 learn application credentials credentials oauth tabs application control panel include lot different credentials tricky keep straight quick rundown personal access token found credentials tab control panel special token gives full api access square account send https requests square api endpoints include value header identify building application just access token ever need application found credentials tab control panel application unique used couple places building application merchants will specify value oauth flow discussed later using ecommerce api provide value embed secure payment form website application secret found oauth tab control panel building application merchants will provide value oauth flow confirm application identity name suggests value secret think compromised click show secret replace secret application control panel replace sandbox application access token found credentials tab control panel ecommerce api provides sandbox lets try processing credit card payments without actually moving money process ecommerce payments sandbox mode provide credentials anywhere typically provide standard application personal access token step 3 learn application credentials credentials oauth tabs application control panel include lot different credentials tricky keep straight quick rundown credentials oauth personal access token found credentials tab control panel credentials special token gives full api access square account send https requests square api endpoints include value header identify building application just access token ever need building application just access token ever need application found credentials tab control panel credentials application unique used couple places building application merchants will specify value oauth flow discussed later using ecommerce api provide value embed secure payment form website building application merchants will specify value oauth flow discussed later using ecommerce api provide value embed secure payment form website application secret found oauth tab control panel oauth building application merchants will provide value oauth flow confirm application identity name suggests value secret think compromised click show secret replace secret application control panel replace value secret show secret replace secret sandbox application access token found credentials tab control panel credentials ecommerce api provides sandbox lets try processing credit card payments without actually moving money sandbox process ecommerce payments sandbox mode provide credentials anywhere typically provide standard application personal access token step 4 send first api request now application credentials start communicating square apis start simple curl command paste following terminal replace personal_access_token personal access token curl authorization bearer personal_access_token https connect squareup com v2 locations command completes prints json output representing basic details square business locations structure resembles following locations cbasedqu0er0gryr6d4tarpmzyk name coffee toffee sf address address_line_1 1455 market street locality san francisco administrative_district_level_1 postal_code 94103 country timezone america los_angeles capabilities credit_card_processing nice work successfully sent request square connect api listlocations endpoint step 4 send first api request now application credentials start communicating square apis start simple curl command curl paste following terminal replace personal_access_token personal access token personal_access_token curl authorization bearer personal_access_token https connect squareup com v2 locations command completes prints json output representing basic details square business locations structure resembles following locations locations cbasedqu0er0gryr6d4tarpmzyk name coffee toffee sf address address_line_1 1455 market street locality san francisco administrative_district_level_1 postal_code 94103 country timezone america los_angeles capabilities credit_card_processing nice work successfully sent request square connect api listlocations endpoint listlocations step 5 send api request code curl command nice start see command looks like code create new blank text file listlocations py paste following listlocations py replace replace_me personal access token copy usr bin python import httplib json requests square connect api require access token authorization header specify application personal access token available application dashboard https connect squareup com apps access_token replace_me addition authorization header requests connect api include indicated accept content-type headers request_headers authorization bearer access_token accept application json content-type application json send get request listlocations endpoint obtain response request_path v2 locations request_body connection httplib httpsconnection connect squareup com connection request get request_path request_body request_headers response connection getresponse convert returned json body array locations work locations json loads response read pretty-print locations array print json dumps locations indent 2 separators example python easy read run course communicate square api endpoints programming language run sample command line following command python listlocations py sample will print json output curl command step 4 send first api request step 5 send api request code curl command nice start see command looks like code curl create new blank text file listlocations py listlocations py paste following listlocations py replace replace_me personal access token listlocations py replace_me copy usr bin python import httplib json requests square connect api require access token authorization header specify application personal access token available application dashboard https connect squareup com apps access_token replace_me addition authorization header requests connect api include indicated accept content-type headers request_headers authorization bearer access_token accept application json content-type application json send get request listlocations endpoint obtain response request_path v2 locations request_body connection httplib httpsconnection connect squareup com connection request get request_path request_body request_headers response connection getresponse convert returned json body array locations work locations json loads response read pretty-print locations array print json dumps locations indent 2 separators example python easy read run course communicate square api endpoints programming language run sample command line following command python listlocations py sample will print json output curl command step 4 send first api request curl step 4 send first api request step 6 pick https library matter building application probably going communicating square api endpoints https begin development pick https library work certain languages square provides client libraries make easy communicate api endpoints note client libraries currently support connect api version 2 endpoints will version 1 endpoints well stick different library now common programming languages provide least one built-in library sending https requests languages also one popular libraries developed third party first time working https requests unirest suite libraries recommended well documented easy php curl unirest square connect ruby net http unirest faraday square_connect python httplib unirest requests squareconnect net system net unirest restsharp square connect objective-c ios x url loading system unirest afnetworking java including android httpurlconnection unirest okhttp node js http unirest request go net http also recommended https request tool postman paw help quickly easily test requests api endpoints development generating client libraries swagger advanced version 2 connect api defined swagger specification definition available github definition generate custom client libraries simplify development tasks see generating client libraries tools swagger information step 6 pick https library matter building application probably going communicating square api endpoints https begin development pick https library work certain languages square provides client libraries make easy communicate api endpoints note client libraries currently support connect api version 2 endpoints will version 1 endpoints well stick different library now client libraries connect api version 2 endpoints version 1 endpoints common programming languages provide least one built-in library sending https requests languages also one popular libraries developed third party first time working https requests unirest suite libraries recommended well documented easy unirest php curl unirest square connect ruby net http unirest faraday square_connect python httplib unirest requests squareconnect net system net unirest restsharp square connect objective-c ios x url loading system unirest afnetworking java including android httpurlconnection unirest okhttp node js http unirest request go net http php curl unirest square connect ruby net http unirest faraday square_connect python httplib unirest requests squareconnect net system net unirest restsharp square connect objective-c ios x url loading system unirest afnetworking java including android httpurlconnection unirest okhttp node js http unirest request go net http php curl unirest square connect php curl unirest square connect ruby net http unirest faraday square_connect ruby net http unirest faraday square_connect python httplib unirest requests squareconnect python httplib unirest requests squareconnect net system net unirest restsharp square connect net system net unirest restsharp square connect objective-c ios x url loading system unirest afnetworking objective-c ios x url loading system unirest afnetworking java including android httpurlconnection unirest okhttp java including android httpurlconnection unirest okhttp node js http unirest request node js http unirest request go net http go net http also recommended https request tool postman paw help quickly easily test requests api endpoints development postman paw generating client libraries swagger advanced version 2 connect api defined swagger specification definition available github definition generate custom client libraries simplify development tasks swagger specification github see generating client libraries tools swagger information generating client libraries tools swagger step 7 learn apis want ready begin diving whichever square apis fit case rundown apis square provides oauth api using apis listed develop application merchants oauth api merchants authorize application act behalf merchant completes oauth flow app generate access token access token wherever previously used personal access token api requests apply merchant account instead learn using oauth api see oauth overview code samples oauth flow available github ecommerce api ecommerce api consists different components javascript library include website embed secure payment form https endpoint called charge initiate transaction back-end server buyer enters card details payment form additional https endpoints initiating refunds saving customer information actions related ecommerce https endpoints related ecommerce part square connect version 2 sure read api conventions learn details interacting endpoints learn basics using ecommerce api see transactions api overview point sale api in-person payments point sale api lets android ios app open square point sale app process in-person payments square hardware developing custom point-of-sale app api learn basics using point sale api see point sale api overview reporting employee management apis currently square reporting employee management https endpoints part square connect version 1 sure read api conventions learn details interacting endpoints code samples item management transaction reporting available github step 7 learn apis want ready begin diving whichever square apis fit case rundown apis square provides oauth api using apis listed develop application merchants oauth api merchants authorize application act behalf merchant completes oauth flow app generate access token access token wherever previously used personal access token api requests apply merchant account instead access token personal learn using oauth api see oauth overview oauth overview code samples oauth flow available github github ecommerce api ecommerce api consists different components javascript library include website embed secure payment form https endpoint called charge initiate transaction back-end server buyer enters card details payment form additional https endpoints initiating refunds saving customer information actions related ecommerce javascript library include website embed secure payment form javascript library https endpoint called charge initiate transaction back-end server buyer enters card details payment form https endpoint charge additional https endpoints initiating refunds saving customer information actions related ecommerce additional https endpoints https endpoints related ecommerce part square connect version 2 sure read api conventions learn details interacting endpoints square connect version 2 learn basics using ecommerce api see transactions api overview transactions api overview point sale api in-person payments point sale api lets android ios app open square point sale app process in-person payments square hardware developing custom point-of-sale app api learn basics using point sale api see point sale api overview point sale api overview reporting employee management apis currently square reporting employee management https endpoints part square connect version 1 sure read api conventions learn details interacting endpoints square connect version 1 code samples item management transaction reporting available github github",tags:"",url:"/articles/getting-started"},{title:"Orders API Overview",
text:"Orders API Overview Specs at a glance Language Support HTTP C# Java PHP Python orders api overview specs glance language support http java php python ruby platform web resources technical reference stackoverflow tag square orders api creates order objects referenced taking payments online charge endpoint order objects contain itemized details purchase referenced charging transaction retrieving transactions orders include information items purchased modifications made items discounts taxes itemized transaction information retrieved batchretrieveorders endpoint connect v2 specs glance language support http java php python ruby platform web resources technical reference stackoverflow tag specs glance language support http java php python ruby language support http java php python ruby http java php python ruby platform web platform web web resources technical reference stackoverflow tag resources technical reference stackoverflow tag technical reference stackoverflow tag square orders api creates order objects referenced taking payments online charge endpoint order objects contain itemized details purchase referenced charging transaction retrieving transactions orders include information items purchased modifications made items discounts taxes itemized transaction information retrieved batchretrieveorders endpoint connect v2 charge batchretrieveorders requirements limitations orders api supports order creation checkout transactions apis batchretrieveorders returns orders checkout transactions apis time orders api support listing orders access order details will need fetch order querying transactions using listtransactions retrievetransaction endpoints fetching order using batchretrieveorders endpoint orders api calls include authorization token header targeted merchant account anonymous api calls allowed calls orders api oauth tokens items_read permissions retrieve orders work catalog objects payments_write orders_write permissions targeted merchant account creating charging order orders api support explicit shipping object time shipping costs may included hoc line item item modifier orders api support itemized refunds returns time orders api support update operations instead changing order create new order future instead currently order creation supported sandbox mode adhoc items catalog items requirements limitations orders api supports order creation checkout transactions apis batchretrieveorders returns orders checkout transactions apis time orders api support listing orders access order details will need fetch order querying transactions using listtransactions retrievetransaction endpoints fetching order using batchretrieveorders endpoint orders api calls include authorization token header targeted merchant account anonymous api calls allowed calls orders api oauth tokens items_read permissions retrieve orders work catalog objects payments_write orders_write permissions targeted merchant account creating charging order orders api support explicit shipping object time shipping costs may included hoc line item item modifier orders api support itemized refunds returns time orders api support update operations instead changing order create new order future instead currently order creation supported sandbox mode adhoc items catalog items orders api supports order creation checkout transactions apis batchretrieveorders returns orders checkout transactions apis time batchretrieveorders orders api support listing orders access order details will need fetch order querying transactions using listtransactions retrievetransaction endpoints fetching order using batchretrieveorders endpoint listtransactions retrievetransaction batchretrieveorders orders api calls include authorization token header targeted merchant account anonymous api calls allowed authorization token header calls orders api oauth tokens items_read permissions retrieve orders work catalog objects payments_write orders_write permissions targeted merchant account creating charging order items_read permissions payments_write orders_write orders api support explicit shipping object time shipping costs may included hoc line item item modifier orders api support itemized refunds returns time orders api support update operations instead changing order create new order future instead currently order creation supported sandbox mode adhoc items catalog items orders api data model related apis transactions api catalog api orders line items orders api accepts collection line items modifiers discounts taxes packages order object order objects unique ids referenced calls square apis one important thing note structure order api request different order object order api requests define order-level taxes discounts outside collection line items orders api packages order object order-level adjustments translated line item equivalents added line item definition order-level scope packaging price adjustments line-item data types makes calculating final cost order easier transaction processed order details defined time api call hoc reference preexisting catalog entities response object returned orders api will always following data types order top-level container order information order includes fields line item details order summary data like location credited order total amount taxes collected orderlineitem purchase item order including applicable taxes discounts orderlineitem defines purchase item details provides reference existing catalogitemvariation object orderlineitemmodifier modifier size color associated purchase item orderlineitemmodifier provides reference existing catalogmodifier object available orderlineitem references existing catalogitemvariation object orderlineitemdiscount discount applied associated purchase item orderlineitemdiscount defines discount details provides reference existing catalogdiscount object cases scope field indicates whether discount originally defined order-level item-level orderlineitemtax tax applied associated purchase item orderlineitemtax defines tax details provides reference existing catalogtax object cases scope field indicates whether tax originally defined order level item level shipping explicit data type time added standard line item catalog object reference hoc definition important note line item shipping subject order-level taxes discounts orders include shipping fees explicitly define taxes discounts line-item level avoid incorrectly applying discounts taxes shipping costs merchants variable shipping costs might make sense hoc definition shipping way keep pricing flexibility need vs creating multiple shipping options catalog data limitations single order object may 500 distinct catalog object ids including item modifier tax discount references total accordance following limits single order object may 100 discrete line items single line item 25 catalog item modifier references single line item 25 taxes defined hoc catalog reference single line item 100 discounts defined hoc catalog reference single order object may 25 taxes defined order level hoc catalog reference single order object may 25 discounts defined order level assigned hoc catalog reference limits price adjustments taxes discounts apply order request order object result order-level adjustment limits impact item-level adjustment limits orders converts adjustments total calculations example order request 25 taxes defined line item another 25 taxes defined order-level even though results total 50 line-item taxes final order object returned orders api using hoc definitions versus catalog references important understand implications using hoc definitions instead referencing catalog objects every unique string used define hoc item considered unique object even multiple hoc items name considered different objects strings match exactly example red dog collar leather red dog collar leather red dog collar leather red dog collar leather considered different items strings different punctuation whitespace capitalization potential uniqueness every hoc item makes aggregating sales item generating product statistics impossible everything unique nothing aggregate make best square reporting hoc items include inventory tracking consistent explicit naming items red dog collar leather customized contrast catalog objects ids exist across api calls square dashboard square point sale app catalog object exists across multiple orders recognizable item reference common means square reporting aggregate order information provide analytics track_inventory enabled catalogitemvariation report inventory counts might require extra work get started creating catalog objects simplifies long term maintenance reporting order decide using hoc items building catalog orders api consider following questions many unique product variants service product variant list long includes multiple modifiers taking time create proper catalog square will make long-term maintenance management offerings easier complex business model aggregating information businesses multiple locations mobile pop-up different branches storefront online store easier shared catalog short development time things go live development time hoc items shorter sacrifices benefits like inventory tracking granular analytics online orders complicated shipping shipping always price ad-hoc item probably sufficient shipping cost variable depend destination weight using catalog item might easier catalog already managed square third party orders api supports square catalog functionality hoc items may choice migrating square catalog option in-person orders already managed square point sale app information third-party point sale applications aggregated information orders api square dashboard used aggregation hoc items may easier work general critical concern quickly functionality goes live hoc definitions likely best short-term solution using hoc items sacrifices full functionality square platform bypasses need robust catalog design orders api data model related apis transactions api catalog api related apis orders line items orders api accepts collection line items modifiers discounts taxes packages order object order objects unique ids referenced calls square apis one important thing note structure order api request different order object order api requests define order-level taxes discounts outside collection line items orders api packages order object order-level adjustments translated line item equivalents added line item definition order-level scope packaging price adjustments line-item data types makes calculating final cost order easier transaction processed request object order details defined time api call hoc reference preexisting catalog entities response object returned orders api will always following data types order top-level container order information order includes fields line item details order summary data like location credited order total amount taxes collected orderlineitem purchase item order including applicable taxes discounts orderlineitem defines purchase item details provides reference existing catalogitemvariation object orderlineitemmodifier modifier size color associated purchase item orderlineitemmodifier provides reference existing catalogmodifier object available orderlineitem references existing catalogitemvariation object orderlineitemdiscount discount applied associated purchase item orderlineitemdiscount defines discount details provides reference existing catalogdiscount object cases scope field indicates whether discount originally defined order-level item-level orderlineitemtax tax applied associated purchase item orderlineitemtax defines tax details provides reference existing catalogtax object cases scope field indicates whether tax originally defined order level item level order top-level container order information order includes fields line item details order summary data like location credited order total amount taxes collected order top-level container order information order includes fields line item details order summary data like location credited order total amount taxes collected order orderlineitem purchase item order including applicable taxes discounts orderlineitem defines purchase item details provides reference existing catalogitemvariation object orderlineitem purchase item order including applicable taxes discounts orderlineitem defines purchase item details provides reference existing catalogitemvariation object orderlineitem orderlineitem catalogitemvariation orderlineitemmodifier modifier size color associated purchase item orderlineitemmodifier provides reference existing catalogmodifier object available orderlineitem references existing catalogitemvariation object orderlineitemmodifier modifier size color associated purchase item orderlineitemmodifier provides reference existing catalogmodifier object available orderlineitem references existing catalogitemvariation object orderlineitemmodifier orderlineitemmodifier catalogmodifier orderlineitem catalogitemvariation orderlineitemdiscount discount applied associated purchase item orderlineitemdiscount defines discount details provides reference existing catalogdiscount object cases scope field indicates whether discount originally defined order-level item-level orderlineitemdiscount discount applied associated purchase item orderlineitemdiscount defines discount details provides reference existing catalogdiscount object cases scope field indicates whether discount originally defined order-level item-level orderlineitemdiscount orderlineitemdiscount catalogdiscount orderlineitemtax tax applied associated purchase item orderlineitemtax defines tax details provides reference existing catalogtax object cases scope field indicates whether tax originally defined order level item level orderlineitemtax tax applied associated purchase item orderlineitemtax defines tax details provides reference existing catalogtax object cases scope field indicates whether tax originally defined order level item level orderlineitemtax orderlineitemtax catalogtax shipping explicit data type time added standard line item catalog object reference hoc definition important note line item shipping subject order-level taxes discounts orders include shipping fees explicitly define taxes discounts line-item level avoid incorrectly applying discounts taxes shipping costs merchants variable shipping costs might make sense hoc definition shipping way keep pricing flexibility need vs creating multiple shipping options catalog data limitations single order object may 500 distinct catalog object ids including item modifier tax discount references total accordance following limits single order object may 100 discrete line items single line item 25 catalog item modifier references single line item 25 taxes defined hoc catalog reference single line item 100 discounts defined hoc catalog reference single order object may 25 taxes defined order level hoc catalog reference single order object may 25 discounts defined order level assigned hoc catalog reference single order object may 100 discrete line items single line item 25 catalog item modifier references single line item 25 taxes defined hoc catalog reference single line item 100 discounts defined hoc catalog reference single order object may 100 discrete line items single line item 25 catalog item modifier references single line item 25 taxes defined hoc catalog reference single line item 100 discounts defined hoc catalog reference single line item 25 catalog item modifier references single line item 25 taxes defined hoc catalog reference single line item 100 discounts defined hoc catalog reference single order object may 25 taxes defined order level hoc catalog reference single order object may 25 taxes defined order level hoc catalog reference single order object may 25 discounts defined order level assigned hoc catalog reference single order object may 25 discounts defined order level assigned hoc catalog reference limits price adjustments taxes discounts apply order request order object result order-level adjustment limits impact item-level adjustment limits orders converts adjustments total calculations example order request 25 taxes defined line item another 25 taxes defined order-level even though results total 50 line-item taxes final order object returned orders api request object using hoc definitions versus catalog references important understand implications using hoc definitions instead referencing catalog objects every unique string used define hoc item considered unique object even multiple hoc items name considered different objects strings match exactly example red dog collar leather red dog collar leather red dog collar leather red dog collar leather considered different items strings different punctuation whitespace capitalization potential uniqueness every hoc item makes aggregating sales item generating product statistics impossible everything unique nothing aggregate make best square reporting hoc items include inventory tracking consistent explicit naming items red dog collar leather customized contrast catalog objects ids exist across api calls square dashboard square point sale app catalog object exists across multiple orders recognizable item reference common means square reporting aggregate order information provide analytics track_inventory enabled catalogitemvariation report inventory counts might require extra work get started creating catalog objects simplifies long term maintenance reporting order track_inventory catalogitemvariation decide using hoc items building catalog orders api consider following questions many unique product variants service product variant list long includes multiple modifiers taking time create proper catalog square will make long-term maintenance management offerings easier complex business model aggregating information businesses multiple locations mobile pop-up different branches storefront online store easier shared catalog short development time things go live development time hoc items shorter sacrifices benefits like inventory tracking granular analytics online orders complicated shipping shipping always price ad-hoc item probably sufficient shipping cost variable depend destination weight using catalog item might easier catalog already managed square third party orders api supports square catalog functionality hoc items may choice migrating square catalog option in-person orders already managed square point sale app information third-party point sale applications aggregated information orders api square dashboard used aggregation hoc items may easier work many unique product variants service product variant list long includes multiple modifiers taking time create proper catalog square will make long-term maintenance management offerings easier many unique product variants service product variant list long includes multiple modifiers taking time create proper catalog square will make long-term maintenance management offerings easier many unique product variants complex business model aggregating information businesses multiple locations mobile pop-up different branches storefront online store easier shared catalog complex business model aggregating information businesses multiple locations mobile pop-up different branches storefront online store easier shared catalog complex business model short development time things go live development time hoc items shorter sacrifices benefits like inventory tracking granular analytics short development time things go live development time hoc items shorter sacrifices benefits like inventory tracking granular analytics short development time things go live online orders complicated shipping shipping always price ad-hoc item probably sufficient shipping cost variable depend destination weight using catalog item might easier online orders complicated shipping shipping always price ad-hoc item probably sufficient shipping cost variable depend destination weight using catalog item might easier online orders complicated shipping catalog already managed square third party orders api supports square catalog functionality hoc items may choice migrating square catalog option catalog already managed square third party orders api supports square catalog functionality hoc items may choice migrating square catalog option catalog already managed square third party in-person orders already managed square point sale app information third-party point sale applications aggregated information orders api square dashboard used aggregation hoc items may easier work in-person orders already managed square point sale app information third-party point sale applications aggregated information orders api square dashboard used aggregation hoc items may easier work in-person orders already managed square point sale app general critical concern quickly functionality goes live hoc definitions likely best short-term solution using hoc items sacrifices full functionality square platform bypasses need robust catalog design works orders api process flow high level process overview square orders api restful web service packages itemized order information ecommerce transactions square transactions checkout apis general completing transaction orders api involves following steps server code gathers order details local data storage user sessions etc server code sends order details orders api directly checkout api checkout api built-in support order processing square creates order object calculates final purchase price based order details square returns order orders api transaction results checkout api calling server order created manually server code calls transactions api charge endpoint order complete transaction explicit call orders api required solutions using square transaction api checkout api built support orders will call orders api create order object part checkout workflow order details viewable square dashboard orders api batchretrieveorders endpoint associated transaction initiated one square payment endpoints order management call orders api order ready payment processing customer merchant modifies order new order object new order object created managing order state critical ensure customers properly charged order object created square takes snapshot state objects included example order request includes catalog item variation costs 5 time order request square total calculations will price even price changed 10 customer actually charged snapshot taken orders api time order object creation still reflects original price 5 avoid potential mistakes around amount charged order objects created immediately processing transaction relevant payment api totals calculated order api calculates applies discounts taxes line item level line item modifiers applied directly applicable item order-level modifiers distributed across line item subtotals rather order subtotal final purchase amount calculated following order calculate starting item totals item base price quantity apply percent based line item discounts applicable line item totals apply percent based order-level discounts line item totals apply fixed amount line item discounts applicable line item totals distribute fixed amount order-level discounts line item totals amount distributed line item relative item contribution order subtotal apply line item order level taxes line item totals example consider clothing order 2 shirts 1 pair jeans 3 sweaters includes following discounts line item percent discount t-shirts 7 previous season item line item fixed amount discount t-shirts 3 00 customer loyalty discount line item fixed amount discount sweaters 11 00 customer loyalty discount order-level percent discount 12 father day sale order-level fixed amount discount 55 global sale following taxes line item percent tax sweaters fair trade tax 5 order-level percent tax state sales tax 8 5 step 1 calculate order gross amounts first orders calculates gross totals line item according item base price quantity 2 printed shirt 15 00 30 00 1 slim jeans 25 00 25 00 3 woven sweater 35 00 105 00 order subtotal 160 00 step 2 4 apply percent discounts line item fixed discounts next orders applies line item percent discounts order-level percent discounts line item fixed amount discounts step 2 step 4 printed t-shirt 30 00 step 2 7 previous season item 2 10 27 90 step 3 12 father day sale 3 35 24 55 step 4 3 00 customer loyalty discount 3 00 21 55 printed t-shirt subtotal 21 55 slim jeans 25 00 step 2 discount 0 25 00 step 3 12 father day sale 3 00 22 00 step 4 discount 0 22 00 slim jeans subtotal 22 00 woven sweater 105 00 step 2 discount 0 105 00 step 3 12 father day sale 12 60 92 40 step 4 11 00 customer loyalty discount 11 00 81 40 woven sweater subtotal 81 40 order subtotal 124 95 step 5 apply order-level fixed amount discounts since discounts broken line items discounts even order-level fixed amount discounts distributed across line items order ensure order-level fixed discount fairly distributed equivalent line item discount calculated based relative portion line item contributes recent subtotal words subtotal result steps 1 step 4 using following formula current item subtotal current order subtotal xx order-level fixed discount applicable line item discount example order-level fixed discount 55 distributed across three line items based subtotal 124 95 printed t-shirt 21 55 step 5 55 global sales 21 55 124 95 xx 55 9 49 12 06 printed t-shirt subtotal 12 06 slim jeans 22 00 step 5 55 global sales 22 00 124 95 xx 55 9 68 12 32 slim jeans subtotal 12 32 woven sweater 81 40 step 5 55 global sales 81 40 124 95 xx 55 35 83 45 57 woven sweater subtotal 45 57 order subtotal 69 95 step 6 apply order item-level taxes last step apply applicable taxes line item taxes applied first order-level taxes distributed line item order printed t-shirt 21 55 step 6 state sales tax 8 5 12 06 xx 8 5 1 03 13 09 printed t-shirt subtotal 13 09 slim jeans 22 00 step 6 state sales tax 8 5 12 32 xx 8 5 1 05 13 37 slim jeans subtotal 13 37 woven sweater 45 57 step 6 fair trade tax 5 45 57 xx 5 2 28 47 85 step 6 state sales tax 8 5 45 57 xx 8 5 3 87 51 72 woven sweater subtotal 51 72 order total 78 18 works orders api process flow high level process overview square orders api restful web service packages itemized order information ecommerce transactions square transactions checkout apis general completing transaction orders api involves following steps server code gathers order details local data storage user sessions etc server code sends order details orders api directly checkout api checkout api built-in support order processing square creates order object calculates final purchase price based order details square returns order orders api transaction results checkout api calling server order created manually server code calls transactions api charge endpoint order complete transaction server code gathers order details local data storage user sessions etc server code sends order details orders api directly checkout api checkout api built-in support order processing square creates order object calculates final purchase price based order details square returns order orders api transaction results checkout api calling server order created manually server code calls transactions api charge endpoint order complete transaction explicit call orders api required solutions using square transaction api checkout api built support orders will call orders api create order object part checkout workflow order details viewable square dashboard orders api batchretrieveorders endpoint associated transaction initiated one square payment endpoints batchretrieveorders order management call orders api order ready payment processing customer merchant modifies order new order object new order object created managing order state critical ensure customers properly charged order object created square takes snapshot state objects included example order request includes catalog item variation costs 5 time order request square total calculations will price even price changed 10 customer actually charged snapshot taken orders api time order object creation still reflects original price 5 avoid potential mistakes around amount charged order objects created immediately processing transaction relevant payment api time order object totals calculated order api calculates applies discounts taxes line item level line item modifiers applied directly applicable item order-level modifiers distributed across line item subtotals rather order subtotal final purchase amount calculated following order calculate starting item totals item base price quantity apply percent based line item discounts applicable line item totals apply percent based order-level discounts line item totals apply fixed amount line item discounts applicable line item totals distribute fixed amount order-level discounts line item totals amount distributed line item relative item contribution order subtotal apply line item order level taxes line item totals calculate starting item totals item base price quantity apply percent based line item discounts applicable line item totals apply percent based order-level discounts line item totals apply fixed amount line item discounts applicable line item totals distribute fixed amount order-level discounts line item totals amount distributed line item relative item contribution order subtotal apply line item order level taxes line item totals example consider clothing order 2 shirts 1 pair jeans 3 sweaters includes following discounts line item percent discount t-shirts 7 previous season item line item fixed amount discount t-shirts 3 00 customer loyalty discount line item fixed amount discount sweaters 11 00 customer loyalty discount order-level percent discount 12 father day sale order-level fixed amount discount 55 global sale line item percent discount t-shirts 7 previous season item line item fixed amount discount t-shirts 3 00 customer loyalty discount line item fixed amount discount sweaters 11 00 customer loyalty discount order-level percent discount 12 father day sale order-level fixed amount discount 55 global sale following taxes line item percent tax sweaters fair trade tax 5 order-level percent tax state sales tax 8 5 line item percent tax sweaters fair trade tax 5 order-level percent tax state sales tax 8 5 step 1 calculate order gross amounts first orders calculates gross totals line item according item base price quantity 2 printed shirt 15 00 30 00 1 slim jeans 25 00 25 00 3 woven sweater 35 00 105 00 order subtotal 160 00 2 printed shirt 15 00 30 00 1 slim jeans 25 00 25 00 3 woven sweater 35 00 105 00 order subtotal 160 00 2 printed shirt 15 00 30 00 2 printed shirt 15 00 30 00 1 slim jeans 25 00 25 00 1 slim jeans 25 00 25 00 3 woven sweater 35 00 105 00 3 woven sweater 35 00 105 00 order subtotal 160 00 order subtotal 160 00 step 2 4 apply percent discounts line item fixed discounts next orders applies line item percent discounts order-level percent discounts line item fixed amount discounts step 2 step 4 printed t-shirt 30 00 step 2 7 previous season item 2 10 27 90 step 3 12 father day sale 3 35 24 55 step 4 3 00 customer loyalty discount 3 00 21 55 printed t-shirt subtotal 21 55 slim jeans 25 00 step 2 discount 0 25 00 step 3 12 father day sale 3 00 22 00 step 4 discount 0 22 00 slim jeans subtotal 22 00 woven sweater 105 00 step 2 discount 0 105 00 step 3 12 father day sale 12 60 92 40 step 4 11 00 customer loyalty discount 11 00 81 40 woven sweater subtotal 81 40 order subtotal 124 95 printed t-shirt 30 00 step 2 7 previous season item 2 10 27 90 step 3 12 father day sale 3 35 24 55 step 4 3 00 customer loyalty discount 3 00 21 55 printed t-shirt subtotal 21 55 slim jeans 25 00 step 2 discount 0 25 00 step 3 12 father day sale 3 00 22 00 step 4 discount 0 22 00 slim jeans subtotal 22 00 woven sweater 105 00 step 2 discount 0 105 00 step 3 12 father day sale 12 60 92 40 step 4 11 00 customer loyalty discount 11 00 81 40 woven sweater subtotal 81 40 order subtotal 124 95 printed t-shirt 30 00 printed t-shirt 30 00 step 2 7 previous season item 2 10 27 90 step 2 7 previous season item 2 10 27 90 step 3 12 father day sale 3 35 24 55 step 3 12 father day sale 3 35 24 55 step 4 3 00 customer loyalty discount 3 00 21 55 step 4 3 00 customer loyalty discount 3 00 21 55 printed t-shirt subtotal 21 55 printed t-shirt subtotal 21 55 slim jeans 25 00 slim jeans 25 00 step 2 discount 0 25 00 step 2 discount 0 25 00 step 3 12 father day sale 3 00 22 00 step 3 12 father day sale 3 00 22 00 step 4 discount 0 22 00 step 4 discount 0 22 00 slim jeans subtotal 22 00 slim jeans subtotal 22 00 woven sweater 105 00 woven sweater 105 00 step 2 discount 0 105 00 step 2 discount 0 105 00 step 3 12 father day sale 12 60 92 40 step 3 12 father day sale 12 60 92 40 step 4 11 00 customer loyalty discount 11 00 81 40 step 4 11 00 customer loyalty discount 11 00 81 40 woven sweater subtotal 81 40 woven sweater subtotal 81 40 order subtotal 124 95 order subtotal 124 95 step 5 apply order-level fixed amount discounts since discounts broken line items discounts even order-level fixed amount discounts distributed across line items order ensure order-level fixed discount fairly distributed equivalent line item discount calculated based relative portion line item contributes recent subtotal words subtotal result steps 1 step 4 using following formula current item subtotal current order subtotal xx order-level fixed discount applicable line item discount example order-level fixed discount 55 distributed across three line items based subtotal 124 95 printed t-shirt 21 55 step 5 55 global sales 21 55 124 95 xx 55 9 49 12 06 printed t-shirt subtotal 12 06 slim jeans 22 00 step 5 55 global sales 22 00 124 95 xx 55 9 68 12 32 slim jeans subtotal 12 32 woven sweater 81 40 step 5 55 global sales 81 40 124 95 xx 55 35 83 45 57 woven sweater subtotal 45 57 order subtotal 69 95 printed t-shirt 21 55 step 5 55 global sales 21 55 124 95 xx 55 9 49 12 06 printed t-shirt subtotal 12 06 slim jeans 22 00 step 5 55 global sales 22 00 124 95 xx 55 9 68 12 32 slim jeans subtotal 12 32 woven sweater 81 40 step 5 55 global sales 81 40 124 95 xx 55 35 83 45 57 woven sweater subtotal 45 57 order subtotal 69 95 printed t-shirt 21 55 printed t-shirt 21 55 step 5 55 global sales 21 55 124 95 xx 55 9 49 12 06 step 5 55 global sales 21 55 124 95 xx 55 9 49 12 06 printed t-shirt subtotal 12 06 printed t-shirt subtotal 12 06 slim jeans 22 00 slim jeans 22 00 step 5 55 global sales 22 00 124 95 xx 55 9 68 12 32 step 5 55 global sales 22 00 124 95 xx 55 9 68 12 32 slim jeans subtotal 12 32 slim jeans subtotal 12 32 woven sweater 81 40 woven sweater 81 40 step 5 55 global sales 81 40 124 95 xx 55 35 83 45 57 step 5 55 global sales 81 40 124 95 xx 55 35 83 45 57 woven sweater subtotal 45 57 woven sweater subtotal 45 57 order subtotal 69 95 order subtotal 69 95 step 6 apply order item-level taxes last step apply applicable taxes line item taxes applied first order-level taxes distributed line item order printed t-shirt 21 55 step 6 state sales tax 8 5 12 06 xx 8 5 1 03 13 09 printed t-shirt subtotal 13 09 slim jeans 22 00 step 6 state sales tax 8 5 12 32 xx 8 5 1 05 13 37 slim jeans subtotal 13 37 woven sweater 45 57 step 6 fair trade tax 5 45 57 xx 5 2 28 47 85 step 6 state sales tax 8 5 45 57 xx 8 5 3 87 51 72 woven sweater subtotal 51 72 order total 78 18 printed t-shirt 21 55 step 6 state sales tax 8 5 12 06 xx 8 5 1 03 13 09 printed t-shirt subtotal 13 09 slim jeans 22 00 step 6 state sales tax 8 5 12 32 xx 8 5 1 05 13 37 slim jeans subtotal 13 37 woven sweater 45 57 step 6 fair trade tax 5 45 57 xx 5 2 28 47 85 step 6 state sales tax 8 5 45 57 xx 8 5 3 87 51 72 woven sweater subtotal 51 72 order total 78 18 printed t-shirt 21 55 printed t-shirt 21 55 step 6 state sales tax 8 5 12 06 xx 8 5 1 03 13 09 step 6 state sales tax 8 5 12 06 xx 8 5 1 03 13 09 printed t-shirt subtotal 13 09 printed t-shirt subtotal 13 09 slim jeans 22 00 slim jeans 22 00 step 6 state sales tax 8 5 12 32 xx 8 5 1 05 13 37 step 6 state sales tax 8 5 12 32 xx 8 5 1 05 13 37 slim jeans subtotal 13 37 slim jeans subtotal 13 37 woven sweater 45 57 woven sweater 45 57 step 6 fair trade tax 5 45 57 xx 5 2 28 47 85 step 6 fair trade tax 5 45 57 xx 5 2 28 47 85 step 6 state sales tax 8 5 45 57 xx 8 5 3 87 51 72 step 6 state sales tax 8 5 45 57 xx 8 5 3 87 51 72 woven sweater subtotal 51 72 woven sweater subtotal 51 72 order total 78 18 order total 78 18 next steps learn working catalog api recommend reading catalog api overview learn using orders api square checkout recommend reading checkout api overview learn using orders api transactions api square payment form recommend reading transactions api overview payment form overview start coding orders api recommend reading orders api technical reference window mathjax jax input asciimath output commonhtml extensions asciimath2jax js showmathmenu false next steps learn working catalog api recommend reading catalog api overview learn using orders api square checkout recommend reading checkout api overview learn using orders api transactions api square payment form recommend reading transactions api overview payment form overview start coding orders api recommend reading orders api technical reference learn working catalog api recommend reading catalog api overview learn working catalog api recommend reading catalog api overview catalog api overview learn using orders api square checkout recommend reading checkout api overview learn using orders api square checkout recommend reading checkout api overview checkout api overview learn using orders api transactions api square payment form recommend reading transactions api overview payment form overview learn using orders api transactions api square payment form recommend reading transactions api overview payment form overview transactions api overview payment form overview start coding orders api recommend reading orders api technical reference start coding orders api recommend reading orders api technical reference window mathjax jax input asciimath output commonhtml extensions asciimath2jax js showmathmenu false",
tags:"",url:"/articles/orders-api-overview"},{title:"Get Started with Transactions API",text:"Get Started with Transactions API Square's Transactions API lets you accept online payments get started transactions api square transactions api lets accept online payments website payments processed online show square dashboard next in-person payments processed square reader transactions api supports credit cards see article details square gift cards currently supported square transactions api lets accept online payments website payments processed online show square dashboard next in-person payments processed square reader transactions api supports credit cards see article details square gift cards currently supported article works taking online payment involves following steps include sqpaymentform javascript library webpage library embeds secure credit card form page loads buyer enters card information fields sqpaymentform indicates ready pay webpage obtains card nonce sqpaymentform one-time-use token expires 24 hours page submits card nonce application server along amount charge application server sends card nonce along details payment transactions api charge endpoint square responds result payment application server sends result payment back webpage webpage displays result payment buyer works taking online payment involves following steps include sqpaymentform javascript library webpage library embeds secure credit card form page loads buyer enters card information fields sqpaymentform indicates ready pay webpage obtains card nonce sqpaymentform one-time-use token expires 24 hours page submits card nonce application server along amount charge application server sends card nonce along details payment transactions api charge endpoint square responds result payment application server sends result payment back webpage webpage displays result payment buyer include sqpaymentform javascript library webpage library embeds secure credit card form page loads sqpaymentform buyer enters card information fields sqpaymentform indicates ready pay sqpaymentform webpage obtains card nonce sqpaymentform one-time-use token expires 24 hours page submits card nonce application server along amount charge card nonce sqpaymentform 24 hours application server sends card nonce along details payment transactions api charge endpoint square responds result payment charge application server sends result payment back webpage webpage displays result payment buyer handling card information responsibly payment card industry data security standard pci dss defines important security requirements storage processing transmission payment card information card numbers cardholder names conform requirements never store process transmit payment card information buyer enters card information sqpaymentform generate card nonce send application server send card nonce charge endpoint square takes care processing transmitting card information circumstances buyer confidential card information reach application server handling card information responsibly payment card industry data security standard pci dss defines important security requirements storage processing transmission payment card information card numbers cardholder names conform requirements never store process transmit payment card information never store process transmit payment card information buyer enters card information sqpaymentform generate card nonce send application server send card nonce charge endpoint square takes care processing transmitting card information circumstances buyer confidential card information reach application server sqpaymentform charge circumstances buyer confidential card information reach application server development steps step 0 complete square account application registration make sure completed steps square apis getting started begin developing transactions api step 1 embed sqpaymentform webpage read payment form setup guide learn step 2 send card nonce charge endpoint server communicate transactions api using favorite rest library one square provided client libraries read version processing payment corresponds preference rest library php client library ruby client library step 3 learn store cards file customer information optional read saving customer information details development steps step 0 complete square account application registration make sure completed steps square apis getting started begin developing transactions api square apis getting started step 1 embed sqpaymentform webpage sqpaymentform read payment form setup guide learn payment form setup guide step 2 send card nonce charge endpoint server communicate transactions api using favorite rest library one square provided client libraries read version processing payment corresponds preference processing payment rest library php client library ruby client library rest library php client library ruby client library step 3 learn store cards file customer information optional read saving customer information details saving customer information chargeback protection transactions api square provides chargeback protection merchants qualifying transactions order online payment potentially qualify chargeback protection provide following parameters request charge endpoint buyer_email_address least one billing_address shipping_address chargeback protection transactions api square provides chargeback protection merchants qualifying transactions order online payment potentially qualify chargeback protection provide following parameters request charge endpoint chargeback protection charge buyer_email_address least one billing_address shipping_address buyer_email_address least one billing_address shipping_address billing_address shipping_address",tags:"",url:"/articles/paymentform-overview"},{title:"Using the Point of Sale API for Android",text:"Using the Point of Sale API for Android Be sure to read Point using point sale api android sure read point sale api overview high-level explanation point sale api sure read point sale api overview high-level explanation point sale api sure read point sale api overview high-level explanation point sale api point sale api overview point sale api setup begin initiating square point sale transactions android app need complete following setup steps enroll application square yet complete steps square apis getting started begin developing point sale api obtain app sha-1 fingerprint square point sale verifies app sha-1 fingerprint validate transaction requests receives see article learn obtain app sha-1 fingerprint register app fingerprint package name order square point sale accept request android app square needs know two values related app sha-1 fingerprint package name com example myapp value match package attribute manifest element application android manifest go point sale api tab application settings application dashboard android section specify app package name fingerprint corresponding fields sure save changes add square point sale sdk android project square provides open-source sdk communicate square point sale api app install sdk gradle project add following dependency build gradle rebuild dependencies compile com squareup sdk point-of-sale-sdk 2 0 install sdk maven project add following dependency pom xml rebuild dependency groupid com squareup sdk groupid artifactid point-of-sale-sdk artifactid version 2 0 version type aar type dependency source sdk available github install latest version square point sale android device square point sale available google play store point sale api v1 0 supported square point sale 4 41 later point sale api v1 1 supported square point sale 4 48 later point sale api v2 0 supported square point sale 4 64 later check installed version point sale check faq point sale api setup begin initiating square point sale transactions android app need complete following setup steps enroll application square yet complete steps square apis getting started begin developing point sale api square apis getting started obtain app sha-1 fingerprint square point sale verifies app sha-1 fingerprint validate transaction requests receives see article learn obtain app sha-1 fingerprint article register app fingerprint package name order square point sale accept request android app square needs know two values related app sha-1 fingerprint package name com example myapp value match package attribute manifest element application android manifest sha-1 fingerprint package name com example myapp value match package attribute manifest element application android manifest com example myapp package manifest go point sale api tab application settings application dashboard android section specify app package name fingerprint corresponding fields point sale api application dashboard android sure save changes add square point sale sdk android project square provides open-source sdk communicate square point sale api app install sdk gradle project add following dependency build gradle rebuild build gradle dependencies compile com squareup sdk point-of-sale-sdk 2 0 install sdk maven project add following dependency pom xml rebuild pom xml dependency groupid com squareup sdk groupid artifactid point-of-sale-sdk artifactid version 2 0 version type aar type dependency source sdk available github github install latest version square point sale android device square point sale available google play store google play store point sale api v1 0 supported square point sale 4 41 later point sale api v1 1 supported square point sale 4 48 later point sale api v2 0 supported square point sale 4 64 later point sale api v1 0 supported square point sale 4 41 later point sale api v1 1 supported square point sale 4 48 later point sale api v2 0 supported square point sale 4 64 later check installed version point sale check faq faq initiating transaction app important initiate first square point sale transaction make sure completed following tasks square point sale app log business location want accept payments using square contactless chip reader connect square point sale first create instance posclient public class mainactivity extends activity private posclient posclient override protected void oncreate bundle savedinstancestate super oncreate savedinstancestate setcontentview layout main_activity replace your_client_id square-assigned client application available application dashboard posclient possdk createclient your_client_id start one dollar transaction private static final charge_request_code 1 public void starttransaction chargerequest request new chargerequest builder 1_00 usd build try intent intent posclient createchargeintent request startactivityforresult intent charge_request_code catch activitynotfoundexception showdialog error square point sale installed null posclient openpointofsaleplaystorelisting private void showdialog string title string message dialoginterface onclicklistener listener log mainactivity title message new alertdialog builder settitle title setmessage message setpositivebutton android string ok listener show see create chargerequest builder assemble details point sale api chargerequest sdk class descriptions point sale sdk class one purpose call static createclient method generate posclient instance send charge requests along square point sale chargerequest object represents details single transaction initiate point sale api including amount money charge construct chargerequest object chargerequest builder class shown calling combination builder methods followed build building chargerequest posclient instance generate intent chargerequest generate intent call startactivityforresult one app activities including intent parameter complete documentation sdk classes methods available sdk javadoc initiating transaction app important initiate first square point sale transaction make sure completed following tasks square point sale app log business location want accept payments using square contactless chip reader connect square point sale important initiate first square point sale transaction make sure completed following tasks square point sale app important log business location want accept payments using square contactless chip reader connect square point sale log business location want accept payments using square contactless chip reader connect square point sale connect square point sale first create instance posclient posclient public class mainactivity extends activity private posclient posclient override protected void oncreate bundle savedinstancestate super oncreate savedinstancestate setcontentview layout main_activity replace your_client_id square-assigned client application available application dashboard posclient possdk createclient your_client_id start one dollar transaction private static final charge_request_code 1 public void starttransaction chargerequest request new chargerequest builder 1_00 usd build try intent intent posclient createchargeintent request startactivityforresult intent charge_request_code catch activitynotfoundexception showdialog error square point sale installed null posclient openpointofsaleplaystorelisting private void showdialog string title string message dialoginterface onclicklistener listener log mainactivity title message new alertdialog builder settitle title setmessage message setpositivebutton android string ok listener show see create chargerequest builder assemble details point sale api chargerequest chargerequest builder chargerequest sdk class descriptions point sale sdk class one purpose call static createclient method generate posclient instance send charge requests along square point sale chargerequest object represents details single transaction initiate point sale api including amount money charge construct chargerequest object chargerequest builder class shown calling combination builder methods followed build building chargerequest posclient instance generate intent chargerequest generate intent call startactivityforresult one app activities including intent parameter point sale sdk class one purpose call static createclient method generate posclient instance send charge requests along square point sale point sale sdk createclient posclient chargerequest object represents details single transaction initiate point sale api including amount money charge construct chargerequest object chargerequest builder class shown calling combination builder methods followed build chargerequest chargerequest chargerequest builder build building chargerequest posclient instance generate intent chargerequest generate intent call startactivityforresult one app activities including intent parameter chargerequest posclient intent chargerequest intent startactivityforresult intent complete documentation sdk classes methods available sdk javadoc sdk javadoc processing transaction square point sale merchant android device switches square point sale details transaction prepopulated merchant either process transaction approved payment method cancel either way action completes device returns app provides details result note currently possible process fake credit card payment point sale api testing integration cash payments process small card payments 1 issue refunds square point sale processing transaction square point sale merchant android device switches square point sale details transaction prepopulated merchant either process transaction approved payment method cancel either way action completes device returns app provides details result note currently possible process fake credit card payment point sale api testing integration cash payments process small card payments 1 issue refunds square point sale note currently possible process fake credit card payment point sale api testing integration cash payments process small card payments 1 issue refunds square point sale note issue refunds square point sale receiving data square point sale square point sale finishes processing transaction encounters error returns app onactivityresult method activity initiated transaction called handle response override protected void onactivityresult requestcode resultcode intent data super onactivityresult requestcode resultcode data requestcode charge_request_code data null showdialog error square point sale uninstalled crashed null return resultcode activity result_ok chargerequest success success posclient parsechargesuccess data string message client transaction success clienttransactionid showdialog success message null else chargerequest error error posclient parsechargeerror data error code chargerequest errorcode transaction_already_in_progress string title transaction already progress string message please complete current transaction point sale showdialog title message new dialoginterface onclicklistener override public void onclick dialoginterface dialog errors fixed launching point sale home screen posclient launchpointofsale else showdialog error error code error debugdescription null shown posclient object provides separate methods parsing point sale api response depending whether associated transaction succeeded failed transaction succeeded chargerequest success object generated parsing response fields described transaction failed chargerequest error object generated parsing response fields described receiving data square point sale square point sale finishes processing transaction encounters error returns app onactivityresult method activity initiated transaction called handle response onactivityresult activity initiated transaction override protected void onactivityresult requestcode resultcode intent data super onactivityresult requestcode resultcode data requestcode charge_request_code data null showdialog error square point sale uninstalled crashed null return resultcode activity result_ok chargerequest success success posclient parsechargesuccess data string message client transaction success clienttransactionid showdialog success message null else chargerequest error error posclient parsechargeerror data error code chargerequest errorcode transaction_already_in_progress string title transaction already progress string message please complete current transaction point sale showdialog title message new dialoginterface onclicklistener override public void onclick dialoginterface dialog errors fixed launching point sale home screen posclient launchpointofsale else showdialog error error code error debugdescription null shown posclient object provides separate methods parsing point sale api response depending whether associated transaction succeeded failed posclient transaction succeeded chargerequest success object generated parsing response fields described succeeded chargerequest success transaction failed chargerequest error object generated parsing response fields described failed chargerequest error error codes point sale api transaction fails reason square point sale returns one error codes described value available code field chargerequest error object create square point sale response see receiving data square point sale example error codes point sale api transaction fails reason square point sale returns one error codes described value available code field chargerequest error object create square point sale response see receiving data square point sale example code chargerequest error receiving data square point sale additional resources two sample point sale api applications available github get stuck check solution issue stack overflow questions related square apis tagged square-connect label monitored square developers find answer feel free post new question square api returns error message helpful diagnosing issue please contact support details issue error message received additional resources two sample point sale api applications available github github get stuck check solution issue stack overflow questions related square apis tagged square-connect label monitored square developers find answer feel free post new question stack overflow square-connect square api returns error message helpful diagnosing issue please contact support details issue error message received contact support",tags:"",url:"/articles/point-of-sale-api-android"},{title:"Using the Point of Sale API for iOS",
text:"Using the Point of Sale API for iOS Be sure to read Point using point sale api ios sure read point sale api overview high-level explanation point sale api sure read point sale api overview high-level explanation point sale api sure read point sale api overview high-level explanation point sale api point sale api overview point sale api setup point sale api ios app need perform following setup tasks enroll application square yet complete steps 1 2 square apis getting started begin developing point sale api next go application control panel application dashboard point sale api tab provide following information ios app app bundle app custom url scheme sure save changes add square point sale sdk ios app point sale sdk provides helpful wrapper around api simplifies development process sdk available github along sample application demonstrates see full sdk reference learn specify url schemes app uses point sale api uses urls custom schemes communicate native app square point sale square point sale accepts urls scheme square-commerce-v1 sends transaction results back app using url scheme define decide url scheme myapp-url-scheme add cfbundleurltypes key info plist file indicate app handles urls scheme key cfbundleurltypes key array dict key cfbundletyperole key string editor string key cfbundleurlname key string com myapp point-of-sale-api-response string key cfbundleurlschemes key array string myapp-url-scheme string array dict array also need indicate app uses square-commerce-v1 url scheme open square point sale add lsapplicationqueriesschemes key info plist file like key lsapplicationqueriesschemes key array string square-commerce-v1 string array information defining custom url schemes handling requests see apple app programming guide ios install latest version square point sale ios device square point sale available app store point sale api v1 0 supported square point sale 4 34 later point sale api v1 1 supported square point sale 4 50 later point sale api v1 2 supported square point sale 4 53 later point sale api v1 3 supported square point sale 4 59 later check installed version point sale go help support within app scroll bottom support screen point sale api setup point sale api ios app need perform following setup tasks enroll application square yet complete steps 1 2 square apis getting started begin developing point sale api square apis getting started next go application control panel application dashboard point sale api tab provide following information ios app application dashboard point sale api app bundle app custom url scheme app bundle app custom url scheme sure save changes save add square point sale sdk ios app point sale sdk provides helpful wrapper around api simplifies development process sdk available github along sample application demonstrates github see full sdk reference learn full sdk reference specify url schemes app uses point sale api uses urls custom schemes communicate native app square point sale square point sale accepts urls scheme square-commerce-v1 sends transaction results back app using url scheme define square-commerce-v1 define decide url scheme myapp-url-scheme add cfbundleurltypes key info plist file indicate app handles urls scheme myapp-url-scheme cfbundleurltypes info plist key cfbundleurltypes key array dict key cfbundletyperole key string editor string key cfbundleurlname key string com myapp point-of-sale-api-response string key cfbundleurlschemes key array string myapp-url-scheme string array dict array also need indicate app uses square-commerce-v1 url scheme open square point sale add lsapplicationqueriesschemes key info plist file like also square-commerce-v1 lsapplicationqueriesschemes info plist key lsapplicationqueriesschemes key array string square-commerce-v1 string array information defining custom url schemes handling requests see apple app programming guide ios app programming guide ios install latest version square point sale ios device square point sale available app store app store point sale api v1 0 supported square point sale 4 34 later point sale api v1 1 supported square point sale 4 50 later point sale api v1 2 supported square point sale 4 53 later point sale api v1 3 supported square point sale 4 59 later point sale api v1 0 supported square point sale 4 34 later point sale api v1 1 supported square point sale 4 50 later point sale api v1 2 supported square point sale 4 53 later point sale api v1 3 supported square point sale 4 59 later check installed version point sale go help support within app scroll bottom support screen initiating square point sale transaction app important initiate first square point sale transaction make sure completed following tasks square point sale app log business location want accept payments first time opening square point sale dismiss tutorial screens dialogs appear using square contactless chip reader connect square point sale initiating transaction square point sale initiating square point sale transaction point sale sdk happens two steps create sccapirequest object details transaction want charge sccapiconnection class send sccapirequest along square point sale processed following objective-c code snippet demonstrates generating sccapirequest object sending square point sale see swift example replace app callback url nsurl const callbackurl nsurl urlwithstring your-url-scheme specify amount money charge sccmoney const amount sccmoney moneywithamountcents 100 currencycode usd error null client square application note need set client creating first request sccapirequest setclientid your_client_id sccapirequest request sccapirequest requestwithcallbackurl callbackurl amount amount userinfostring nil merchantid nil notes coffee customerid nil supportedtendertypes sccapirequesttendertypeall clearsdefaultfees returnautomaticallyafterpayment error error ready charge customer bring point sale foreground complete payment bool success sccapiconnection performrequest request error error handling error codes error occurs creation sccapirequest object square point sale api returns error described value available error parameter passed creation sccapirequest object outlined initiating square point sale transaction app important initiate first square point sale transaction make sure completed following tasks square point sale app log business location want accept payments first time opening square point sale dismiss tutorial screens dialogs appear using square contactless chip reader connect square point sale important initiate first square point sale transaction make sure completed following tasks square point sale app important log business location want accept payments first time opening square point sale dismiss tutorial screens dialogs appear using square contactless chip reader connect square point sale log business location want accept payments first time opening square point sale dismiss tutorial screens dialogs appear using square contactless chip reader connect square point sale connect square point sale initiating transaction square point sale initiating square point sale transaction point sale sdk happens two steps create sccapirequest object details transaction want charge sccapiconnection class send sccapirequest along square point sale processed create sccapirequest object details transaction want charge sccapirequest sccapiconnection class send sccapirequest along square point sale processed sccapiconnection sccapirequest following objective-c code snippet demonstrates generating sccapirequest object sending square point sale see swift example sccapirequest replace app callback url nsurl const callbackurl nsurl urlwithstring your-url-scheme specify amount money charge sccmoney const amount sccmoney moneywithamountcents 100 currencycode usd error null client square application note need set client creating first request sccapirequest setclientid your_client_id sccapirequest request sccapirequest requestwithcallbackurl callbackurl amount amount userinfostring nil merchantid nil notes coffee customerid nil supportedtendertypes sccapirequesttendertypeall clearsdefaultfees returnautomaticallyafterpayment error error bool success sccapiconnection performrequest request error error handling error codes error occurs creation sccapirequest object square point sale api returns error described sccapirequest value available error parameter passed creation sccapirequest object outlined error sccapirequest processing transaction square point sale merchant ios device switches square point sale details transaction prepopulated merchant either process transaction cancel either way action completes ios device returns app provides details result note currently possible process fake credit card payment point sale api testing integration process small card payments 1 issue refunds square point sale processing transaction square point sale merchant ios device switches square point sale details transaction prepopulated merchant either process transaction cancel either way action completes ios device returns app provides details result note currently possible process fake credit card payment point sale api testing integration process small card payments 1 issue refunds square point sale note currently possible process fake credit card payment point sale api testing integration process small card payments 1 issue refunds square point sale note issue refunds square point sale receiving data square point sale square point sale sends data back ios app via callbackurl provide request receive data app uiapplicationdelegate needs implement application openurl options method following objective-c code snippet demonstrates retrieving sccapiresponse sent back app see swift example bool application uiapplication application openurl nsurl url options nsdictionary nsstring options nsstring const sourceapplication options uiapplicationopenurloptionssourceapplicationkey sourceapplication hasprefix com squareup square sccapiresponse const response sccapiresponse responsewithresponseurl url error decodeerror return yes return handling error codes error occurs point sale api transaction square point sale returns one error codes described value available error_code field sccapiresponse object passed back uiapplicationdelegate method outlined receiving data square point sale square point sale sends data back ios app via callbackurl provide request receive data app uiapplicationdelegate needs implement application openurl options method callbackurl uiapplicationdelegate application openurl options following objective-c code snippet demonstrates retrieving sccapiresponse sent back app see swift example sccapiresponse bool application uiapplication application openurl nsurl url options nsdictionary nsstring options nsstring const sourceapplication options uiapplicationopenurloptionssourceapplicationkey sourceapplication hasprefix com squareup square sccapiresponse const response sccapiresponse responsewithresponseurl url error decodeerror return yes return handling error codes error occurs point sale api transaction square point sale returns one error codes described value available error_code field sccapiresponse object passed back uiapplicationdelegate method outlined error_code sccapiresponse uiapplicationdelegate using point sale api offline mode merchants process point sale api payments square point sale offline mode without internet connection order merchant enabled offline mode business merchant processed least one online point sale api payment application last 24 hours merchant processes point sale api payment offline mode square point sale response application include transaction_id field square backend systems received transaction yet response however include client_transaction_id field merchant internet connection restored transaction reaches square client_transaction_id get transaction full details connect api transaction objects returned connect api listtransactions endpoint include client_id field field matches value client_transaction_id returned point sale api match value fetch full details transaction originally processed offline mode note currently possible filter listtransactions endpoint results client_id field using point sale api offline mode merchants process point sale api payments square point sale offline mode without internet connection order offline mode merchant enabled offline mode business merchant processed least one online point sale api payment application last 24 hours merchant enabled offline mode business merchant processed least one online point sale api payment application last 24 hours online merchant processes point sale api payment offline mode square point sale response application include transaction_id field square backend systems received transaction yet response however include client_transaction_id field merchant internet connection restored transaction reaches square client_transaction_id get transaction full details connect api transaction_id client_transaction_id client_transaction_id transaction objects returned connect api listtransactions endpoint include client_id field field matches value client_transaction_id returned point sale api match value fetch full details transaction originally processed offline mode note currently possible filter listtransactions endpoint results client_id field transaction listtransactions client_id client_transaction_id filter client_id additional resources get stuck check solution issue stack overflow questions related square apis tagged square-connect label find answer feel free post new question square api development team monitors label square api returns error message helpful diagnosing issue please contact support details issue error message received additional resources get stuck check solution issue stack overflow questions related square apis tagged square-connect label find answer feel free post new question square api development team monitors label stack overflow square-connect square api returns error message helpful diagnosing issue please contact support details issue error message received contact support",tags:"",url:"/articles/point-of-sale-api-ios"},{title:"Point of Sale API for iOS v1.3 released (2017-06-19)",text:"Point of Sale API for iOS v1.3 released (2017-06-19) Version 1.3 of the point sale api ios v1 3 released 2017-06-19 version 1 3 point sale api available ios point sale api v1 3 includes improvements api parameter naming available square point sale app version 4 59 later version 1 3 improvements rename optional merchant_id api request parameter location_id used identifier business location square point sale application logged match value parameter information see point sale api overview overview point sale api works see using point sale api ios learn add point sale api functionality ios app see squarepointofsalesdk-ios repository easiest solution add point sale api ios app version 1 3 point sale api available ios point sale api v1 3 includes improvements api parameter naming available square point sale app version 4 59 later square point sale version 1 3 improvements rename optional merchant_id api request parameter location_id used identifier business location square point sale application logged match value parameter rename optional merchant_id api request parameter location_id used identifier business location square point sale application logged match value parameter merchant_id location_id information see point sale api overview overview point sale api works see using point sale api ios learn add point sale api functionality ios app see squarepointofsalesdk-ios repository easiest solution add point sale api ios app see point sale api overview overview point sale api works point sale api overview see using point sale api ios learn add point sale api functionality ios app using point sale api ios see squarepointofsalesdk-ios repository easiest solution add point sale api ios app squarepointofsalesdk-ios repository",tags:"",url:"/articles/point-of-sale-api-ios-v1-3-released-2017-06-19"},{title:"Point of Sale API Overview",text:"Point of Sale API Overview The Point of Sale API lets mobile applications open point sale api overview point sale api lets mobile applications open square point sale app process in-person payments using square hardware developers point sale api build customized point-of-sale solutions application requires payments without worrying hardware integrations pci compliance point sale api available native web apps ios android specs glance platform android ios mobile web resources sdk ios sdk android technical reference ios technical reference android point sale api lets mobile applications open square point sale app process in-person payments using square hardware developers point sale api build customized point-of-sale solutions application requires payments without worrying hardware integrations pci compliance point sale api available native web apps ios android specs glance platform android ios mobile web resources sdk ios sdk android technical reference ios technical reference android specs glance platform android ios mobile web platform android ios mobile web android ios mobile web resources sdk ios sdk android technical reference ios technical reference android resources sdk ios sdk android technical reference ios technical reference android sdk ios sdk android technical reference ios technical reference android requirements limitations point sale api requires android ios device recent version square point sale app installed activated square merchant account accepting card payments square contactless chip card reader accepting emv apple android pay square magstripe reader accepting magstripe cards point sale api support itemized sales square invoices sandbox mode lieu sandbox mode square recommends taking refunding 1 payments test application processing fees transactions initiated point sale api identical fees transactions initiated directly square point sale see article details requirements limitations point sale api requires android ios device recent version square point sale app installed activated square merchant account accepting card payments square contactless chip card reader accepting emv apple android pay square magstripe reader accepting magstripe cards android ios device recent version square point sale app installed activated square merchant account accepting card payments square contactless chip card reader accepting emv apple android pay square magstripe reader accepting magstripe cards point sale api support itemized sales square invoices sandbox mode lieu sandbox mode square recommends taking refunding 1 payments test application itemized sales square invoices sandbox mode lieu sandbox mode square recommends taking refunding 1 payments test application lieu sandbox mode square recommends taking refunding 1 payments test application lieu sandbox mode square recommends taking refunding 1 payments test application processing fees transactions initiated point sale api identical fees transactions initiated directly square point sale see article details article works merchant using app point sale api payment flow looks like merchant uses app determine amount money charge customer merchant device quickly switches app square point sale amount charge pre-populated merchant processes payment square point sale merchant device switches back app receives information result transaction technical overview point sale api compatible native ios android apps well web apps running mobile browsers native developers open source sdks published square android ios interact api web developers refer web-specific documentation specific platform android ios will pass point sale api request containing minimum amount charged tender types accept square application also include optional parameters note associated transaction reference information returned transaction finishes square customer associated transaction options configure square payment flow starting request will switch control app square point sale merchant will complete transaction using point sale payment flow transaction complete app will receive callback indicates request failed successful successful request callbacks will include reference ids transaction square connect apis failed request callbacks will include error code indicating request failed callbacks will include reference information passed applicable record transaction ids returned api future connect apis example issuing refunds cross-referencing past payments application keep track whether point sale api request issued whether callback received constraints app-switching apis merchants may leave square point sale api request return app responsibility direct return square finish transaction works merchant using app point sale api payment flow looks like merchant uses app determine amount money charge customer merchant device quickly switches app square point sale amount charge pre-populated merchant processes payment square point sale merchant device switches back app receives information result transaction merchant uses app determine amount money charge customer merchant device quickly switches app square point sale amount charge pre-populated merchant processes payment square point sale merchant device switches back app receives information result transaction technical overview point sale api compatible native ios android apps well web apps running mobile browsers native developers open source sdks published square android ios interact api web developers refer web-specific documentation specific platform android ios android ios android ios will pass point sale api request containing minimum amount charged tender types accept square application amount charged tender types accept square application also include optional parameters note associated transaction reference information returned transaction finishes square customer associated transaction options configure square payment flow note associated transaction reference information returned transaction finishes square customer associated transaction options configure square payment flow starting request will switch control app square point sale merchant will complete transaction using point sale payment flow transaction complete app will receive callback indicates request failed successful successful request callbacks will include reference ids transaction square connect apis failed request callbacks will include error code indicating request failed callbacks will include reference information passed applicable record transaction ids returned api future connect apis example issuing refunds cross-referencing past payments square connect apis application keep track whether point sale api request issued whether callback received constraints app-switching apis merchants may leave square point sale api request return app responsibility direct return square finish transaction additional resources get started refer guide specific platform technology using point sale api ios using point sale api android using web api ios using web api android additional resources get started refer guide specific platform technology using point sale api ios using point sale api android using web api ios using web api android using point sale api ios using point sale api android using web api ios using web api android",tags:"",url:"/articles/point-of-sale-api-overview"},{title:"Processing a card payment (other languages)",text:"Processing a card payment (other languages) After the SqPaymentForm generates a card nonce processing card payment languages sqpaymentform generates card nonce submit server finish processing payment sending request charge endpoint details transaction square provides client libraries several languages communicating ecommerce api endpoints using php ruby see documentation article describes using client library language using another programming language ecommerce code samples available selection languages github see code samples information sqpaymentform generates card nonce submit server finish processing payment sending request charge endpoint details transaction sqpaymentform charge square provides client libraries several languages communicating ecommerce api endpoints using php ruby see documentation article describes using client library language using another programming language ecommerce code samples available selection languages github see code samples information using php ruby see documentation article describes using client library language php ruby using another programming language ecommerce code samples available selection languages github see code samples information code samples learn oauth personal access token gives full access business data developing application businesses well oauth api generate access tokens businesses oauth flow connect v2 identical flow v1 learn oauth flow code samples oauth flow available github important order app process payments behalf another merchant merchant authorize application payments_write oauth permission learn oauth personal access token gives full access business data developing application businesses well oauth api generate access tokens businesses oauth flow connect v2 identical flow v1 learn oauth flow code samples oauth flow available github oauth flow github important order app process payments behalf another merchant merchant authorize application payments_write oauth permission important payments_write",tags:"",url:"/articles/processing-payment-other"},{title:"Processing a card payment (PHP)",text:"Processing a card payment (PHP) After the SqPaymentForm generates a card nonce and processing card payment php sqpaymentform generates card nonce submit server finish processing payment sending request charge endpoint details transaction server implemented php squareconnect client library simplify making requests connect v2 endpoints installing squareconnect php library squareconnect client library available via composer add project first add following dependency application composer json file require square connect dependencies also add dependency running php composer phar require square connect download application dependencies running php composer phar install sqpaymentform generates card nonce submit server finish processing payment sending request charge endpoint details transaction sqpaymentform charge server implemented php squareconnect client library simplify making requests connect v2 endpoints squareconnect installing squareconnect php library squareconnect squareconnect client library available via composer add project first add following dependency application composer json file squareconnect composer composer json require square connect dependencies also add dependency running php composer phar require square connect php composer phar require square connect download application dependencies running php composer phar install retrieving location ids every square merchant business consists one locations every payment merchant processes associated one locations even online payments order process payment connect v2 need know location want associate payment squareconnect library easy method obtaining business location ids listlocations method paste following locations-test php file run php locations-test php sure specify personal access token indicated details business locations will appear console php require vendor autoload php access_token your_personal_access_token squareconnect configuration getdefaultconfiguration setaccesstoken access_token locations_api new squareconnect api locationsapi echo locations_api listlocations retrieving location ids every square merchant business consists one locations every payment merchant processes associated one locations even online payments order process payment connect v2 need know location want associate payment locations squareconnect library easy method obtaining business location ids listlocations method squareconnect listlocations paste following locations-test php file run php locations-test php sure specify personal access token indicated details business locations will appear console locations-test php php locations-test php php require vendor autoload php access_token your_personal_access_token squareconnect configuration getdefaultconfiguration setaccesstoken access_token locations_api new squareconnect api locationsapi echo locations_api listlocations charging card nonce now generated card nonce sqpaymentform way retrieve business location ids charge buyer card like require vendor autoload php assume assigned values following variables nonce location_id access_token squareconnect configuration getdefaultconfiguration setaccesstoken access_token transactions_api new squareconnect api transactionsapi request_body array card_nonce nonce monetary amounts specified smallest unit applicable currency amount cents also hard-coded 1 useful amount_money array amount 100 currency usd every payment process given business unique idempotency key unsure whether particular payment succeeded reattempt idempotency key without worrying double charging buyer idempotency_key uniqid sdk throws exception connect endpoint responds anything besides 200 success block catches exceptions occur request try print_r transactions_api charge location_id request_body catch exception echo caught exception getmessage value returned charge array contains details processed transaction card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce charging card nonce now generated card nonce sqpaymentform way retrieve business location ids charge buyer card like sqpaymentform require vendor autoload php assume assigned values following variables nonce location_id access_token squareconnect configuration getdefaultconfiguration setaccesstoken access_token transactions_api new squareconnect api transactionsapi request_body array card_nonce nonce monetary amounts specified smallest unit applicable currency amount cents also hard-coded 1 useful amount_money array amount 100 currency usd every payment process given business unique idempotency key unsure whether particular payment succeeded reattempt idempotency key without worrying double charging buyer idempotency_key uniqid sdk throws exception connect endpoint responds anything besides 200 success block catches exceptions occur request try print_r transactions_api charge location_id request_body catch exception echo caught exception getmessage value returned charge array contains details processed transaction charge array card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce card nonces expire 24 hours trying full sample uses sqpaymentform squareconnect library available github see sample readme information running sample want test charging cards without actually moving money configure sample communicate connect v2 sandbox endpoints information see using api sandbox trying full sample uses sqpaymentform squareconnect library available github see sample readme information running sample sqpaymentform squareconnect github readme want test charging cards without actually moving money configure sample communicate connect v2 sandbox endpoints information see using api sandbox using api sandbox learn oauth far tutorial used personal access token gives full access business data developing application businesses well oauth api generate access tokens businesses oauth flow connect v2 identical flow v1 learn oauth flow code samples oauth flow available github important order app process payments behalf another merchant merchant authorize application payments_write oauth permission learn oauth far tutorial used personal access token gives full access business data developing application businesses well oauth api generate access tokens businesses oauth flow connect v2 identical flow v1 learn oauth flow code samples oauth flow available github learn oauth flow available github important order app process payments behalf another merchant merchant authorize application payments_write oauth permission important payments_write",tags:"",url:"/articles/processing-payment-php"},{title:"Processing a card payment (REST)",
text:"Processing a card payment (REST) After the SqPaymentForm generates a card nonce and processing card payment rest sqpaymentform generates card nonce submit server finish processing payment sending request charge endpoint details transaction article demonstrates using unirest http library send http request charge endpoint versions unirest available many popular server programming languages article uses python version course free http library comfortable familiar http libraries unirest good place start easy connect api endpoints sqpaymentform generates card nonce submit server finish processing payment sending request charge endpoint details transaction sqpaymentform charge article demonstrates using unirest http library send http request charge endpoint versions unirest available many popular server programming languages article uses python version unirest http library charge course free http library comfortable familiar http libraries unirest good place start easy connect api endpoints installing unirest installation instructions version unirest available unirest site installing unirest installation instructions version unirest available unirest site unirest site retrieving location ids every square merchant business consists one locations every payment merchant processes associated one locations even online payments order process payment connect v2 need know location want associate payment obtain business loation ids send request listlocations endpoint installing python version unirest paste following locations-test py file run python locations-test py sure specify personal access token indicated details business locations will appear console import unirest access_token replace_with_your_access_token response unirest get https connect squareup com v2 locations headers accept application json authorization bearer access_token print response body retrieving location ids every square merchant business consists one locations every payment merchant processes associated one locations even online payments order process payment connect v2 need know location want associate payment locations obtain business loation ids send request listlocations endpoint listlocations installing python version unirest paste following locations-test py file run python locations-test py sure specify personal access token indicated details business locations will appear console locations-test py python locations-test py import unirest access_token replace_with_your_access_token response unirest get https connect squareup com v2 locations headers accept application json authorization bearer access_token print response body charging card nonce now generated card nonce sqpaymentform way retrieve business location ids charge buyer card like import unirest import json import uuid assume assigned values following variables card_nonce location_id access_token response unirest post https connect squareup com v2 locations location_id transactions headers accept application json content-type application json authorization bearer access_token params json dumps card_nonce card_nonce amount_money amount 100 currency usd idempotency_key str uuid uuid1 print response body python response body dict contains details processed payment card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce charging card nonce now generated card nonce sqpaymentform way retrieve business location ids charge buyer card like sqpaymentform import unirest import json import uuid assume assigned values following variables card_nonce location_id access_token response unirest post https connect squareup com v2 locations location_id transactions headers accept application json content-type application json authorization bearer access_token params json dumps card_nonce card_nonce amount_money amount 100 currency usd idempotency_key str uuid uuid1 print response body python response body dict contains details processed payment response body dict card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce card nonces expire 24 hours learn oauth far tutorial used personal access token gives full access business data developing application businesses well oauth api generate access tokens businesses oauth flow connect v2 identical flow v1 learn oauth flow code samples oauth flow available github important order app process payments behalf another merchant merchant authorize application payments_write oauth permission learn oauth far tutorial used personal access token gives full access business data developing application businesses well oauth api generate access tokens businesses oauth flow connect v2 identical flow v1 learn oauth flow code samples oauth flow available github oauth flow github important order app process payments behalf another merchant merchant authorize application payments_write oauth permission important payments_write",tags:"",url:"/articles/processing-payment-rest"},{title:"Processing a card payment (Ruby)",text:"Processing a card payment (Ruby) After the SqPaymentForm generates a card nonce and processing card payment ruby sqpaymentform generates card nonce submit server finish processing payment sending request charge endpoint details transaction server implemented ruby square_connect client library simplify making requests connect v2 endpoints sqpaymentform generates card nonce submit server finish processing payment sending request charge endpoint details transaction sqpaymentform charge server implemented ruby square_connect client library simplify making requests connect v2 endpoints square_connect installing square_connect gem install square_connect gem way install gem gem install square_connect installing square_connect gem square_connect install square_connect gem way install gem square_connect gem install square_connect retrieving location ids every square merchant business consists one locations every payment merchant processes associated one locations even online payments order process payment connect v2 need know location want associate payment square_connect library easy method obtaining business location ids list_locations method paste following locations-test rb file run ruby locations-test rb sure specify personal access token indicated details business locations will appear console require square_connect access_token replace_with_your_access_token squareconnect configure config config access_token access_token end locations_api squareconnect locationsapi new begin locations_response locations_api list_locations puts locations_response rescue squareconnect apierror raise error encountered listing locations message end get location able process transaction location locations_response locations detect capabilities include credit_card_processing end location nil raise activation required visit https squareup com activate activate begin taking payments end puts location retrieving location ids every square merchant business consists one locations every payment merchant processes associated one locations even online payments order process payment connect v2 need know location want associate payment locations square_connect library easy method obtaining business location ids list_locations method square_connect list_locations paste following locations-test rb file run ruby locations-test rb sure specify personal access token indicated details business locations will appear console locations-test rb ruby locations-test rb require square_connect access_token replace_with_your_access_token squareconnect configure config config access_token access_token end locations_api squareconnect locationsapi new begin locations_response locations_api list_locations puts locations_response rescue squareconnect apierror raise error encountered listing locations message end get location able process transaction location locations_response locations detect capabilities include credit_card_processing end location nil raise activation required visit https squareup com activate activate begin taking payments end puts location charging card nonce now generated card nonce sqpaymentform way retrieve business location ids charge buyer card like require square_connect require securerandom assume correct values assigned following variables nonce location_id access_token setup authorization squareconnect configure config config access_token access token end transactions_api squareconnect transactionsapi new request_body card_nonce nonce monetary amounts specified smallest unit applicable currency amount cents also hard-coded 1 useful amount_money amount 100 currency usd every payment process given business unique idempotency key unsure whether particular payment succeeded reattempt idempotency key without worrying double charging buyer idempotency_key securerandom uuid sdk throws exception connect endpoint responds anything besides 200 success block catches exceptions occur request begin resp transactions_api charge location_id request_body rescue squareconnect apierror raise error encountered charging card message end puts resp value resp hash contains details processed transaction card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce charging card nonce now generated card nonce sqpaymentform way retrieve business location ids charge buyer card like sqpaymentform require square_connect require securerandom assume correct values assigned following variables nonce location_id access_token setup authorization squareconnect configure config config access_token access token end transactions_api squareconnect transactionsapi new request_body card_nonce nonce monetary amounts specified smallest unit applicable currency amount cents also hard-coded 1 useful amount_money amount 100 currency usd every payment process given business unique idempotency key unsure whether particular payment succeeded reattempt idempotency key without worrying double charging buyer idempotency_key securerandom uuid sdk throws exception connect endpoint responds anything besides 200 success block catches exceptions occur request begin resp transactions_api charge location_id request_body rescue squareconnect apierror raise error encountered charging card message end puts resp value resp hash contains details processed transaction resp hash card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce card nonces expire 24 hours charge endpoint returns error attempt charge expired nonce card nonces expire 24 hours trying full sample uses sqpaymentform available github see sample readme information running sample want test charging cards without actually moving money configure sample communicate connect v2 sandbox endpoints information see using api sandbox trying full sample uses sqpaymentform available github see sample readme information running sample sqpaymentform available github readme want test charging cards without actually moving money configure sample communicate connect v2 sandbox endpoints information see using api sandbox using api sandbox learn oauth far tutorial used personal access token gives full access business data developing application businesses well oauth api generate access tokens businesses oauth flow connect v2 identical flow v1 learn oauth flow code samples oauth flow available github important order app process payments behalf another merchant merchant authorize application payments_write oauth permission learn oauth far tutorial used personal access token gives full access business data developing application businesses well oauth api generate access tokens businesses oauth flow connect v2 identical flow v1 learn oauth flow code samples oauth flow available github oauth flow github important order app process payments behalf another merchant merchant authorize application payments_write oauth permission important payments_write",tags:"",url:"/articles/processing-payment-ruby"},{title:"Using Card on File for Recurring Payments",text:"Using Card on File for Recurring Payments Version 2 of the Connect API using card file recurring payments version 2 connect api provides ability business save information related ecommerce customers information falls two primary categories contact information cards file order process recurring payments via connect api will need createcustomer createcustomercard endpoints document includes code samples inline text end article code placed together one block convenient copy paste block variables replace values access_token card_nonce important link card file customer without customer express permission example include checkbox purchase flow unchecked default customer check specify wish save card information future purchases linking cards file without obtaining customer permission may result application disabled without notice version 2 connect api provides ability business save information related ecommerce customers information falls two primary categories contact information cards file order process recurring payments via connect api will need createcustomer createcustomercard endpoints createcustomer createcustomercard document includes code samples inline text end article code placed together one block convenient copy paste block variables replace values access_token card_nonce important link card file customer without customer express permission example include checkbox purchase flow unchecked default customer check specify wish save card information future purchases linking cards file without obtaining customer permission may result application disabled without notice important link card file customer without customer express permission example include checkbox purchase flow unchecked default customer check specify wish save card information future purchases linking cards file without obtaining customer permission may result application disabled without notice important linking cards file without obtaining customer permission may result application disabled without notice installing square_connect gem install square_connect gem way install gem gem install square_connect installing square_connect gem square_connect install square_connect gem way install gem square_connect gem install square_connect retrieving location ids every square merchant business consists one locations described every payment merchant processes associated one locations even online payments order process payment connect v2 need specify location taking payment location set capabilities order process credit cards want location credit_card_processing enabled square_connect library easy method obtaining business location ids list_locations method require square_connect access_token replace_with_your_access_token squareconnect configure config config access_token access_token end locations_api squareconnect locationsapi new begin locations_response locations_api list_locations puts locations_response rescue squareconnect apierror raise error encountered listing locations message end get location able process transaction location locations_response locations detect capabilities include credit_card_processing end location nil raise activation required visit https squareup com activate activate begin taking payments end puts location retrieving location ids every square merchant business consists one locations described every payment merchant processes associated one locations even online payments order process payment connect v2 need specify location taking payment locations location set capabilities order process credit cards want location credit_card_processing enabled square_connect library easy method obtaining business location ids list_locations method square_connect list_locations require square_connect access_token replace_with_your_access_token squareconnect configure config config access_token access_token end locations_api squareconnect locationsapi new begin locations_response locations_api list_locations puts locations_response rescue squareconnect apierror raise error encountered listing locations message end get location able process transaction location locations_response locations detect capabilities include credit_card_processing end location nil raise activation required visit https squareup com activate activate begin taking payments end puts location creating customer important application uses customer contact information sure information judiciously abuse customer contact information may result application disabled without notice save new customer business createcustomer endpoint valid customer object least one following name first last email address phone number company name also save following optional information physical address informational note customer reference associate customer entity system require square_connect require securerandom access_token replace_with_your_access_token customer_api squareconnect customersapi new reference_id securerandom uuid customer_request given_name amelia family_name earhart email_address amelia earhart example com address address_line_1 500 electric address_line_2 suite 600 locality new york administrative_district_level_1 postal_code 10003 country phone_number 1-555-555-0122 reference_id reference_id note customer begin customer_response customer_api create_customer access_token customer_request puts customer createcustomercard puts customer_response rescue squareconnect apierror raise error encountered creating customer message end customer customer_response customer creating customer important application uses customer contact information sure information judiciously abuse customer contact information may result application disabled without notice important application uses customer contact information sure information judiciously abuse customer contact information may result application disabled without notice important abuse customer contact information may result application disabled without notice save new customer business createcustomer endpoint valid customer object least one following createcustomer customer name first last email address phone number company name name first last email address phone number company name also save following optional information physical address informational note customer reference associate customer entity system physical address informational note customer reference associate customer entity system require square_connect require securerandom access_token replace_with_your_access_token customer_api squareconnect customersapi new reference_id securerandom uuid customer_request given_name amelia family_name earhart email_address amelia earhart example com address address_line_1 500 electric address_line_2 suite 600 locality new york administrative_district_level_1 postal_code 10003 country phone_number 1-555-555-0122 reference_id reference_id note customer begin customer_response customer_api create_customer access_token customer_request puts customer createcustomercard puts customer_response rescue squareconnect apierror raise error encountered creating customer message end customer customer_response customer creating customercard created customer need card nonce create customer card add card file sqpaymentform generate card nonce provide card nonce createcustomercard endpoint important card nonces expire 24 hours createcustomercard endpoint will return error attempt charge expired nonce nonce already used charge card require square_connect access_token replace_with_your_access_token customer_card_api squareconnect customercardapi new customer_card_request card_nonce card_nonce billing_address address_line_1 1455 market address_line_2 suite 600 locality san francisco administrative_district_level_1 postal_code 94103 country cardholder_name amelia earhart begin customer_card_response customer_card_api create_customer_card access_token customer customer_card_request puts customercard charge puts customer_card_response customer_card rescue squareconnect apierror raise error encountered creating customer card message end customer_card customer_card_response customer_card creating customercard created customer need card nonce create customer card add card file sqpaymentform generate card nonce provide card nonce createcustomercard endpoint sqpaymentform createcustomercard important card nonces expire 24 hours createcustomercard endpoint will return error attempt charge expired nonce nonce already used charge card important card nonces expire 24 hours createcustomercard endpoint will return error attempt charge expired nonce nonce already used charge card important card nonces expire 24 hours require square_connect access_token replace_with_your_access_token customer_card_api squareconnect customercardapi new customer_card_request card_nonce card_nonce billing_address address_line_1 1455 market address_line_2 suite 600 locality san francisco administrative_district_level_1 postal_code 94103 country cardholder_name amelia earhart begin customer_card_response customer_card_api create_customer_card access_token customer customer_card_request puts customercard charge puts customer_card_response customer_card rescue squareconnect apierror raise error encountered creating customer card message end customer_card customer_card_response customer_card charging customercard now generated card nonce sqpaymentform way retrieve business location ids charge customer card file charge card file like require square_connect require securerandom assume correct values assigned following variables location customer customer_card see code samples obtain access_token replace_with_your_access_token transaction_api squareconnect transactionapi new every payment process given business hae unique idempotency key unsure whether particular payment succeeded reattempt idempotency key without worrying double charging buyer idempotency_key securerandom uuid monetary amounts specified smallest unit applicable currency amount cents also hard-coded 1 useful amount_money amount 100 currency usd transaction_request customer_id customer customer_card_id customer_card amount_money amount_money idempotency_key idempotency_key sdk throws exception connect endpoint responds anything besides 200 success block catches exceptions occur request begin transaction_response transaction_api charge access_token location transaction_request rescue squareconnect apierror raise error encountered charging card message end puts transaction_response value transaction_response hash contains details processed transaction united states square also takes care automatically updating cards file might expired since first attached customer charging customercard now generated card nonce sqpaymentform way retrieve business location ids charge customer card file charge card file like sqpaymentform require square_connect require securerandom assume correct values assigned following variables location customer customer_card see code samples obtain access_token replace_with_your_access_token transaction_api squareconnect transactionapi new every payment process given business hae unique idempotency key unsure whether particular payment succeeded reattempt idempotency key without worrying double charging buyer idempotency_key securerandom uuid monetary amounts specified smallest unit applicable currency amount cents also hard-coded 1 useful amount_money amount 100 currency usd transaction_request customer_id customer customer_card_id customer_card amount_money amount_money idempotency_key idempotency_key sdk throws exception connect endpoint responds anything besides 200 success block catches exceptions occur request begin transaction_response transaction_api charge access_token location transaction_request rescue squareconnect apierror raise error encountered charging card message end puts transaction_response value transaction_response hash contains details processed transaction united states square also takes care automatically updating cards file might expired since first attached customer transaction_response hash trying full sample uses sqpaymentform rails available github see sample readme information running sample also code samples interacting api available languages want test charging cards without actually moving money configure sample communicate connect v2 sandbox endpoints information see using api sandbox trying full sample uses sqpaymentform rails available github see sample readme information running sample also code samples interacting api available languages sqpaymentform github readme code samples want test charging cards without actually moving money configure sample communicate connect v2 sandbox endpoints information see using api sandbox using api sandbox full code find code samples one copy paste snippet variables need replace access_token card_nonce require square_connect require securerandom access_token replace_with_your_access_token card_nonce card_nonce_from_payment_form squareconnect configure config config access_token access_token end locations_api squareconnect locationsapi new begin locations_response locations_api list_locations puts locations_response rescue squareconnect apierror raise error encountered listing locations message end get location able process transaction location locations_response locations find capabilities include credit_card_processing end location nil raise activation required visit https squareup com activateto activate begin taking payments end puts location customer_api squareconnect customersapi new reference_id securerandom uuid customer_request given_name amelia family_name earhart email_address amelia earhart example com address address_line_1 500 electric address_line_2 suite 600 locality new york administrative_district_level_1 postal_code 10003 country phone_number 1-555-555-0122 reference_id reference_id note customer begin customer_response customer_api create_customer customer_request puts customer createcustomercard puts customer_response customer rescue squareconnect apierror raise error encountered creating customer message end customer customer_response customer customer_card_request card_nonce card_nonce billing_address customer address to_hash cardholder_name amelia earhart begin customer_card_response customer_api create_customer_card customer customer_card_request puts customercard charge puts customer_card_response card rescue squareconnect apierror raise error encountered creating customer card message end customer_card customer_card_response card transactions_api squareconnect transactionsapi new idempotency_key securerandom uuid amount_money amount 100 currency usd transaction_request customer_id customer customer_card_id customer_card amount_money amount_money idempotency_key idempotency_key begin transaction_response transactions_api charge location transaction_request rescue squareconnect apierror raise error encountered charging card message end puts transaction_response full code find code samples one copy paste snippet variables need replace access_token card_nonce access_token card_nonce require square_connect require securerandom access_token replace_with_your_access_token card_nonce card_nonce_from_payment_form squareconnect configure config config access_token access_token end locations_api squareconnect locationsapi new begin locations_response locations_api list_locations puts locations_response rescue squareconnect apierror raise error encountered listing locations message end get location able process transaction location locations_response locations find capabilities include credit_card_processing end location nil raise activation required visit https squareup com activateto activate begin taking payments end puts location customer_api squareconnect customersapi new reference_id securerandom uuid customer_request given_name amelia family_name earhart email_address amelia earhart example com address address_line_1 500 electric address_line_2 suite 600 locality new york administrative_district_level_1 postal_code 10003 country phone_number 1-555-555-0122 reference_id reference_id note customer begin customer_response customer_api create_customer customer_request puts customer createcustomercard puts customer_response customer rescue squareconnect apierror raise error encountered creating customer message end customer customer_response customer customer_card_request card_nonce card_nonce billing_address customer address to_hash cardholder_name amelia earhart begin customer_card_response customer_api create_customer_card customer customer_card_request puts customercard charge puts customer_card_response card rescue squareconnect apierror raise error encountered creating customer card message end customer_card customer_card_response card transactions_api squareconnect transactionsapi new idempotency_key securerandom uuid amount_money amount 100 currency usd transaction_request customer_id customer customer_card_id customer_card amount_money amount_money idempotency_key idempotency_key begin transaction_response transactions_api charge location transaction_request rescue squareconnect apierror raise error encountered charging card message end puts transaction_response",tags:"",url:"/articles/processing-recurring-payments-ruby"},{title:"Register API for Android released (2016-05)",text:"Register API for Android released (2016-05) The Square Register API is now available register api android released 2016-05 square register api now available android like ios version lets app open square register app process in-person payments square hardware see register api overview overview register api works see using register api android learn add register api functionality android app see github repo sample android application uses register api square register api now available android like ios version lets app open square register app process in-person payments square hardware see register api overview overview register api works see using register api android learn add register api functionality android app see github repo sample android application uses register api see register api overview overview register api works register api overview see using register api android learn add register api functionality android app using register api android see github repo sample android application uses register api github repo",tags:"",url:"/articles/register-api-android-released-2016-05"},{title:"Register API for Android sample application released (2016-10)",text:"Register API for Android sample application released (2016-10) A new open-source sample application register api android sample application released 2016-10 new open-source sample application now available register api android sample app point-of-sale application bike shop uses register api android process in-person payments new application found github repo see register api overview overview register api works see using register api android learn add register api functionality android app new open-source sample application now available register api android sample app point-of-sale application bike shop uses register api android process in-person payments new application found github repo see register api overview overview register api works see using register api android learn add register api functionality android app new application found github repo github repo see register api overview overview register api works register api overview see using register api android learn add register api functionality android app using register api android",tags:"",url:"/articles/register-api-android-sample-app-released-2016-10"},{title:"Register API for Android v1.1 released (2016-09)",
text:"Register API for Android v1.1 released (2016-09) Version 1.1 of the Register API register api android v1 1 released 2016-09 version 1 1 register api now available android square register version 4 48 version 1 1 includes support split tender transactions transactions completed using multiple tender instruments support square prepaid gift card transactions part card tender type new card_on_file tender type allow charging previously-stored card instrument support linking customers transactions see chargerequest builder customerid information see changelog version 1 1 see register api overview overview register api works see using register api android learn add register api functionality android app see github repo sample android application uses register api version 1 1 register api now available android square register version 4 48 square register version 1 1 includes support split tender transactions transactions completed using multiple tender instruments support square prepaid gift card transactions part card tender type new card_on_file tender type allow charging previously-stored card instrument support linking customers transactions see chargerequest builder customerid support split tender transactions transactions completed using multiple tender instruments support square prepaid gift card transactions part card tender type new card_on_file tender type allow charging previously-stored card instrument support linking customers transactions see chargerequest builder customerid chargerequest builder customerid information see changelog version 1 1 see register api overview overview register api works see using register api android learn add register api functionality android app see github repo sample android application uses register api see changelog version 1 1 changelog see register api overview overview register api works register api overview see using register api android learn add register api functionality android app using register api android see github repo sample android application uses register api github repo",tags:"",url:"/articles/register-api-android-v1-1-released-2016-09"},{title:"Register API for iOS v1.1 released (2016-10)",text:"Register API for iOS v1.1 released (2016-10) Version 1.1 of the Register API register api ios v1 1 released 2016-10 version 1 1 register api now available ios square register version 4 50 version 1 1 includes support split tender transactions new cash tender type support cash transactions new tender type support tender transactions new square_gift_card tender type support square prepaid gift card transactions information see register api overview overview register api works see using register api ios learn add register api functionality ios app see squarepointofsalesdk-ios repository easiest solution add register api ios app version 1 1 register api now available ios square register version 4 50 square register version 1 1 includes support split tender transactions new cash tender type support cash transactions new tender type support tender transactions new square_gift_card tender type support square prepaid gift card transactions support split tender transactions split tender transactions new cash tender type support cash transactions cash new tender type support tender transactions new square_gift_card tender type support square prepaid gift card transactions square_gift_card information see register api overview overview register api works see using register api ios learn add register api functionality ios app see squarepointofsalesdk-ios repository easiest solution add register api ios app see register api overview overview register api works register api overview see using register api ios learn add register api functionality ios app using register api ios see squarepointofsalesdk-ios repository easiest solution add register api ios app squarepointofsalesdk-ios repository",tags:"",url:"/articles/register-api-ios-v1-1-released-2016-10"},{title:"Register API for iOS v1.2 released (2016-11)",text:"Register API for iOS v1.2 released (2016-11) Version 1.2 of the Register API register api ios v1 2 released 2016-11 version 1 2 register api now available ios square register version 4 53 version 1 2 includes support linking customers transactions using new customer_id request parameter new card_on_file tender type allow charging previously-stored card instrument learn card file square information see register api overview overview register api works see using register api ios learn add register api functionality ios app see squarepointofsalesdk-ios repository easiest solution add register api ios app version 1 2 register api now available ios square register version 4 53 square register version 1 2 includes support linking customers transactions using new customer_id request parameter new card_on_file tender type allow charging previously-stored card instrument learn card file square support linking customers transactions using new customer_id request parameter customer_id new card_on_file tender type allow charging previously-stored card instrument learn card file square card_on_file card file information see register api overview overview register api works see using register api ios learn add register api functionality ios app see squarepointofsalesdk-ios repository easiest solution add register api ios app see register api overview overview register api works register api overview see using register api ios learn add register api functionality ios app using register api ios see squarepointofsalesdk-ios repository easiest solution add register api ios app squarepointofsalesdk-ios repository",tags:"",url:"/articles/register-api-ios-v1-2-released-2016-11"},{title:"Register API Renamed to Point of Sale API (2017-05)",text:"Register API Renamed to Point of Sale API (2017-05) Register API for iOS register api renamed point sale api 2017-05 register api ios android now called point sale api changes part name change include following new squarepointofsalesdk-ios repository new point-of-sale-android-sdk repository updated android point sale api version v2 0 new maven cocoapods carthage projects information upgrade instructions please view blog post describing changes register api ios android now called point sale api changes part name change include following new squarepointofsalesdk-ios repository new point-of-sale-android-sdk repository updated android point sale api version v2 0 new maven cocoapods carthage projects new squarepointofsalesdk-ios repository squarepointofsalesdk-ios new point-of-sale-android-sdk repository point-of-sale-android-sdk updated android point sale api version v2 0 android point sale api new maven cocoapods carthage projects maven cocoapods carthage information upgrade instructions please view blog post describing changes blog post",tags:"",url:"/articles/register-api-renamed-point-of-sale-api-2017-05"},{title:"Saving customer information",text:"Version 2 of the Connect API provides the ability for a business to version 2 connect api provides ability business save information related ecommerce customers information falls two primary categories contact information cards file contact information cards file saving contact information important application uses customer contact information sure information judiciously abuse customer contact information may result application disabled without notice important application uses customer contact information sure information judiciously abuse customer contact information may result application disabled without notice important abuse customer contact information may result application disabled without notice save new customer business createcustomer endpoint valid customer object least one following createcustomer customer name first last email address phone number company name name first last email address phone number company name also save following optional information physical address informational note customer reference associate customer entity system physical address informational note customer reference associate customer entity system updatecustomer update information existing customer deletecustomer endpoint delete customer entirely delete customer also delete cards file associated customer updatecustomer deletecustomer saving cards file important link card file customer without customer express permission example include checkbox purchase flow unchecked default customer check specify wish save card information future purchases linking cards file without obtaining customer permission may result application disabled without notice important link card file customer without customer express permission example include checkbox purchase flow unchecked default customer check specify wish save card information future purchases linking cards file without obtaining customer permission may result application disabled without notice important linking cards file without obtaining customer permission may result application disabled without notice process saving card file follows generate card nonce sqpaymentform just like charge credit card send card nonce server server createcustomer endpoint create customer entity want link credit card unless entity already exists provide card nonce createcustomercard endpoint link credit card customer generate card nonce sqpaymentform just like charge credit card send card nonce server sqpaymentform server createcustomer endpoint create customer entity want link credit card unless entity already exists createcustomer customer provide card nonce createcustomercard endpoint link credit card customer createcustomercard retrievecustomer endpoint see cards file particular customer non-confidential card information returned retrievecustomer later want remove card file customer deletecustomercard endpoint remove deletecustomercard charging card file charge card file charge endpoint instead providing value card_nonce parameter like usually provide value customer_card_id parameter value card file want charge charge card_nonce customer_card_id charge card file also supply customer card belongs customer_id parameter customer_id",tags:"",url:"/articles/saving-customer-information"},{title:"Square API Release Notes (2017-06-23)",text:"Square API Release Notes (2017-06-23) Release Summary As part of a continuing effort to square api release notes 2017-06-23 release summary part continuing effort improve experience using square apis updated examples supported api reference site include languages provide sdks new sdks available github java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly release summary part continuing effort improve experience using square apis updated examples supported api reference site include languages provide sdks api reference new sdks available github java python ruby php java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly swagger pipeline",tags:"",url:"/articles/square-api-release-notes-2017-06-23"},{title:"Square API Release Notes (2017-08-22)",text:"Square API Release Notes (2017-08-22) Release Summary As part of our work to close square api release notes 2017-08-22 release summary part work close gaps connect v1 connect v2 apis v2 list locations endpoint now returns fields previously available v1 list locations endpoint enable developers migrate solutions v1 locations api locations api v2 addition location list locations endpoint now returns following information set square dashboard business_name business name location country country operation location currency transaction currency location language_code language configured location merchant_id internal square merchant owns location name nickname location phone_number phone number location release summary part work close gaps connect v1 connect v2 apis v2 list locations endpoint now returns fields previously available v1 list locations endpoint enable developers migrate solutions v1 locations api locations api v2 addition location list locations endpoint now returns following information set square dashboard business_name business name location country country operation location currency transaction currency location language_code language configured location merchant_id internal square merchant owns location name nickname location phone_number phone number location business_name business name location business_name country country operation location country currency transaction currency location currency language_code language configured location language_code merchant_id internal square merchant owns location merchant_id name nickname location name phone_number phone number location phone_number",tags:"",url:"/articles/square-api-release-notes-2017-08-22"},{title:"Square API Release Notes (2017-09-13)",text:"Square API Release Notes (2017-09-13) Release Summary: Orders API, Transaction API Orders API (v2) square api release notes 2017-09-13 release summary orders api transaction api orders api v2 part work close gaps connect v1 connect v2 apis v2 list locations endpoint now returns fields previously available v1 list locations endpoint enable developers migrate solutions v1 locations api release summary orders api transaction api orders api v2 part work close gaps connect v1 connect v2 apis v2 list locations endpoint now returns fields previously available v1 list locations endpoint enable developers migrate solutions v1 locations api new features orders api createorder endpoint creates itemized order referenced messages charge endpoint batchretrieveorders retrieves order objects referenced one transactions based provided order_id note point batchretrieveorders returns information paid orders made square ecommerce apis transactions checkout transaction api transaction api now supports following request fields order_id order object associated transaction new features orders api createorder endpoint creates itemized order referenced messages charge endpoint batchretrieveorders retrieves order objects referenced one transactions based provided order_id note point batchretrieveorders returns information paid orders made square ecommerce apis transactions checkout createorder endpoint creates itemized order referenced messages charge endpoint createorder batchretrieveorders retrieves order objects referenced one transactions based provided order_id note point batchretrieveorders returns information paid orders made square ecommerce apis transactions checkout batchretrieveorders order_id note batchretrieveorders transaction api transaction api now supports following request fields order_id order object associated transaction order_id order object associated transaction order_id",tags:"",url:"/articles/square-api-release-notes-2017-09-13"},{title:"Square API Release Notes (2017-09-27)",text:"Square API Release Notes (2017-09-27) Release Summary: Checkout API, Transactions API Web Apple Pay square api release notes 2017-09-27 release summary checkout api transactions api web apple pay starting 2017-09-27 checkout api square payment form now accept web apple pay payments customers using safari browser web apple pay cleaner way accept mobile web payments iphone users consumers increasingly making purchases mobile devices want make easy seamless possible provide optimized checkout experience checkout api support web apple pay built checkout ui automatically enabled anyone using checkout api web apple pay currently supported sandbox square payment form sqpaymentform transaction api now supports following request fields sqpaymentform now looks placeholders associated web apple pay placeholders set web apple pay will trigger web apple pay button will render site domain registered apple register domain visit application dashboard click apple pay tab application learn integrated web apple pay see payment form setup guide example code github java node js php python ruby release summary checkout api transactions api web apple pay starting 2017-09-27 checkout api square payment form now accept web apple pay payments customers using safari browser web apple pay cleaner way accept mobile web payments iphone users consumers increasingly making purchases mobile devices want make easy seamless possible provide optimized checkout experience checkout api support web apple pay built checkout ui automatically enabled anyone using checkout api web apple pay currently supported sandbox support web apple pay built checkout ui automatically enabled anyone using checkout api checkout api web apple pay currently supported sandbox square payment form sqpaymentform transaction api now supports following request fields sqpaymentform now looks placeholders associated web apple pay placeholders set web apple pay will trigger web apple pay button will render site domain registered apple register domain visit application dashboard click apple pay tab application learn integrated web apple pay see payment form setup guide example code github java node js php python ruby sqpaymentform now looks placeholders associated web apple pay placeholders set web apple pay will trigger sqpaymentform now looks placeholders associated web apple pay placeholders set web apple pay will trigger web apple pay button will render site domain registered apple register domain visit application dashboard click apple pay tab application web apple pay button will render site domain registered apple register domain visit application dashboard click apple pay tab application application dashboard apple pay learn integrated web apple pay see payment form setup guide example code github java node js php python ruby learn integrated web apple pay see payment form setup guide example code github payment form setup guide java node js php python ruby java node js php python ruby",tags:"",url:"/articles/square-api-release-notes-2017-09-27"},{title:"Square API Release Notes (2017-10-30)",text:"Square API Release Notes (2017-10-30) Release Summary: Square Payment Form Starting 2017-10-18 Square\u2019s Payment square api release notes 2017-10-30 release summary square payment form starting 2017-10-18 square payment form will accept mastercard masterpass payments masterpass free digital wallet designed make online shopping easier storing payment shipping information one convenient location square payment form sqpaymentform sqpaymentform now looks html placeholders associated masterpass html placeholders exist masterpass enabled masterpass button will display part square payment form learn integrate masterpass see configuring masterpass example code github java node js php python ruby release summary square payment form starting 2017-10-18 square payment form will accept mastercard masterpass payments masterpass free digital wallet designed make online shopping easier storing payment shipping information one convenient location square payment form sqpaymentform sqpaymentform now looks html placeholders associated masterpass html placeholders exist masterpass enabled masterpass button will display part square payment form learn integrate masterpass see configuring masterpass example code github java node js php python ruby sqpaymentform now looks html placeholders associated masterpass html placeholders exist masterpass enabled masterpass button will display part square payment form sqpaymentform now looks html placeholders associated masterpass html placeholders exist masterpass enabled masterpass button will display part square payment form learn integrate masterpass see configuring masterpass example code github java node js php python ruby learn integrate masterpass see configuring masterpass example code github configuring masterpass java node js php python ruby java node js php python ruby",tags:"",url:"/articles/square-api-release-notes-2017-10-30"},{title:"Square API Release Notes (2017-11-02)",text:"Square API Release Notes (2017-11-02) Release Summary: Transaction API, Reporting API Developers and platform square api release notes 2017-11-02 release summary transaction api reporting api developers platform building square payment form checkout api now monetize portion transactions first step bringing economics empowerment just sellers also developers release accompanied new sdk 2 5 release supported languages release summary transaction api reporting api developers platform building square payment form checkout api now monetize portion transactions first step bringing economics empowerment just sellers also developers release accompanied new sdk 2 5 release supported languages new features transaction api transaction api now supports following request objects additional_recipients represents additional recipient merchant receiving portion tender reporting api new reporting api includes two endpoints pull information distributions received additional recipient additionalrecipientreceivables returns list receivables across source locations representing monies credited given location another square account using additional_recipients field transaction additionalrecipientreceivablesrefunds returns list refunded transactions across source locations related monies credited given location another square account using additional_recipients field transaction new features transaction api transaction api now supports following request objects additional_recipients represents additional recipient merchant receiving portion tender additional_recipients represents additional recipient merchant receiving portion tender reporting api new reporting api includes two endpoints pull information distributions received additional recipient additionalrecipientreceivables returns list receivables across source locations representing monies credited given location another square account using additional_recipients field transaction additionalrecipientreceivablesrefunds returns list refunded transactions across source locations related monies credited given location another square account using additional_recipients field transaction additionalrecipientreceivables returns list receivables across source locations representing monies credited given location another square account using additional_recipients field transaction additionalrecipientreceivables returns list receivables across source locations representing monies credited given location another square account using additional_recipients field transaction additional_recipients additionalrecipientreceivablesrefunds returns list refunded transactions across source locations related monies credited given location another square account using additional_recipients field transaction additionalrecipientreceivablesrefunds returns list refunded transactions across source locations related monies credited given location another square account using additional_recipients field transaction additional_recipients",tags:"",url:"/articles/square-api-release-notes-2017-11-02"},{title:"Square API Release Notes (2017-11-10)",text:"Square API Release Notes (2017-11-10) Release Summary: Catalog API, Locations API, Transactions API ordinal square api release notes 2017-11-10 release summary catalog api locations api transactions api ordinal added catalogitemvariation website_url added location tip_money added tender changed object_type placeholder_type lists single values v1pagecell mirror data model release summary catalog api locations api transactions api ordinal added catalogitemvariation website_url added location tip_money added tender changed object_type placeholder_type lists single values v1pagecell mirror data model ordinal added catalogitemvariation ordinal catalogitemvariation website_url added location website_url location tip_money added tender tip_money tender changed object_type placeholder_type lists single values v1pagecell mirror data model object_type placeholder_type v1pagecell",tags:"",url:"/articles/square-api-release-notes-2017-11-10"},{title:"The Square Data Model",text:"The Square Data Model This article describes the entities that make up Square's square data model article describes entities make square internal representation merchant business article describes entities make square internal representation merchant business business entity merchant signs square new business entity created square system business entity contains merchant locations every business least one location entity business multiple locations one typically corresponds different brick-and-mortar store location distinct transactions item library employees every business least one employee entity business first employee business owner possible permissions related business roles employees besides business owner role assigned indicates permissions ability process refunds square point sale timecards timecards track duration employee shifts employees clock square point sale app via connect api business entity merchant signs square new business entity created square system business business entity contains merchant locations every business least one location entity business multiple locations one typically corresponds different brick-and-mortar store location distinct transactions item library employees every business least one employee entity business first employee business owner possible permissions related business roles employees besides business owner role assigned indicates permissions ability process refunds square point sale timecards timecards track duration employee shifts employees clock square point sale app via connect api locations every business least one location entity business multiple locations one typically corresponds different brick-and-mortar store location distinct transactions item library locations location distinct transactions item library employees every business least one employee entity business first employee business owner possible permissions related business employees owner roles employees besides business owner role assigned indicates permissions ability process refunds square point sale roles timecards timecards track duration employee shifts employees clock square point sale app via connect api timecards location entities business locations distinct transactions item library transactions items never belong directly business always belong one business locations location transactions include payments processed square refunds processed square orders received location online store deposits made square location linked bank account also called settlements location item library includes items available sale location current inventory count discounts taxes applied sales location location entities business locations distinct transactions item library transactions items never belong directly business always belong one business locations location transactions include payments processed square refunds processed square orders received location online store deposits made square location linked bank account also called settlements payments processed square refunds processed square orders received location online store deposits made square location linked bank account also called settlements settlements location item library includes items available sale location current inventory count discounts taxes applied sales location items available sale location current inventory count discounts taxes applied sales location working entities connect api provides endpoints interact entities described see faq summary entities currently supported version 2 api entities still require v1 endpoints working entities connect api provides endpoints interact entities described see faq summary entities currently supported version 2 api entities still require v1 endpoints faq",tags:"",url:"/articles/square-business-structure"},{title:"Checkout API Setup Guide",
text:"Checkout API Setup Guide This document provides guidance for integrating with Square Checkout. checkout api setup guide document provides guidance integrating square checkout information square checkout works please see square checkout overview document provides guidance integrating square checkout information square checkout works please see square checkout overview square checkout overview table contents prerequisites assumptions process overview working example step 1 configure ecommerce site square step 2 create store config file site step 3 add code checkout workflow package order information checkout send itemized order square checkout endpoint redirect customer provided checkout url optional add code receive verify transaction results optional split transactions additional recipients additional resources table contents prerequisites assumptions process overview working example step 1 configure ecommerce site square step 2 create store config file site step 3 add code checkout workflow package order information checkout send itemized order square checkout endpoint redirect customer provided checkout url optional add code receive verify transaction results optional split transactions additional recipients additional resources prerequisites prerequisites assumptions assumptions process overview process overview working example working example step 1 configure ecommerce site square step 1 configure ecommerce site square step 2 create store config file site step 2 create store config file site step 3 add code checkout workflow package order information checkout send itemized order square checkout endpoint redirect customer provided checkout url step 3 add code checkout workflow package order information checkout send itemized order square checkout endpoint redirect customer provided checkout url package order information checkout package order information checkout send itemized order square checkout endpoint send itemized order square checkout endpoint redirect customer provided checkout url redirect customer provided checkout url optional add code receive verify transaction results optional add code receive verify transaction results optional split transactions additional recipients optional split transactions additional recipients additional resources additional resources prerequisites square checkout following true square account create square account minutes already one ecommerce site sell products services line square terms service ecommerce site hosted systems support dynamic pages server-side processing php ruby asp java pages hosting solutions support html pages square checkout time plan square checkout ecommerce site enabled payment processing account sure activate account continuing prerequisites square checkout following true square account create square account minutes already one ecommerce site sell products services line square terms service ecommerce site hosted systems support dynamic pages server-side processing php ruby asp java pages hosting solutions support html pages square checkout time square account create square account minutes already one create square account ecommerce site sell products services line square terms service square terms service ecommerce site hosted systems support dynamic pages server-side processing php ruby asp java pages hosting solutions support html pages square checkout time plan square checkout ecommerce site enabled payment processing account sure activate account continuing activate account assumptions guide makes following assumptions read square checkout overview how-to guide cover general functionality service familiar http json new json recommend reading json getting started guide codular continuing assumptions guide makes following assumptions read square checkout overview how-to guide cover general functionality service familiar http json new json recommend reading json getting started guide codular continuing read square checkout overview how-to guide cover general functionality service square checkout overview familiar http json new json recommend reading json getting started guide codular continuing json getting started guide process overview square checkout simplifies online payments merchant sites handling payment ui payment processing guide will walk following steps configuring ecommerce site square creating store config file site set api configuration information reuse multiple places adding code checkout workflow packages order information checkout sends order square checkout endpoint redirects customer provided checkout url adding code receive verify transaction results 01 23 2017 square checkout dynamically calculate shipping costs amounts included order line items discussed guide shopping cart solution provide totals will need add code perform calculations process overview square checkout simplifies online payments merchant sites handling payment ui payment processing guide will walk following steps configuring ecommerce site square creating store config file site set api configuration information reuse multiple places adding code checkout workflow packages order information checkout sends order square checkout endpoint redirects customer provided checkout url adding code receive verify transaction results configuring ecommerce site square creating store config file site set api configuration information reuse multiple places adding code checkout workflow packages order information checkout sends order square checkout endpoint redirects customer provided checkout url packages order information checkout sends order square checkout endpoint redirects customer provided checkout url packages order information checkout sends order square checkout endpoint redirects customer provided checkout url adding code receive verify transaction results 01 23 2017 square checkout dynamically calculate shipping costs amounts included order line items discussed guide shopping cart solution provide totals will need add code perform calculations 01 23 2017 square checkout dynamically calculate shipping costs amounts included order line items discussed guide shopping cart solution provide totals will need add code perform calculations working example order provide concrete instruction guide based hypothetical site following characteristics square checkout used single merchant solution words merchant site square account used process payments associated person site will personal access token authorization merchant site uses php php selected example code common web language relatively approachable new developers square checkout language agnostic setup steps square checkout comparable across languages merchant site installed square connect v2 php sdk github packagist installing sdk optional long package receive json messages square checkout process payments php examples curl helper functions curl checkout page installing sdk makes things easier merchant site supports https https required square checkout strongly recommend sites encrypted minimize risk man-in-the-middle attacks get https certificate hosting provider free nonprofit encrypt first time working https may want read https sections square apis getting started guide continuing situation different working example still able follow along steps guide example code written avoid php-specific functionality much possible may need make slight changes handle authorization oauth create json messages working example order provide concrete instruction guide based hypothetical site following characteristics square checkout used single merchant solution words merchant site square account used process payments associated person site will personal access token authorization merchant site uses php php selected example code common web language relatively approachable new developers square checkout language agnostic setup steps square checkout comparable across languages merchant site installed square connect v2 php sdk github packagist installing sdk optional long package receive json messages square checkout process payments php examples curl helper functions curl checkout page installing sdk makes things easier merchant site supports https https required square checkout strongly recommend sites encrypted minimize risk man-in-the-middle attacks get https certificate hosting provider free nonprofit encrypt first time working https may want read https sections square apis getting started guide continuing square checkout used single merchant solution words merchant site square account used process payments associated person site will personal access token authorization merchant site uses php php selected example code common web language relatively approachable new developers square checkout language agnostic setup steps square checkout comparable across languages merchant site installed square connect v2 php sdk github packagist installing sdk optional long package receive json messages square checkout process payments php examples curl helper functions curl checkout page installing sdk makes things easier github packagist curl helper functions curl checkout page merchant site supports https https required square checkout strongly recommend sites encrypted minimize risk man-in-the-middle attacks get https certificate hosting provider free nonprofit encrypt first time working https may want read https sections square apis getting started guide continuing man-in-the-middle attacks encrypt square apis getting started guide situation different working example still able follow along steps guide example code written avoid php-specific functionality much possible may need make slight changes handle authorization oauth create json messages oauth step 1 configure ecommerce site square go applicaton dashboard sign square account already application want square checkout note square-assigned personal access token credentials tab application settings otherwise click new application will authentication token application send requests square checkout enter name application store checkout click create app note square-assigned personal access token credentials tab new application settings go account settings locations section square dashboard will need associate transactions ecommerce site one store locations one existing locations create new one already location want online store note location nickname already location want online store click create location give location nickname mysite com website configure much little information like square checkout will location nickname step 1 configure ecommerce site square go applicaton dashboard sign square account already application want square checkout note square-assigned personal access token credentials tab application settings otherwise click new application will authentication token application send requests square checkout enter name application store checkout click create app note square-assigned personal access token credentials tab new application settings go account settings locations section square dashboard will need associate transactions ecommerce site one store locations one existing locations create new one already location want online store note location nickname already location want online store click create location give location nickname mysite com website configure much little information like square checkout will location nickname go applicaton dashboard sign square account applicaton dashboard already application want square checkout note square-assigned personal access token credentials tab application settings otherwise click new application will authentication token application send requests square checkout enter name application store checkout click create app note square-assigned personal access token credentials tab new application settings click new application will authentication token application send requests square checkout enter name application store checkout click create app note square-assigned personal access token credentials tab new application settings click new application will authentication token application send requests square checkout enter name application store checkout click create app note square-assigned personal access token credentials tab new application settings go account settings locations section square dashboard will need associate transactions ecommerce site one store locations one existing locations create new one already location want online store note location nickname already location want online store click create location give location nickname mysite com website configure much little information like square checkout will location nickname account settings locations already location want online store note location nickname already location want online store click create location give location nickname mysite com website configure much little information like square checkout will location nickname already location want online store note location nickname already location want online store click create location give location nickname mysite com website configure much little information like square checkout will location nickname step 2 create store config file site recommend creating store configuration file handle api client configuration initialization reused time need create api client 1 copy example-store-config php connect-examples v2 php_checkout tempates directory github site store-config php 2 update template code path square connect api include square connect api resources require_once local path sdk squareconnect autoload php 3 update template code personal access token location name api initialization configure online store information globals access_token access token globals store_name store name square dashboard globals location_id set moment globals api_client_set false store config file sets global configuration information like authorization token includes helper function will handle api client initialization location lookup step 2 create store config file site recommend creating store configuration file handle api client configuration initialization reused time need create api client 1 copy example-store-config php connect-examples v2 php_checkout tempates directory github site store-config php example-store-config php connect-examples v2 php_checkout tempates store-config php 2 update template code path square connect api include square connect api resources require_once local path sdk squareconnect autoload php 3 update template code personal access token location name api initialization configure online store information globals access_token access token globals store_name store name square dashboard globals location_id set moment globals api_client_set false store config file sets global configuration information like authorization token includes helper function will handle api client initialization location lookup step 3 add code checkout workflow hand payment processing square checkout need add code checkout workflow packages json body sends square checkout performs customer redirect based result recommend creating new handoff page avoid potential conflicts shopping cart solution 1 copy example-checkout-handoff php site square-checkout-handoff php 2 update example code path square connect api store config file include square connect api resources store config helper functions require_once library webserver sdk squareconnect autoload php require_once local path store-config php also recommend creating following helper functions simplify integration square checkout compartmentalize non-checkout code needed work shopping cart solution verify transactions getorderasarray packages order associative array json conversion getshippingcost fetches calculates total shipping cost order used packaging order information savecheckoutid saves square checkout order metadata passing order checkout required verification verifytransaction encapsulates logic used confirm square checkout transaction successful verify authenticity information passed back getcheckoutid fetches square checkout saved previously used verification getordertotal fetches order total calculated merchant site saved order used verification templates functions available example-helper-func php templates 1 copy example-helper-func php site sc-helper-func php 2 update example code square-checkout-handoff php path new helper file include square connect api resources store config helper functions require_once local path sc-helper-func php function templates helper file take order information currorder parameter currorder whatever type makes sense shopping cart solution example need query database get order information may want pass string representing order number shopping cart pass order information workflow object may want pass entire object pass order information workflow global session variable may want get rid parameter just session variable directly function package order information checkout three core sections square checkout message general order information itemized list items pre-populated customer information details create checkout message will depend shopping cart manages data checkout suggest using array structure information automatically converted json checkout api general order information json block redirect_url url confirmation page idempotency_key unique string transaction ask_for_shipping_address true false merchant_support_email support email address example array array redirect_url https mysite com confirm-order php idempotency_key mystore58826aa67ce6e ask_for_shipping_address true merchant_support_email support mysite com order items json block order reference_id store order line_items list item order individual line item name item name quantity item quantity base_price_money amount item cost base monetary unit currency currency used optional section discounts discounts name item_discount name amount_money amount item_discount amount currency item_discount currency used optional section taxes taxes name item_tax name percentage item_tax percentage type item_tax type example array array order array reference_id mystore123456 line_items array list item order individual line item array name lamy 2000 fountain pen black amber fine limited edition quantity 1 base_price_money array amount 59000 currency usd discounts array name nice seller discounts amount_money array amount 1000 currency usd taxes array name german export tax percentage 10 type additive array name lamy steel nib black broad quantity 2 base_price_money array amount 1300 currency usd discounts array name nice seller discounts 2 amount_money array amount 1000 currency usd taxes currently square checkout dynamically calculate taxes wish collect taxes order will need calculate totals nearest base currency unit cents usd add order tax square supports applying taxes line item order level also support two methods applying taxes line item order inclusive tax already included line item price order total example 1 00 item 10 inclusive tax pre-tax cost 0 91 91 cents 0 09 9 cents tax total cost 1 buyer additive tax amount added top line item price order subtotal example 1 00 item 10 additive tax total cost buyer 1 10 example array order array reference_id mystore123456 line_items array list item order individual line item array taxes array name alcohol tax percentage 10 0 type inclusive array name shipping quantity 1 base_price_money array amount 1000 currency usd order level tax will applied products order taxes array name sales tax percentage 10 0 type additive discounts discounts specified dollar amounts percentages applied line item order level checkout ui line item discounts appear next relevant line item order level discounts appear line items negative price end item list order details order-level discounts distributed across line items distributed across line items purposes calculations array order array reference_id mystore123456 line_items array list item order individual line item array discounts array array name custom-discount-1 percentage 7 25 array name custom-discount-2 amount_money array amount 1000 currency usd array name shipping quantity 1 base_price_money array amount 1000 currency usd shipping currently square checkout dynamically calculate shipping costs shipping fees included order line item quantity 1 aware shipping presented line item order level taxes discounts will applied shipping costs wish collect shipping fees order will need calculate appropriate amount discounts taxes mind example shipping cost 5 also 9 sales tax applied order need charge 4 59 shipping end correct total 4 59 9 0 41 tax shipping 4 59 0 41 5 00 total shipping cost look something like array order array reference_id mystore123456 line_items array list item order individual line item array name shipping quantity 1 base_price_money array amount 459 currency usd customer information asking checkout record shipping information transaction recommend pre-populating customer shipping data particularly already collected information earlier workflow site maintains customer profiles populate fields customer will forced re-enter square checkout page processing payment json block pre_populate_buyer_email customer contact information email pre_populate_shipping_address address_line_1 shipping address line 1 address_line_2 shipping address line 2 locality shipping city township etc administrative_district_level_1 shipping state province etc postal_code shipping postal code country shipping country first_name customer first name last_name customer last name example array array pre_populate_buyer_email imtotallynotbatman example com pre_populate_shipping_address array address_line_1 123 street address_line_2 42 locality gotham administrative_district_level_1 postal_code 60035 country first_name bruce last_name wayne send itemized order square checkout endpoint send order information square checkout need initialize squareconnect api client create new checkoutapi object call createcheckout client example config function create square checkout api client needed initapiclient create new api object send order information square checkout checkoutclient new squareconnect api checkoutapi globals api_client try send order array square checkout apiresponse checkoutclient createcheckout globals location_id orderarray store configuration file comes handy notice initapiclient call beginning function part store configuration template simplifies api client creation will check see master client object squareconnect apiclient already exists create configure look save location store name set global configuration settings create orderarray parameter 1 update getorderasarray function sc-helper-func php code needed pull order information shopping cart solution right format 2 update getorderasarray call square-checkout-handoff php valid parameters generating orderarray helper function repackage order information array orderarray getorderasarray order object cart workflow redirect customer provided checkout url send validly formatted order square checkout will send back two key pieces information checkout checkout internal checkout object associated transaction checkout checkout_page_url url send customer complete payment complete handoff will need parse elements response save checkoutid order information system used verify transaction payment processing redirect customer browser square checkout example try send order array square checkout apiresponse checkoutclient createcheckout globals location_id orderarray grab redirect url checkout sent back checkouturl apiresponse checkout checkout_page_url checkoutid apiresponse checkout helper function save checkoutid used confirm transaction payment processing savecheckoutid orderarray order reference_id checkoutid catch exception echo squareconnect configuration object threw exception calling checkoutapi createcheckout getmessage php_eol exit redirect customer square checkout header location checkouturl step 3 add code checkout workflow hand payment processing square checkout need add code checkout workflow packages json body sends square checkout performs customer redirect based result recommend creating new handoff page avoid potential conflicts shopping cart solution 1 copy example-checkout-handoff php site square-checkout-handoff php example-checkout-handoff php square-checkout-handoff php 2 update example code path square connect api store config file include square connect api resources store config helper functions require_once library webserver sdk squareconnect autoload php require_once local path store-config php also recommend creating following helper functions simplify integration square checkout compartmentalize non-checkout code needed work shopping cart solution verify transactions getorderasarray packages order associative array json conversion getshippingcost fetches calculates total shipping cost order used packaging order information savecheckoutid saves square checkout order metadata passing order checkout required verification verifytransaction encapsulates logic used confirm square checkout transaction successful verify authenticity information passed back getcheckoutid fetches square checkout saved previously used verification getordertotal fetches order total calculated merchant site saved order used verification getorderasarray packages order associative array json conversion getorderasarray getshippingcost fetches calculates total shipping cost order used packaging order information getshippingcost savecheckoutid saves square checkout order metadata passing order checkout required verification savecheckoutid verifytransaction encapsulates logic used confirm square checkout transaction successful verify authenticity information passed back verifytransaction getcheckoutid fetches square checkout saved previously used verification getcheckoutid getordertotal fetches order total calculated merchant site saved order used verification getordertotal templates functions available example-helper-func php templates example-helper-func php 1 copy example-helper-func php site sc-helper-func php example-helper-func php 2 update example code square-checkout-handoff php path new helper file square-checkout-handoff php include square connect api resources store config helper functions require_once local path sc-helper-func php function templates helper file take order information currorder parameter currorder whatever type makes sense shopping cart solution example currorder currorder need query database get order information may want pass string representing order number shopping cart pass order information workflow object may want pass entire object pass order information workflow global session variable may want get rid parameter just session variable directly function need query database get order information may want pass string representing order number shopping cart pass order information workflow object may want pass entire object pass order information workflow global session variable may want get rid parameter just session variable directly function package order information checkout three core sections square checkout message general order information itemized list items pre-populated customer information general order information itemized list items pre-populated customer information details create checkout message will depend shopping cart manages data checkout suggest using array structure information automatically converted json checkout api general order information json block redirect_url url confirmation page idempotency_key unique string transaction ask_for_shipping_address true false merchant_support_email support email address example array array redirect_url https mysite com confirm-order php idempotency_key mystore58826aa67ce6e ask_for_shipping_address true merchant_support_email support mysite com order items json block order reference_id store order line_items list item order individual line item name item name quantity item quantity base_price_money amount item cost base monetary unit currency currency used optional section discounts discounts name item_discount name amount_money amount item_discount amount currency item_discount currency used optional section taxes taxes name item_tax name percentage item_tax percentage type item_tax type example array array order array reference_id mystore123456 line_items array list item order individual line item array name lamy 2000 fountain pen black amber fine limited edition quantity 1 base_price_money array amount 59000 currency usd discounts array name nice seller discounts amount_money array amount 1000 currency usd taxes array name german export tax percentage 10 type additive array name lamy steel nib black broad quantity 2 base_price_money array amount 1300 currency usd discounts array name nice seller discounts 2 amount_money array amount 1000 currency usd taxes currently square checkout dynamically calculate taxes wish collect taxes order will need calculate totals nearest base currency unit cents usd add order tax square supports applying taxes line item order level also support two methods applying taxes line item order methods inclusive tax already included line item price order total example 1 00 item 10 inclusive tax pre-tax cost 0 91 91 cents 0 09 9 cents tax total cost 1 buyer additive tax amount added top line item price order subtotal example 1 00 item 10 additive tax total cost buyer 1 10 inclusive tax already included line item price order total example 1 00 item 10 inclusive tax pre-tax cost 0 91 91 cents 0 09 9 cents tax total cost 1 buyer additive tax amount added top line item price order subtotal example 1 00 item 10 additive tax total cost buyer 1 10 example array order array reference_id mystore123456 line_items array list item order individual line item array taxes array name alcohol tax percentage 10 0 type inclusive array name shipping quantity 1 base_price_money array amount 1000 currency usd order level tax will applied products order taxes array name sales tax percentage 10 0 type additive discounts discounts specified dollar amounts percentages applied line item order level checkout ui line item discounts appear next relevant line item order level discounts appear line items negative price end item list order details order-level discounts distributed across line items distributed across line items purposes calculations order details distributed across line items array order array reference_id mystore123456 line_items array list item order individual line item array discounts array array name custom-discount-1 percentage 7 25 array name custom-discount-2 amount_money array amount 1000 currency usd array name shipping quantity 1 base_price_money array amount 1000 currency usd shipping currently square checkout dynamically calculate shipping costs shipping fees included order line item quantity 1 aware shipping presented line item order level taxes discounts will applied shipping costs wish collect shipping fees order will need calculate appropriate amount discounts taxes mind example shipping cost 5 also 9 sales tax applied order need charge 4 59 shipping end correct total 4 59 9 0 41 tax shipping 4 59 0 41 5 00 total shipping cost look something like array order array reference_id mystore123456 line_items array list item order individual line item array name shipping quantity 1 base_price_money array amount 459 currency usd customer information asking checkout record shipping information transaction recommend pre-populating customer shipping data particularly already collected information earlier workflow site maintains customer profiles populate fields customer will forced re-enter square checkout page processing payment json block pre_populate_buyer_email customer contact information email pre_populate_shipping_address address_line_1 shipping address line 1 address_line_2 shipping address line 2 locality shipping city township etc administrative_district_level_1 shipping state province etc postal_code shipping postal code country shipping country first_name customer first name last_name customer last name example array array pre_populate_buyer_email imtotallynotbatman example com pre_populate_shipping_address array address_line_1 123 street address_line_2 42 locality gotham administrative_district_level_1 postal_code 60035 country first_name bruce last_name wayne send itemized order square checkout endpoint send order information square checkout need initialize squareconnect api client create new checkoutapi object call createcheckout client initialize squareconnect api client squareconnect create new checkoutapi object checkoutapi call createcheckout client createcheckout example config function create square checkout api client needed initapiclient create new api object send order information square checkout checkoutclient new squareconnect api checkoutapi globals api_client try send order array square checkout apiresponse checkoutclient createcheckout globals location_id orderarray store configuration file comes handy notice initapiclient call beginning function part store configuration template simplifies api client creation will check see master client object squareconnect apiclient already exists create configure look save location store name set global configuration settings initapiclient squareconnect apiclient create orderarray parameter 1 update getorderasarray function sc-helper-func php code needed pull order information shopping cart solution right format getorderasarray sc-helper-func php 2 update getorderasarray call square-checkout-handoff php valid parameters generating orderarray getorderasarray square-checkout-handoff php orderarray helper function repackage order information array orderarray getorderasarray order object cart workflow redirect customer provided checkout url send validly formatted order square checkout will send back two key pieces information checkout checkout internal checkout object associated transaction checkout checkout_page_url url send customer complete payment checkout checkout internal checkout object associated transaction checkout checkout checkout_page_url url send customer complete payment checkout checkout_page_url complete handoff will need parse elements response save checkoutid order information system used verify transaction payment processing redirect customer browser square checkout example checkoutid try send order array square checkout apiresponse checkoutclient createcheckout globals location_id orderarray grab redirect url checkout sent back checkouturl apiresponse checkout checkout_page_url checkoutid apiresponse checkout helper function save checkoutid used confirm transaction payment processing savecheckoutid orderarray order reference_id checkoutid catch exception echo squareconnect configuration object threw exception calling checkoutapi createcheckout getmessage php_eol exit redirect customer square checkout header location checkouturl optional split transactions additional recipients createcheckout endpoint supports multi-party transactions additional_recipients field learn splitting transactions multi-party transactions see multi-party transactions overview multi-party transactions setup json block additional_recipients location_id recipient_location_id description description amount_money amount split amount base monetary unit currency currency used example array array additional_recipients array array location_id recipientlocation description charity donation wildfire recovery amount_money array amount 200 currency usd optional split transactions additional recipients createcheckout endpoint supports multi-party transactions additional_recipients field learn splitting transactions multi-party transactions see multi-party transactions overview multi-party transactions setup additional_recipients multi-party transactions overview multi-party transactions setup json block additional_recipients location_id recipient_location_id description description amount_money amount split amount base monetary unit currency currency used example array array additional_recipients array array location_id recipientlocation description charity donation wildfire recovery amount_money array amount 200 currency usd optional add code receive verify transaction results include redirect url json message checkout will present confirmation page behalf represents end customer checkout experience include redirect checkout will send customer url payment processing completes encounters unrecoverable error append url parameters information relevant transaction new transaction associated checkout associated reference system order number order verify values need pull transaction details total order amount credit card status square systems querying transactionsapi endpoint example pull transaction returned square checkout returnedtransactionid _get transactionid config function create square checkout api client needed initapiclient create new api object verify transaction transactionclient new squareconnect api transactionsapi globals api_client ping transactions api endpoint transaction details try get transaction details order transactions api endpoint apiresponse transactionclient retrievetransaction globals location_id returnedtransactionid catch exception echo squareconnect configuration object threw exception calling transactionsapi retrievetransaction getmessage php_eol exit pulled transaction details confirm transaction comparing processed order total expected order total comparing returned checkout checkout stored earlier order number confirming status credit cards involved order captured using helper function handoff template files code already written strongly recommend provide redirect url provided information verify transaction results success example-confirm-transaction php file provides skeleton code confirmation page including transaction lookup example-helper-func php includes helper function verifytransaction example code verifying transaction optional add code receive verify transaction results include redirect url json message checkout will present confirmation page behalf represents end customer checkout experience include redirect checkout will send customer url payment processing completes encounters unrecoverable error append url parameters information relevant transaction new transaction associated checkout associated reference system order number new transaction associated checkout associated reference system order number order verify values need pull transaction details total order amount credit card status square systems querying transactionsapi endpoint example pull transaction returned square checkout returnedtransactionid _get transactionid config function create square checkout api client needed initapiclient create new api object verify transaction transactionclient new squareconnect api transactionsapi globals api_client ping transactions api endpoint transaction details try get transaction details order transactions api endpoint apiresponse transactionclient retrievetransaction globals location_id returnedtransactionid catch exception echo squareconnect configuration object threw exception calling transactionsapi retrievetransaction getmessage php_eol exit pulled transaction details confirm transaction comparing processed order total expected order total comparing returned checkout checkout stored earlier order number confirming status credit cards involved order captured comparing processed order total expected order total comparing returned checkout checkout stored earlier order number confirming status credit cards involved order captured using helper function handoff template files code already written strongly recommend provide redirect url provided information verify transaction results success example-confirm-transaction php file provides skeleton code confirmation page including transaction lookup example-helper-func php includes helper function verifytransaction example code verifying transaction example-confirm-transaction php example-helper-func php verifytransaction additional resources need help just want learn square checkout recommend following resources square checkout overview oauth overview square checkout stack overflow additional resources need help just want learn square checkout recommend following resources square checkout overview oauth overview square checkout stack overflow square checkout overview square checkout overview oauth overview oauth overview square checkout stack overflow square checkout stack overflow",
tags:"",url:"/articles/square-checkout-getstarted"},{title:"Checkout API Overview",text:"Checkout API Overview Specs at a glance Language Support HTTP C# Java PHP Python checkout api overview specs glance language support http java php python ruby platform web resources technical reference setup guide stackoverflow tag square checkout lets merchants accept online payments supported payment types using checkout workflow hosted squareup com simplifies process accepting online payments providing chargeback protection qualifying transactions next business day deposits pci compliance ssl support specs glance language support http java php python ruby platform web resources technical reference setup guide stackoverflow tag specs glance language support http java php python ruby language support http java php python ruby http java php python ruby platform web platform web web resources technical reference setup guide stackoverflow tag resources technical reference setup guide stackoverflow tag technical reference setup guide stackoverflow tag square checkout lets merchants accept online payments supported payment types using checkout workflow hosted squareup com simplifies process accepting online payments providing supported payment types squareup com chargeback protection qualifying transactions next business day deposits pci compliance ssl support chargeback protection qualifying transactions chargeback protection next business day deposits next business day deposits pci compliance ssl support checkout ui square checkout two main screens payment processing payment confirmation payment processing screen customers either enter credit card details apple pay merchants place order optionally buyers confirm shipping information payment confirmation page displayed opt redirect customer confirmation page checkout ui square checkout two main screens payment processing payment confirmation payment processing screen customers either enter credit card details apple pay merchants place order optionally buyers confirm shipping information payment confirmation page displayed opt redirect customer confirmation page technical overview requirements square checkout website using hosting solution allows create dynamic pages support server side scripting php ruby asp java hosting solution supports html square checkout time ssl required checkout square strongly recommends merchant sites ssl certified reduce risk man-in-the-middle attacks works square checkout restful web service payment ui hosted square servers collecting processing payment information take payments checkout merchant sites need add code sends order information square optionally verifies result general completing order square checkout involves following steps merchant create post request package order information json message note currently square checkout calculate shipping costs taxes dynamically totals provided post request line items order add authorization token header merchant send generated post request square checkout process response save returned checkout automatically redirect customer returned checkout page url customer provide payment details using square checkout ui square checkout process transaction sends email confirmation merchant customer merchant verify transaction results look something like payment processing completes transaction buyer details accessed via square dashboard create post request square checkout restful endpoint recommend merchants square connect sdk send receive information square endpoints site capable sending information json message following format checkout process payments redirect_url url confirmation page idempotency_key unique string transaction ask_for_shipping_address true false merchant_support_email support email address order reference_id store order line_items list item order individual line item name item_1 name quantity item_1 quantity base_price_money amount item_1 cost base monetary unit currency item_1 currency used discounts name item_1_discount name amount_money amount item_1_discount amount currency item_1_discount currency used taxes name item_1_tax name percentage item_1_tax percentage type item_1_tax type name item_2 name quantity item_2 quantity base_price_money amount item_2 cost base monetary unit currency item_2 currency used name item_n name quantity item_n quantity base_price_money amount item_n cost base monetary unit currency item_n currency used discounts name item_n_discount name percentage item_n percentage used pre_populate_buyer_email customer contact information email pre_populate_shipping_address address_line_1 shipping address line 1 address_line_2 shipping address line 2 locality shipping city township etc administrative_district_level_1 shipping state province etc postal_code shipping postal code country shipping country first_name customer first name last_name customer last name additional_recipients location_id recipient_location_id description description amount_money amount split amount base monetary unit currency currency used key elements message redirect_url square checkout will send customer url successful transaction event unrecoverable error provide redirect url square checkout will display order confirmation page behalf idempotency_key idempotency key used avoid processing order valid string unique every order sent square checkout given location reference_id identifier order order number generated shopping cart solution square checkout will save identifier transaction information link order information shopping cart solution payment processing information square checkout order line_items item order listed line item order appropriate price quantity line_items discounts order discounts discounts applied transactions line item order level line item discounts applied purchase item calculating subtotal order-level discounts distributed across line items order discounts always applied calculating applicable taxes line_items taxes order taxes taxes applied transaction line item order level line item taxes applied specific purchased item order-level taxes applied purchases order process payments square checkout also need valid location authorization token valid authorization tokens include personal access tokens application applicaton dashboard oauth tokens merchants using solution location used construct full checkout endpoint url associate payment particular store belonging merchant account authorization token lets square checkout know transaction authorized merchant account associated location additional_recipients field available apps using oauth learn splitting transactions multi-party transactions see multi-party transactions overview multi-party transactions setup send post request square checkout full checkout url given location https connect squareup com v2 locations location_id checkouts checkout receives merchant request url authenticates authorization token authenticates location verifies location belongs merchant account indicated authorization token location able create payments orders initializes new transaction order information returns new checkout checkout url form https connect squareup com v2 checkout checkout_id location_id merchant site receives response saves checkout local order information redirects customer square-hosted checkout url provide payment details using square checkout ui customer redirected square checkout presented screen review order details itemized list enter payment information original post request included shipping information fields pre-populated customer data entry validation checkout ui includes proper formatting email address proper formatting credit card number credit card expiration date past required fields populated process transaction payment card information submitted square checkout will try authorize capture payment event recoverable error card declined customer prompted correct information payment processed checkout sends two verification emails one customer provided address one merchant email address associated square account transaction buyer details also accessed square dashboard original post request included redirect url customer automatically sent url otherwise presented square checkout confirmation page verify transaction results square strongly recommends setting redirect url verifying transaction results guard order spoofing checkout will append transaction checkout store-generated order redirect url facilitate verification order verify transaction results merchants query square transaction endpoint transaction details confirm store-generated order checkout transaction totals match expected values information verify transaction results please see square checkout setup guide additional resources square checkout getting started oauth overview square checkout stack overflow window mathjax jax input asciimath output commonhtml extensions asciimath2jax js showmathmenu false technical overview requirements square checkout website using hosting solution allows create dynamic pages support server side scripting php ruby asp java hosting solution supports html square checkout time ssl required checkout square strongly recommends merchant sites ssl certified reduce risk man-in-the-middle attacks ssl required checkout square strongly recommends merchant sites ssl certified reduce risk man-in-the-middle attacks strongly works square checkout restful web service payment ui hosted square servers collecting processing payment information take payments checkout merchant sites need add code sends order information square optionally verifies result general completing order square checkout involves following steps merchant create post request package order information json message note currently square checkout calculate shipping costs taxes dynamically totals provided post request line items order add authorization token header merchant send generated post request square checkout process response save returned checkout automatically redirect customer returned checkout page url customer provide payment details using square checkout ui square checkout process transaction sends email confirmation merchant customer merchant verify transaction results merchant create post request package order information json message note currently square checkout calculate shipping costs taxes dynamically totals provided post request line items order add authorization token header package order information json message note currently square checkout calculate shipping costs taxes dynamically totals provided post request line items order add authorization token header package order information json message note currently square checkout calculate shipping costs taxes dynamically totals provided post request line items order add authorization token header add authorization token header merchant send generated post request square checkout process response save returned checkout automatically redirect customer returned checkout page url save returned checkout automatically redirect customer returned checkout page url save returned checkout automatically redirect customer returned checkout page url customer provide payment details using square checkout ui square checkout process transaction sends email confirmation merchant customer merchant verify transaction results look something like payment processing completes transaction buyer details accessed via square dashboard create post request square checkout restful endpoint recommend merchants square connect sdk send receive information square endpoints site capable sending information json message following format checkout process payments redirect_url url confirmation page idempotency_key unique string transaction ask_for_shipping_address true false merchant_support_email support email address order reference_id store order line_items list item order individual line item name item_1 name quantity item_1 quantity base_price_money amount item_1 cost base monetary unit currency item_1 currency used discounts name item_1_discount name amount_money amount item_1_discount amount currency item_1_discount currency used taxes name item_1_tax name percentage item_1_tax percentage type item_1_tax type name item_2 name quantity item_2 quantity base_price_money amount item_2 cost base monetary unit currency item_2 currency used name item_n name quantity item_n quantity base_price_money amount item_n cost base monetary unit currency item_n currency used discounts name item_n_discount name percentage item_n percentage used pre_populate_buyer_email customer contact information email pre_populate_shipping_address address_line_1 shipping address line 1 address_line_2 shipping address line 2 locality shipping city township etc administrative_district_level_1 shipping state province etc postal_code shipping postal code country shipping country first_name customer first name last_name customer last name additional_recipients location_id recipient_location_id description description amount_money amount split amount base monetary unit currency currency used redirect_url url confirmation page idempotency_key unique string transaction ask_for_shipping_address true false merchant_support_email support email address order reference_id store order line_items list item order individual line item name item_1 name quantity item_1 quantity base_price_money amount item_1 cost base monetary unit currency item_1 currency used discounts name item_1_discount name amount_money amount item_1_discount amount currency item_1_discount currency used taxes name item_1_tax name percentage item_1_tax percentage type item_1_tax type name item_2 name quantity item_2 quantity base_price_money amount item_2 cost base monetary unit currency item_2 currency used name item_n name quantity item_n quantity base_price_money amount item_n cost base monetary unit currency item_n currency used discounts name item_n_discount name percentage item_n percentage used pre_populate_buyer_email customer contact information email pre_populate_shipping_address address_line_1 shipping address line 1 address_line_2 shipping address line 2 locality shipping city township etc administrative_district_level_1 shipping state province etc postal_code shipping postal code country shipping country first_name customer first name last_name customer last name additional_recipients location_id recipient_location_id description description amount_money amount split amount base monetary unit currency currency used redirect_url url confirmation page idempotency_key unique string transaction ask_for_shipping_address true false merchant_support_email support email address order reference_id store order line_items name item_1 name quantity item_1 quantity base_price_money amount _ 1 currency item_1 currency used name item_1_discount name amount_money amount _ 1 _ currency item_1_discount currency used taxes name item_1_tax name percentage item_1_tax percentage type item_1_tax type name item_2 name quantity item_2 quantity base_price_money amount _ 2 currency item_2 currency used name item_n name quantity item_n quantity base_price_money amount _ currency item_n currency used name item_n_discount name percentage item_n percentage used pre_populate_buyer_email customer contact information email pre_populate_shipping_address address_line_1 shipping address line 1 address_line_2 shipping address line 2 locality shipping city township etc administrative_district_level_1 shipping state province etc postal_code shipping postal code country shipping country first_name customer first name last_name customer last name additional_recipients location_id recipient_location_id description description amount_money amount currency currency used key elements message redirect_url square checkout will send customer url successful transaction event unrecoverable error provide redirect url square checkout will display order confirmation page behalf idempotency_key idempotency key used avoid processing order valid string unique every order sent square checkout given location reference_id identifier order order number generated shopping cart solution square checkout will save identifier transaction information link order information shopping cart solution payment processing information square checkout order line_items item order listed line item order appropriate price quantity line_items discounts order discounts discounts applied transactions line item order level line item discounts applied purchase item calculating subtotal order-level discounts distributed across line items order discounts always applied calculating applicable taxes line_items taxes order taxes taxes applied transaction line item order level line item taxes applied specific purchased item order-level taxes applied purchases order redirect_url square checkout will send customer url successful transaction event unrecoverable error provide redirect url square checkout will display order confirmation page behalf redirect_url idempotency_key idempotency key used avoid processing order valid string unique every order sent square checkout given location idempotency_key idempotency key reference_id identifier order order number generated shopping cart solution square checkout will save identifier transaction information link order information shopping cart solution payment processing information square checkout reference_id order line_items item order listed line item order appropriate price quantity order line_items line_items discounts order discounts discounts applied transactions line item order level line item discounts applied purchase item calculating subtotal order-level discounts distributed across line items order discounts always applied calculating applicable taxes line_items discounts order discounts line_items taxes order taxes taxes applied transaction line item order level line item taxes applied specific purchased item order-level taxes applied purchases order line_items taxes order taxes process payments square checkout also need valid location authorization token valid authorization tokens include personal access tokens application applicaton dashboard oauth tokens merchants using solution personal access tokens application applicaton dashboard applicaton dashboard oauth tokens merchants using solution oauth tokens location used construct full checkout endpoint url associate payment particular store belonging merchant account authorization token lets square checkout know transaction authorized merchant account associated location additional_recipients field available apps using oauth learn splitting transactions multi-party transactions see multi-party transactions overview multi-party transactions setup additional_recipients multi-party transactions overview multi-party transactions setup send post request square checkout full checkout url given location https connect squareup com v2 locations location_id checkouts https connect squareup com v2 locations location_id checkouts checkout receives merchant request url authenticates authorization token authenticates location verifies location belongs merchant account indicated authorization token location able create payments orders initializes new transaction order information returns new checkout checkout url form authenticates authorization token authenticates location verifies location belongs merchant account indicated authorization token location able create payments orders initializes new transaction order information returns new checkout checkout url form https connect squareup com v2 checkout checkout_id location_id https connect squareup com v2 checkout checkout_id location_id merchant site receives response saves checkout local order information redirects customer square-hosted checkout url provide payment details using square checkout ui customer redirected square checkout presented screen review order details itemized list enter payment information original post request included shipping information fields pre-populated customer data entry validation checkout ui includes proper formatting email address proper formatting credit card number credit card expiration date past required fields populated proper formatting email address proper formatting credit card number credit card expiration date past required fields populated process transaction payment card information submitted square checkout will try authorize capture payment event recoverable error card declined customer prompted correct information payment processed checkout sends two verification emails one customer provided address one merchant email address associated square account transaction buyer details also accessed square dashboard square dashboard original post request included redirect url customer automatically sent url otherwise presented square checkout confirmation page verify transaction results square strongly recommends setting redirect url verifying transaction results guard order spoofing checkout will append transaction checkout store-generated order redirect url facilitate verification order verify transaction results merchants query square transaction endpoint transaction details confirm store-generated order checkout transaction totals match expected values information verify transaction results please see square checkout setup guide square checkout setup guide additional resources square checkout getting started oauth overview square checkout stack overflow square checkout getting started square checkout getting started oauth overview oauth overview square checkout stack overflow square checkout stack overflow window mathjax jax input asciimath output commonhtml extensions asciimath2jax js showmathmenu false",tags:"",url:"/articles/square-checkout-overview"},{title:"Square SDK Release 2.2.1 (2017-08-14)",text:"Square SDK Release 2.2.1 (2017-08-14) Release Summary We've released version 2.2.1 of our SDK square sdk release 2 2 1 2017-08-14 release summary released version 2 2 1 sdk client libraries addition bug fixes made following improvements support pagination v1 endpoints include refund detail fields v1 refund model new sdks available github java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly release summary released version 2 2 1 sdk client libraries addition bug fixes made following improvements support pagination v1 endpoints include refund detail fields v1 refund model support pagination v1 endpoints include refund detail fields v1 refund model new sdks available github java python ruby php java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly swagger pipeline",tags:"",url:"/articles/square-sdk-release-notes-2017-08-14"},{title:"Square SDK Release 2.3 (2017-09-15)",text:"Square SDK Release 2.3 (2017-09-15) Release Summary We've released version 2.3 of our SDK square sdk release 2 3 2017-09-15 release summary released version 2 3 sdk client libraries addition bug fixes made following improvements createorder endpoint creates itemized order referenced messages charge endpoint batchretrieveorders retrieves order objects referenced one transactions based provided order_id charge endpoint charge specific order new sdks available github java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly release summary released version 2 3 sdk client libraries addition bug fixes made following improvements createorder endpoint creates itemized order referenced messages charge endpoint batchretrieveorders retrieves order objects referenced one transactions based provided order_id charge endpoint charge specific order createorder endpoint creates itemized order referenced messages charge endpoint createorder charge batchretrieveorders retrieves order objects referenced one transactions based provided order_id batchretrieveorders order_id charge endpoint charge specific order charge new sdks available github java python ruby php java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly swagger pipeline",tags:"",url:"/articles/square-sdk-release-notes-2017-09-15"},{title:"Square SDK Release 2.4 (2017-09-27)",text:"Square SDK Release 2.4 (2017-09-27) Release Summary We've released version 2.4 of our SDK square sdk release 2 4 2017-09-27 release summary released version 2 4 sdk client libraries addition bug fixes made following improvements registerdomain endpoint activates domain web apple pay location type used indicate whether location object represents physical space new sdks available github java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly release summary released version 2 4 sdk client libraries addition bug fixes made following improvements registerdomain endpoint activates domain web apple pay location type used indicate whether location object represents physical space registerdomain endpoint activates domain web apple pay registerdomain location type used indicate whether location object represents physical space location type new sdks available github java python ruby php java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly swagger pipeline",tags:"",url:"/articles/square-sdk-release-notes-2017-09-27"},{title:"Square SDK 2.5.1 Release (2017-11-02)",text:"Square SDK 2.5.1 Release (2017-11-02) Release Summary We've released version 2.5 of our SDK square sdk 2 5 1 release 2017-11-02 release summary released version 2 5 sdk client libraries version 2 5 includes new functionality transactions api endpoints new reporting api new sdks available github java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly release summary released version 2 5 sdk client libraries version 2 5 includes new functionality transactions api endpoints new reporting api new sdks available github java python ruby php java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly swagger pipeline new features transactions api square connect sdk v2 5 includes updated functionality transactions api related launch multi-party transactions additionalrecipient data type representing additional recipient words recipient merchant square receiving portion tender information multi-party transactions work suggest reading splitting payments section transactions api overview reporting api square connect sdk v2 5 includes new api client reporting api includes two endpoints additionalrecipientreceivables returns list receivables across source locations representing monies credited given location another square account using additional_recipients field transaction additionalrecipientreceivablesrefunds returns list refunded transactions across source locations related monies credited given location another square account using additional_recipients field transaction information reporting api suggest reading reporting api technical reference new features transactions api square connect sdk v2 5 includes updated functionality transactions api related launch multi-party transactions additionalrecipient data type representing additional recipient words recipient merchant square receiving portion tender additionalrecipient data type representing additional recipient words recipient merchant square receiving portion tender additionalrecipient information multi-party transactions work suggest reading splitting payments section transactions api overview splitting payments reporting api square connect sdk v2 5 includes new api client reporting api includes two endpoints additionalrecipientreceivables returns list receivables across source locations representing monies credited given location another square account using additional_recipients field transaction additionalrecipientreceivablesrefunds returns list refunded transactions across source locations related monies credited given location another square account using additional_recipients field transaction additionalrecipientreceivables returns list receivables across source locations representing monies credited given location another square account using additional_recipients field transaction additional_recipients additionalrecipientreceivablesrefunds returns list refunded transactions across source locations related monies credited given location another square account using additional_recipients field transaction additional_recipients information reporting api suggest reading reporting api technical reference reporting api technical reference",tags:"",url:"/articles/square-sdk-release-notes-2017-11-02"},{title:"Square SDK 2.5 Release (2017-11-10)",text:"Square SDK 2.5 Release (2017-11-10) Release Summary We've released version 2.5.1 of our SDK square sdk 2 5 release 2017-11-10 release summary released version 2 5 1 sdk client libraries version 2 5 1 includes fixes minor additions catalog api locations api transactions api ordinal added catalogitemvariation website_url added location tip_money added tender changed object_type placeholder_type lists single values v1pagecell mirror data model new sdks available github java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly release summary released version 2 5 1 sdk client libraries version 2 5 1 includes fixes minor additions catalog api locations api transactions api ordinal added catalogitemvariation website_url added location tip_money added tender changed object_type placeholder_type lists single values v1pagecell mirror data model ordinal added catalogitemvariation ordinal catalogitemvariation website_url added location website_url location tip_money added tender tip_money tender changed object_type placeholder_type lists single values v1pagecell mirror data model object_type placeholder_type v1pagecell new sdks available github java python ruby php java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly swagger pipeline",tags:"",url:"/articles/square-sdk-release-notes-2017-11-10"},{title:"Square SDK Release Notes (2018-01-16)",text:"Square SDK Release Notes (2018-01-16) Release Summary We're thrilled to announce the first release square sdk release notes 2018-01-16 release summary thrilled announce first release public node js sdk version 2 5 3 help get started created example app uses square payment form sqpaymentform collect payment information processes payment node js sdk new node sdk available sdks github node java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly release summary thrilled announce first release public node js sdk version 2 5 3 help get started created example app uses square payment form sqpaymentform collect payment information processes payment node js sdk public node js sdk example app new node sdk available sdks github node java python ruby php node java python ruby php constantly evaluating new languages add meantime language need supported swagger pipeline generate custom sdk continue sending json endpoint urls directly swagger pipeline",tags:"",url:"/articles/square-sdk-release-notes-2018-01-16"},{title:"Troubleshooting errors",
text:"Troubleshooting errors See the pages linked below for help troubleshooting errors you encounter troubleshooting errors see pages linked help troubleshooting errors encounter development square apis see pages linked help troubleshooting errors encounter development square apis payment form errors errors occur buyer using sqpaymentform reported one different ways depending error occurred see payment form overview details payment form errors errors occur buyer using sqpaymentform reported one different ways depending error occurred see payment form overview details sqpaymentform payment form overview connect api endpoint errors connect api endpoint encounters error fields describing error included endpoint response body format response body differs v1 v2 endpoints error format v1 endpoints described message field response body provides detailed description error error format v2 endpoints described detail field object returned errors array provides detailed description error possible values category code fields error listed connect api endpoint errors connect api endpoint encounters error fields describing error included endpoint response body format response body differs v1 v2 endpoints fields describing error included endpoint response body error format v1 endpoints described message field response body provides detailed description error error format v2 endpoints described detail field object returned errors array provides detailed description error possible values category code fields error listed error format v1 endpoints described message field response body provides detailed description error message error format v2 endpoints described detail field object returned errors array provides detailed description error possible values category code fields error listed detail errors category code questions technical questions check answer problem stack overflow questions related square apis tagged square-connect tag find answer feel free post new question square api development team monitors tag tries best respond quickly general non-technical questions building integrations square apis ask developer forums developers will able see question offer advice still find answer question contact support details issue error messages received questions technical questions check answer problem stack overflow questions related square apis tagged square-connect tag find answer feel free post new question square api development team monitors tag tries best respond quickly stack overflow square-connect general non-technical questions building integrations square apis ask developer forums developers will able see question offer advice developer forums still find answer question contact support details issue error messages received contact support",tags:"",url:"/articles/troubleshooting-errors"},{title:"Testing with the API Sandbox",text:"Testing with the API Sandbox Connect API v2 provides a sandbox that lets you testing api sandbox connect api v2 provides sandbox lets test api endpoints non-production environment transactions created sandbox sent card networks cards never charged sandbox providing special sandbox access token instead normal access token sending requests api sandbox endpoints currently available connect v1 point sale api catalog v2 api connect api v2 provides sandbox lets test api endpoints non-production environment transactions created sandbox sent card networks cards never charged sandbox providing special sandbox access token instead normal access token sending requests api sandbox access token sandbox endpoints currently available connect v1 point sale api catalog v2 api obtaining sandbox access token every connect api application sandbox application sandbox access token assigned credentials available alongside application standard credentials application dashboard open application dashboard click application want sandbox credentials scroll sandbox section bottom like personal access tokens sandbox access token secure credential think sandbox access token compromised replace clicking replace token sandbox access token field note generate sandbox access tokens oauth api sandbox access token listed application dashboard testing obtaining sandbox access token every connect api application sandbox application sandbox access token assigned credentials available alongside application standard credentials application dashboard sandbox application sandbox access token open application dashboard click application want sandbox credentials scroll sandbox section bottom open application dashboard application dashboard click application want sandbox credentials scroll sandbox section bottom sandbox like personal access tokens sandbox access token secure credential think sandbox access token compromised replace clicking replace token sandbox access token field secure credential replace token note generate sandbox access tokens oauth api sandbox access token listed application dashboard testing note try now sandbox token tool send test payment send charge request update json block request text area paste sandbox token sandbox token field select locations api dropdown select listlocations endpoint dropdown click send request response body will appear json response pick location_id response location accepts credit cards copy select transactions api dropdown select charge endpoint dropdown paste location_id saved location_id field update example request set idempotency_key unique string need update string new charge request set card_nonce one following sandbox nonce values fake-card-nonce-ok returns successful test transaction fake-card-nonce-declined returns card declined error click send request response body will appear json response note find full list test nonces variety return states generating error states section sandbox token alert api alert endpoint alert location_id alert transaction_id alert customer_id alert card_id alert request request url idempotency_key card_nonce fake-card-nonce-ok reference_id merchant order note optional note transaction delay_capture false shipping_address address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country billing_address address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 10003 country amount_money amount 5000 currency usd endpoint require request body send request response alert know sandbox api tool includes support customers checkout apis well visit connect v2 api reference try running example requests api tool try now sandbox token tool send test payment send charge request update json block request text area request paste sandbox token sandbox token field select locations api dropdown select listlocations endpoint dropdown click send request response body will appear json response pick location_id response location accepts credit cards copy select transactions api dropdown select charge endpoint dropdown paste location_id saved location_id field update example request set idempotency_key unique string need update string new charge request set card_nonce one following sandbox nonce values fake-card-nonce-ok returns successful test transaction fake-card-nonce-declined returns card declined error click send request response body will appear json response paste sandbox token sandbox token field sandbox token select locations api dropdown locations api select listlocations endpoint dropdown listlocations endpoint click send request response body will appear json response response pick location_id response location accepts credit cards copy location_id select transactions api dropdown transactions api select charge endpoint dropdown charge endpoint paste location_id saved location_id field location_id location_id update example request set idempotency_key unique string need update string new charge request set card_nonce one following sandbox nonce values fake-card-nonce-ok returns successful test transaction fake-card-nonce-declined returns card declined error set idempotency_key unique string need update string new charge request set card_nonce one following sandbox nonce values fake-card-nonce-ok returns successful test transaction fake-card-nonce-declined returns card declined error set idempotency_key unique string need update string new charge request idempotency_key set card_nonce one following sandbox nonce values fake-card-nonce-ok returns successful test transaction fake-card-nonce-declined returns card declined error card_nonce fake-card-nonce-ok returns successful test transaction fake-card-nonce-declined returns card declined error fake-card-nonce-ok returns successful test transaction fake-card-nonce-ok fake-card-nonce-declined returns card declined error fake-card-nonce-declined click send request response body will appear json response send request response note find full list test nonces variety return states generating error states section note generating error states sandbox token alert api alert endpoint alert location_id alert transaction_id alert customer_id alert card_id alert request request url idempotency_key card_nonce fake-card-nonce-ok reference_id merchant order note optional note transaction delay_capture false shipping_address address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country billing_address address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 10003 country amount_money amount 5000 currency usd endpoint require request body send request response alert sandbox token alert api alert endpoint alert location_id alert transaction_id alert customer_id alert card_id alert request request url idempotency_key card_nonce fake-card-nonce-ok reference_id merchant order note optional note transaction delay_capture false shipping_address address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country billing_address address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 10003 country amount_money amount 5000 currency usd endpoint require request body send request sandbox token alert api alert endpoint alert location_id alert transaction_id alert customer_id alert card_id alert sandbox token alert sandbox token alert sandbox token alert sandbox token alert sandbox token alert alert alert api alert endpoint alert location_id alert transaction_id alert customer_id alert card_id alert api alert api alert api alert api alert alert alert endpoint alert endpoint alert endpoint alert endpoint alert alert alert location_id alert location_id alert location_id alert location_id alert alert alert transaction_id alert transaction_id alert transaction_id alert transaction_id alert alert alert customer_id alert customer_id alert customer_id alert customer_id alert alert alert card_id alert card_id alert card_id alert card_id alert alert alert request request url idempotency_key card_nonce fake-card-nonce-ok reference_id merchant order note optional note transaction delay_capture false shipping_address address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country billing_address address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 10003 country amount_money amount 5000 currency usd endpoint require request body send request request request url idempotency_key card_nonce fake-card-nonce-ok reference_id merchant order note optional note transaction delay_capture false shipping_address address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country billing_address address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 10003 country amount_money amount 5000 currency usd endpoint require request body request url request url request url idempotency_key card_nonce fake-card-nonce-ok reference_id merchant order note optional note transaction delay_capture false shipping_address address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country billing_address address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 10003 country amount_money amount 5000 currency usd endpoint require request body idempotency_key card_nonce fake-card-nonce-ok reference_id merchant order note optional note transaction delay_capture false shipping_address address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country billing_address address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 10003 country amount_money amount 5000 currency usd endpoint require request body send request send request response alert response alert alert alert alert know sandbox api tool includes support customers checkout apis well visit connect v2 api reference try running example requests api tool know sandbox api tool includes support customers checkout apis well visit connect v2 api reference try running example requests api tool connect v2 api reference generating sandbox card nonce described payment form setup guide provide application sqpaymentform initialize generate payment form produces sandbox card nonces provide sandbox application sqpaymentform instead nonces generated payment form will work sandbox-specific requests generating sandbox card nonce described payment form setup guide provide application sqpaymentform initialize generate payment form produces sandbox card nonces provide sandbox application sqpaymentform instead nonces generated payment form will work sandbox-specific requests payment form setup guide sqpaymentform sandbox sqpaymentform sending sandbox-specific requests sandbox api requests different standard api requests just couple ways access token locations interact providing sandbox access token provide sandbox access token exactly provide access token authorization header request following format authorization bearer sandbox_access_token working sandbox locations sandbox account comes collection mock locations locations totally distinct actual square account locations fetch ids sandbox locations request listlocations endpoint sure provide sandbox access token explained providing sandbox access token sending sandbox-specific requests sandbox api requests different standard api requests just couple ways access token locations interact providing sandbox access token provide sandbox access token exactly provide access token authorization header request following format authorization authorization bearer sandbox_access_token authorization bearer sandbox_access_token working sandbox locations sandbox account comes collection mock locations locations totally distinct actual square account locations locations totally distinct actual square account locations fetch ids sandbox locations request listlocations endpoint sure provide sandbox access token explained providing sandbox access token listlocations providing sandbox access token sandbox special values sandbox supports collection special values simulate various scenarios charging card card brands generating sandbox card nonce sqpaymentform card numbers simulate cards particular brands visa 4532759734545858 mastercard 5409889944179029 discover 6011033621379697 diners club 36004244846408 jcb 3566005734880650 american express 371263462726550 china unionpay 6222520119138184 provide cvv expiration date postal code card numbers except listed generating error states provided values logically correct example expiration date future generating error states reproduce certain error states sandbox providing special values payment form directly charge endpoint provide one following values generating nonce payment form nonce receive will generate error indicated provided charge endpoint card cvv incorrect specify 911 cvv payment form card postal code incorrect specify 99999 postal code payment form card expiration date incorrect specify 01 expiration month 40 expiration year payment form card declined specify 403 amount_money field request charge endpoint want generate nonce payment form also generate errors providing following values card_nonce customer_card_id fields request charge endpoint important provide one sandbox card_nonce values createcustomercard endpoint provide 94103 value postal_code billing_address field otherwise request will fail invalid postal code none transaction succeeded fake-card-nonce-ok fake-customer-card-id-ok card cvv incorrect fake-card-nonce-rejected-cvv fake-customer-card-id-rejected-cvv card postal code incorrect fake-card-nonce-rejected-postalcode fake-customer-card-id-rejected-postalcode card expiration date incorrect fake-card-nonce-rejected-expiration fake-customer-card-id-rejected-expiration card declined fake-card-nonce-declined fake-customer-card-id-declined card nonce already used fake-card-nonce-already-used sandbox special values sandbox supports collection special values simulate various scenarios charging card card brands generating sandbox card nonce sqpaymentform card numbers simulate cards particular brands sqpaymentform visa 4532759734545858 mastercard 5409889944179029 discover 6011033621379697 diners club 36004244846408 jcb 3566005734880650 american express 371263462726550 china unionpay 6222520119138184 visa 4532759734545858 mastercard 5409889944179029 discover 6011033621379697 diners club 36004244846408 jcb 3566005734880650 american express 371263462726550 china unionpay 6222520119138184 visa 4532759734545858 visa 4532759734545858 mastercard 5409889944179029 mastercard 5409889944179029 discover 6011033621379697 discover 6011033621379697 diners club 36004244846408 diners club 36004244846408 jcb 3566005734880650 jcb 3566005734880650 american express 371263462726550 american express 371263462726550 china unionpay 6222520119138184 china unionpay 6222520119138184 provide cvv expiration date postal code card numbers except listed generating error states provided values logically correct example expiration date future generating error states generating error states reproduce certain error states sandbox providing special values payment form directly charge endpoint charge provide one following values generating nonce payment form nonce receive will generate error indicated provided charge endpoint charge card cvv incorrect specify 911 cvv payment form card postal code incorrect specify 99999 postal code payment form card expiration date incorrect specify 01 expiration month 40 expiration year payment form card declined specify 403 amount_money field request charge endpoint card cvv incorrect specify 911 cvv payment form card postal code incorrect specify 99999 postal code payment form card expiration date incorrect specify 01 expiration month 40 expiration year payment form card declined specify 403 amount_money field request charge endpoint card cvv incorrect specify 911 cvv payment form card cvv incorrect specify 911 cvv payment form card postal code incorrect specify 99999 postal code payment form card postal code incorrect specify 99999 postal code payment form card expiration date incorrect specify 01 expiration month 40 expiration year payment form card expiration date incorrect specify 01 expiration month 40 expiration year payment form card declined specify 403 amount_money field request charge endpoint card declined specify 403 amount_money field request charge endpoint want generate nonce payment form also generate errors providing following values card_nonce customer_card_id fields request charge endpoint card_nonce customer_card_id charge important provide one sandbox card_nonce values createcustomercard endpoint provide 94103 value postal_code billing_address field otherwise request will fail invalid postal code important provide one sandbox card_nonce values createcustomercard endpoint provide 94103 value postal_code billing_address field otherwise request will fail invalid postal code important card_nonce createcustomercard 94103 postal_code billing_address none transaction succeeded fake-card-nonce-ok fake-customer-card-id-ok card cvv incorrect fake-card-nonce-rejected-cvv fake-customer-card-id-rejected-cvv card postal code incorrect fake-card-nonce-rejected-postalcode fake-customer-card-id-rejected-postalcode card expiration date incorrect fake-card-nonce-rejected-expiration fake-customer-card-id-rejected-expiration card declined fake-card-nonce-declined fake-customer-card-id-declined card nonce already used fake-card-nonce-already-used none transaction succeeded fake-card-nonce-ok fake-customer-card-id-ok card cvv incorrect fake-card-nonce-rejected-cvv fake-customer-card-id-rejected-cvv card postal code incorrect fake-card-nonce-rejected-postalcode fake-customer-card-id-rejected-postalcode card expiration date incorrect fake-card-nonce-rejected-expiration fake-customer-card-id-rejected-expiration card declined fake-card-nonce-declined fake-customer-card-id-declined card nonce already used fake-card-nonce-already-used none transaction succeeded fake-card-nonce-ok fake-customer-card-id-ok none transaction succeeded fake-card-nonce-ok fake-customer-card-id-ok card cvv incorrect fake-card-nonce-rejected-cvv fake-customer-card-id-rejected-cvv card cvv incorrect fake-card-nonce-rejected-cvv fake-customer-card-id-rejected-cvv card postal code incorrect fake-card-nonce-rejected-postalcode fake-customer-card-id-rejected-postalcode card postal code incorrect fake-card-nonce-rejected-postalcode fake-customer-card-id-rejected-postalcode card expiration date incorrect fake-card-nonce-rejected-expiration fake-customer-card-id-rejected-expiration card expiration date incorrect fake-card-nonce-rejected-expiration fake-customer-card-id-rejected-expiration card declined fake-card-nonce-declined fake-customer-card-id-declined card declined fake-card-nonce-declined fake-customer-card-id-declined card nonce already used fake-card-nonce-already-used card nonce already used fake-card-nonce-already-used",tags:"",url:"/articles/using-sandbox"},{title:"Using the Web API for Android",
text:"Using the Web API for Android Be sure to read Point of Sale using web api android sure read point sale api overview high-level explanation point sale api sure read point sale api overview high-level explanation point sale api sure read point sale api overview high-level explanation point sale api point sale api overview web api setup begin initiating square point sale transactions website need complete following setup steps enroll application square yet complete steps 1 2 square apis getting started begin developing web api register web callback order square point sale accept request website square needs verify registered web callback application application dashboard first go application dashboard click point sale api tab application settings web section specify app web callback corresponding field sure save changes install latest version square point sale android device square point sale available google play store web api supported square point sale 4 54 later check installed version point sale see faq web api setup begin initiating square point sale transactions website need complete following setup steps enroll application square yet complete steps 1 2 square apis getting started begin developing web api square apis getting started register web callback order square point sale accept request website square needs verify registered web callback application application dashboard first go application dashboard click point sale api tab application settings web section specify app web callback corresponding field application dashboard point sale api web sure save changes install latest version square point sale android device square point sale available google play store web api supported square point sale 4 54 later google play store check installed version point sale see faq faq initiating transaction website important initiate first square web api transaction make sure completed following tasks square point sale android app log business location want accept payments using square contactless chip reader connect square point sale initiate transaction website supply specially-crafted link button similar following direct user square point sale example starts one dollar transaction href intent intent action com squareup pos action charge package com squareup browser_fallback_url https website com index html com squareup pos web_callback_uri https website com index html com squareup pos client_id sq0ids-yourclientid com squareup pos api_version v2 0 com squareup pos total_amount 100 com squareup pos currency_code usd com squareup pos tender_types com squareup pos tender_card com squareup pos tender_card_on_file com squareup pos tender_cash com squareup pos tender_other end send notice list key-value pairs delimited semicolons wrapped special android start end tokens intent intent end embedded target url action required com squareup pos action charge represents square transaction request com squareup pos web_callback_uri required callback square point sale will send response com squareup pos client_id required client com squareup pos api_version required targeted version square point sale api v2 0 com squareup pos currency_code required currency code usd com squareup pos total_amount required total amount represented smallest unit supplied currency value 100 corresponds 1 00 usd com squareup pos tender_types required provides tender types will allowed displayed square point sale non-empty comma-delimited set following com squareup pos tender_card com squareup pos tender_card_on_file com squareup pos tender_cash com squareup pos tender_other package recommended set com squareup identifies package name application responding intent browser_fallback_url optional point sale installed android will route supplied url missing android will route play store package parameter provided com squareup pos note optional note add transaction completed successfully com squareup pos request_metadata optional state parameter returned response developer initiating transaction website important initiate first square web api transaction make sure completed following tasks square point sale android app log business location want accept payments using square contactless chip reader connect square point sale important initiate first square web api transaction make sure completed following tasks square point sale android app important log business location want accept payments using square contactless chip reader connect square point sale log business location want accept payments using square contactless chip reader connect square point sale connect square point sale initiate transaction website supply specially-crafted link button similar following direct user square point sale example starts one dollar transaction href intent intent action com squareup pos action charge package com squareup browser_fallback_url https website com index html com squareup pos web_callback_uri https website com index html com squareup pos client_id sq0ids-yourclientid com squareup pos api_version v2 0 com squareup pos total_amount 100 com squareup pos currency_code usd com squareup pos tender_types com squareup pos tender_card com squareup pos tender_card_on_file com squareup pos tender_cash com squareup pos tender_other end send notice list key-value pairs delimited semicolons wrapped special android start end tokens intent intent end embedded target url intent intent end action required com squareup pos action charge represents square transaction request com squareup pos web_callback_uri required callback square point sale will send response com squareup pos client_id required client com squareup pos api_version required targeted version square point sale api v2 0 com squareup pos currency_code required currency code usd com squareup pos total_amount required total amount represented smallest unit supplied currency value 100 corresponds 1 00 usd com squareup pos tender_types required provides tender types will allowed displayed square point sale non-empty comma-delimited set following com squareup pos tender_card com squareup pos tender_card_on_file com squareup pos tender_cash com squareup pos tender_other package recommended set com squareup identifies package name application responding intent browser_fallback_url optional point sale installed android will route supplied url missing android will route play store package parameter provided com squareup pos note optional note add transaction completed successfully com squareup pos request_metadata optional state parameter returned response developer action required com squareup pos action charge represents square transaction request com squareup pos web_callback_uri required callback square point sale will send response com squareup pos client_id required client com squareup pos api_version required targeted version square point sale api v2 0 com squareup pos currency_code required currency code usd com squareup pos total_amount required total amount represented smallest unit supplied currency value 100 corresponds 1 00 usd com squareup pos tender_types required provides tender types will allowed displayed square point sale non-empty comma-delimited set following com squareup pos tender_card com squareup pos tender_card_on_file com squareup pos tender_cash com squareup pos tender_other package recommended set com squareup identifies package name application responding intent browser_fallback_url optional point sale installed android will route supplied url missing android will route play store package parameter provided com squareup pos note optional note add transaction completed successfully com squareup pos request_metadata optional state parameter returned response developer action required com squareup pos action charge represents square transaction request action required com squareup pos action charge represents square transaction request com squareup pos web_callback_uri required callback square point sale will send response com squareup pos web_callback_uri required callback square point sale will send response com squareup pos client_id required client com squareup pos client_id required client com squareup pos api_version required targeted version square point sale api v2 0 com squareup pos api_version required targeted version square point sale api v2 0 com squareup pos currency_code required currency code usd com squareup pos currency_code required currency code usd com squareup pos total_amount required total amount represented smallest unit supplied currency value 100 corresponds 1 00 usd com squareup pos total_amount required total amount represented smallest unit supplied currency value 100 corresponds 1 00 usd com squareup pos tender_types required provides tender types will allowed displayed square point sale non-empty comma-delimited set following com squareup pos tender_card com squareup pos tender_card_on_file com squareup pos tender_cash com squareup pos tender_other com squareup pos tender_types required provides tender types will allowed displayed square point sale non-empty comma-delimited set following com squareup pos tender_card com squareup pos tender_card_on_file com squareup pos tender_cash com squareup pos tender_other package recommended set com squareup identifies package name application responding intent package recommended set com squareup identifies package name application responding intent browser_fallback_url optional point sale installed android will route supplied url missing android will route play store package parameter provided browser_fallback_url optional point sale installed android will route supplied url missing android will route play store package parameter provided com squareup pos note optional note add transaction completed successfully com squareup pos note optional note add transaction completed successfully com squareup pos request_metadata optional state parameter returned response developer com squareup pos request_metadata optional state parameter returned response developer processing transaction square point sale merchant android device switches square point sale details transaction pre-populated merchant either process transaction approved payment method cancel either way action completes device returns website provides details result note currently possible process fake credit card payment point sale api testing integration cash payments process small card payments 1 issue refunds square point sale processing transaction square point sale merchant android device switches square point sale details transaction pre-populated merchant either process transaction approved payment method cancel either way action completes device returns website provides details result note currently possible process fake credit card payment point sale api testing integration cash payments process small card payments 1 issue refunds square point sale note currently possible process fake credit card payment point sale api testing integration cash payments process small card payments 1 issue refunds square point sale note issue refunds square point sale receiving data square point sale square point sale finishes processing transaction encounters error returns website using web callback supplied url target parse query parameters determine whether associated transaction succeeded failed along accompanying metadata transaction succeeded response will following parameters com squareup pos client_transaction_id com squareup pos server_transaction_id processing card transaction online transaction failed response will following parameters com squareup pos error_code com squareup pos error_description success error cases response will also include com squareup pos result_request_metadata supplied developer receiving data square point sale square point sale finishes processing transaction encounters error returns website using web callback supplied url target parse query parameters determine whether associated transaction succeeded failed along accompanying metadata transaction succeeded response will following parameters succeeded com squareup pos client_transaction_id com squareup pos server_transaction_id processing card transaction online com squareup pos client_transaction_id com squareup pos server_transaction_id processing card transaction online transaction failed response will following parameters failed com squareup pos error_code com squareup pos error_description com squareup pos error_code com squareup pos error_description success error cases response will also include com squareup pos result_request_metadata supplied developer error codes point sale api transaction fails reason square point sale returns error code value com squareup pos error_code query parameter response table possible error codes customer_management_not_supported merchant account support customer management disabled point sale api currently available illegal_location_id provided location correspond location currently logged square point sale invalid_customer_id provided customer invalid invalid_request information provided transaction request invalid required field missing malformed no_employee_logged_in employee management enabled employee logged square point sale no_network square point sale unable validate point sale api request android device active network connection no_result square point sale return transaction result transaction_already_in_progress another square point sale transaction already progress transaction_canceled merchant canceled transaction unauthorized_client_id application provided client authorized point sale api unexpected unexpected error occurred unsupported_api_version installed version square point sale support version point sale sdk unsupported_web_api_version web api supported supplied api version v1 3 user_not_activated merchant tried process transaction credit card merchant square account yet activated card processing user_not_logged_in user currently logged square point sale error codes point sale api transaction fails reason square point sale returns error code value com squareup pos error_code query parameter response com squareup pos error_code table possible error codes customer_management_not_supported merchant account support customer management disabled point sale api currently available illegal_location_id provided location correspond location currently logged square point sale invalid_customer_id provided customer invalid invalid_request information provided transaction request invalid required field missing malformed no_employee_logged_in employee management enabled employee logged square point sale no_network square point sale unable validate point sale api request android device active network connection no_result square point sale return transaction result transaction_already_in_progress another square point sale transaction already progress transaction_canceled merchant canceled transaction unauthorized_client_id application provided client authorized point sale api unexpected unexpected error occurred unsupported_api_version installed version square point sale support version point sale sdk unsupported_web_api_version web api supported supplied api version v1 3 user_not_activated merchant tried process transaction credit card merchant square account yet activated card processing user_not_logged_in user currently logged square point sale customer_management_not_supported merchant account support customer management customer_management_not_supported merchant account support customer management disabled point sale api currently available disabled point sale api currently available illegal_location_id provided location correspond location currently logged square point sale illegal_location_id provided location correspond location currently logged square point sale invalid_customer_id provided customer invalid invalid_customer_id provided customer invalid invalid_request information provided transaction request invalid required field missing malformed invalid_request information provided transaction request invalid required field missing malformed no_employee_logged_in employee management enabled employee logged square point sale no_employee_logged_in employee management enabled employee logged square point sale no_network square point sale unable validate point sale api request android device active network connection no_network square point sale unable validate point sale api request android device active network connection no_result square point sale return transaction result no_result square point sale return transaction result transaction_already_in_progress another square point sale transaction already progress transaction_already_in_progress another square point sale transaction already progress transaction_canceled merchant canceled transaction transaction_canceled merchant canceled transaction unauthorized_client_id application provided client authorized point sale api unauthorized_client_id application provided client authorized point sale api unexpected unexpected error occurred unexpected unexpected error occurred unsupported_api_version installed version square point sale support version point sale sdk unsupported_api_version installed version square point sale support version point sale sdk unsupported_web_api_version web api supported supplied api version v1 3 unsupported_web_api_version web api supported supplied api version v1 3 user_not_activated merchant tried process transaction credit card merchant square account yet activated card processing user_not_activated merchant tried process transaction credit card merchant square account yet activated card processing user_not_logged_in user currently logged square point sale user_not_logged_in user currently logged square point sale additional resources get stuck check solution issue stack overflow questions related square apis tagged square-connect label monitored square developers find answer feel free post new question square api returns error message helpful diagnosing issue please contact support details issue error message received additional resources get stuck check solution issue stack overflow questions related square apis tagged square-connect label monitored square developers find answer feel free post new question stack overflow square-connect square api returns error message helpful diagnosing issue please contact support details issue error message received contact support",tags:"",url:"/articles/web-api-android"},{title:"Web API for Android released (2016-11)",text:"Web API for Android released (2016-11) The Square Web API is now available web api android released 2016-11 square web api now available android feature developers now launch square register android app website process in-person payments square hardware see using web api android learn web api android works see register api overview overview register api works see using register api android learn add register api functionality android app square web api now available android feature developers now launch square register android app website process in-person payments square hardware see using web api android learn web api android works see register api overview overview register api works see using register api android learn add register api functionality android app see using web api android learn web api android works using web api android see register api overview overview register api works register api overview see using register api android learn add register api functionality android app using register api android",tags:"",url:"/articles/web-api-android-released-2016-11"},{title:"Using the Web API for iOS",
text:"Using the Web API for iOS Be sure to read Point of Sale using web api ios sure read point sale api overview high-level explanation point sale api sure read point sale api overview high-level explanation point sale api sure read point sale api overview high-level explanation point sale api point sale api overview web api setup begin initiating square point sale transactions website need complete following setup steps enroll application square yet complete steps 1 2 square apis getting started begin developing web api register web callback order square point sale accept request website square needs verify registered web callback application application dashboard first go application dashboard click point sale api tab application settings web section specify app web callback corresponding field sure save changes install latest version square point sale ios device square point sale available app store point sale api v1 0 supported square point sale 4 34 later point sale api v1 1 supported square point sale 4 50 later point sale api v1 2 supported square point sale 4 53 later point sale api v1 3 supported square point sale 4 59 later check installed version point sale go help support within app scroll bottom support screen web api setup begin initiating square point sale transactions website need complete following setup steps enroll application square yet complete steps 1 2 square apis getting started begin developing web api square apis getting started register web callback order square point sale accept request website square needs verify registered web callback application application dashboard first go application dashboard click point sale api tab application settings web section specify app web callback corresponding field application dashboard point sale api web sure save changes install latest version square point sale ios device square point sale available app store app store point sale api v1 0 supported square point sale 4 34 later point sale api v1 1 supported square point sale 4 50 later point sale api v1 2 supported square point sale 4 53 later point sale api v1 3 supported square point sale 4 59 later point sale api v1 0 supported square point sale 4 34 later point sale api v1 1 supported square point sale 4 50 later point sale api v1 2 supported square point sale 4 53 later point sale api v1 3 supported square point sale 4 59 later check installed version point sale go help support within app scroll bottom support screen initiating square point sale transaction website important initiate first square point sale transaction make sure completed following tasks square point sale app log business location want accept payments using square contactless chip reader connect square point sale initiate square point sale transaction website open url following format square-commerce-v1 payment create data parameters query parameter url data percent-encoded json object contains information square point sale needs process transaction request example valid unencoded json object looks like replace my_application_id application amount_money amount 500 currency_code usd callback_url myapp-url-scheme payment-complete client_id my_application_id version 1 3 notes rental fee options supported_tender_types credit_card cash square_gift_card card_on_file javascript sample demonstrates encoding point sale api url directing merchant browser open script var dataparameter amount_money amount 500 currency_code usd callback_url https www example com replace value application callback url client_id my_application_id replace value application version 1 3 notes notes transaction options supported_tender_types credit_card cash square_gift_card card_on_file window location square-commerce-v1 payment create data encodeuricomponent json stringify dataparameter script json field descriptions amount_money money required amount money charge square point sale smallest unit corresponding currency dollars value cents callback_url string required url square point sale will send response native apps protocol url example myapp-url-scheme json example match custom url scheme specified application dashboard web apps value match callback url specified application dashboard client_id string required application available application dashboard options object required contains additional payment options described additional payment options version string required version point sale api process transaction value 1 3 current version api installed version square point sale support specified version point sale api unsupported_api_version error returned location_id string optional provide one business locations parameter require transaction processed location specified location currently signed square point sale transaction fails error code sample demonstrates learn fetch business location ids listlocations endpoint state string optional provide value included square point sale response app payment completes parameter associate helpful state information payment request notes string optional custom note associate resulting payment note included itemizations field payment objects returned list payments retrieve payment endpoints customer_id string optional provide one business customers parameter require transaction linked customer square account support customer management invalid customer specified transaction fails error internet connection also required square point sale retrieve customer details specified customer internet connection transaction will fail error list customers api endpoint used fetch merchant customers ids additional payment options supported_tender_types string required types tender square point sale allowed accept payment following tender types supported credit_card cash square_gift_card card_on_file clear_default_fees boolean optional true default fees taxes merchant created square point sale automatically applied payment default value false auto_return boolean optional true square point sale automatically switches back app following short timeout transaction completes otherwise merchant tap new salebutton square point sale return app merchant taps add customer save card file button transaction completes add modify information customer associated transaction save customer card file square point sale will automatically switch back app even option set true skip_receipt boolean optional true square point sale display digital receipt options buyer transaction completes default value false initiating square point sale transaction website important initiate first square point sale transaction make sure completed following tasks square point sale app log business location want accept payments using square contactless chip reader connect square point sale important initiate first square point sale transaction make sure completed following tasks square point sale app important log business location want accept payments using square contactless chip reader connect square point sale log business location want accept payments using square contactless chip reader connect square point sale connect square point sale initiate square point sale transaction website open url following format square-commerce-v1 payment create data parameters query parameter url data percent-encoded json object contains information square point sale needs process transaction request data percent-encoded json object example valid unencoded json object looks like replace my_application_id application amount_money amount 500 currency_code usd callback_url myapp-url-scheme payment-complete client_id my_application_id version 1 3 notes rental fee options supported_tender_types credit_card cash square_gift_card card_on_file javascript sample demonstrates encoding point sale api url directing merchant browser open script var dataparameter amount_money amount 500 currency_code usd callback_url https www example com replace value application callback url client_id my_application_id replace value application version 1 3 notes notes transaction options supported_tender_types credit_card cash square_gift_card card_on_file window location square-commerce-v1 payment create data encodeuricomponent json stringify dataparameter script json field descriptions amount_money money required amount money charge square point sale smallest unit corresponding currency dollars value cents callback_url string required url square point sale will send response native apps protocol url example myapp-url-scheme json example match custom url scheme specified application dashboard web apps value match callback url specified application dashboard client_id string required application available application dashboard options object required contains additional payment options described additional payment options version string required version point sale api process transaction value 1 3 current version api installed version square point sale support specified version point sale api unsupported_api_version error returned location_id string optional provide one business locations parameter require transaction processed location specified location currently signed square point sale transaction fails error code sample demonstrates learn fetch business location ids listlocations endpoint state string optional provide value included square point sale response app payment completes parameter associate helpful state information payment request notes string optional custom note associate resulting payment note included itemizations field payment objects returned list payments retrieve payment endpoints customer_id string optional provide one business customers parameter require transaction linked customer square account support customer management invalid customer specified transaction fails error internet connection also required square point sale retrieve customer details specified customer internet connection transaction will fail error list customers api endpoint used fetch merchant customers ids amount_money money required amount money charge square point sale smallest unit corresponding currency dollars value cents callback_url string required url square point sale will send response native apps protocol url example myapp-url-scheme json example match custom url scheme specified application dashboard web apps value match callback url specified application dashboard client_id string required application available application dashboard options object required contains additional payment options described additional payment options version string required version point sale api process transaction value 1 3 current version api installed version square point sale support specified version point sale api unsupported_api_version error returned location_id string optional provide one business locations parameter require transaction processed location specified location currently signed square point sale transaction fails error code sample demonstrates learn fetch business location ids listlocations endpoint state string optional provide value included square point sale response app payment completes parameter associate helpful state information payment request notes string optional custom note associate resulting payment note included itemizations field payment objects returned list payments retrieve payment endpoints customer_id string optional provide one business customers parameter require transaction linked customer square account support customer management invalid customer specified transaction fails error internet connection also required square point sale retrieve customer details specified customer internet connection transaction will fail error list customers api endpoint used fetch merchant customers ids amount_money money required amount money charge square point sale smallest unit corresponding currency dollars value cents amount_money money required amount money charge square point sale smallest unit corresponding currency dollars value cents callback_url string required url square point sale will send response native apps protocol url example myapp-url-scheme json example match custom url scheme specified application dashboard web apps value match callback url specified application dashboard callback_url string required url square point sale will send response native apps protocol url example myapp-url-scheme json example match custom url scheme specified application dashboard web apps value match callback url specified application dashboard client_id string required application available application dashboard client_id string required application available application dashboard options object required contains additional payment options described additional payment options options object required contains additional payment options described additional payment options version string required version point sale api process transaction value 1 3 current version api installed version square point sale support specified version point sale api unsupported_api_version error returned version string required version point sale api process transaction value 1 3 current version api installed version square point sale support specified version point sale api unsupported_api_version error returned location_id string optional provide one business locations parameter require transaction processed location specified location currently signed square point sale transaction fails error code sample demonstrates learn fetch business location ids listlocations endpoint location_id string optional provide one business locations parameter require transaction processed location specified location currently signed square point sale transaction fails error code sample demonstrates learn fetch business location ids listlocations endpoint state string optional provide value included square point sale response app payment completes parameter associate helpful state information payment request state string optional provide value included square point sale response app payment completes parameter associate helpful state information payment request notes string optional custom note associate resulting payment note included itemizations field payment objects returned list payments retrieve payment endpoints notes string optional custom note associate resulting payment note included itemizations field payment objects returned list payments retrieve payment endpoints customer_id string optional provide one business customers parameter require transaction linked customer square account support customer management invalid customer specified transaction fails error internet connection also required square point sale retrieve customer details specified customer internet connection transaction will fail error list customers api endpoint used fetch merchant customers ids customer_id string optional provide one business customers parameter require transaction linked customer square account support customer management invalid customer specified transaction fails error internet connection also required square point sale retrieve customer details specified customer internet connection transaction will fail error list customers api endpoint used fetch merchant customers ids additional payment options supported_tender_types string required types tender square point sale allowed accept payment following tender types supported credit_card cash square_gift_card card_on_file clear_default_fees boolean optional true default fees taxes merchant created square point sale automatically applied payment default value false auto_return boolean optional true square point sale automatically switches back app following short timeout transaction completes otherwise merchant tap new salebutton square point sale return app merchant taps add customer save card file button transaction completes add modify information customer associated transaction save customer card file square point sale will automatically switch back app even option set true skip_receipt boolean optional true square point sale display digital receipt options buyer transaction completes default value false supported_tender_types string required types tender square point sale allowed accept payment following tender types supported credit_card cash square_gift_card card_on_file clear_default_fees boolean optional true default fees taxes merchant created square point sale automatically applied payment default value false auto_return boolean optional true square point sale automatically switches back app following short timeout transaction completes otherwise merchant tap new salebutton square point sale return app merchant taps add customer save card file button transaction completes add modify information customer associated transaction save customer card file square point sale will automatically switch back app even option set true skip_receipt boolean optional true square point sale display digital receipt options buyer transaction completes default value false supported_tender_types string required types tender square point sale allowed accept payment following tender types supported credit_card cash square_gift_card card_on_file supported_tender_types string required types tender square point sale allowed accept payment following tender types supported credit_card cash square_gift_card card_on_file clear_default_fees boolean optional true default fees taxes merchant created square point sale automatically applied payment default value false clear_default_fees boolean optional true default fees taxes merchant created square point sale automatically applied payment default value false auto_return boolean optional true square point sale automatically switches back app following short timeout transaction completes otherwise merchant tap new salebutton square point sale return app merchant taps add customer save card file button transaction completes add modify information customer associated transaction save customer card file square point sale will automatically switch back app even option set true auto_return boolean optional true square point sale automatically switches back app following short timeout transaction completes otherwise merchant tap new salebutton square point sale return app merchant taps add customer save card file button transaction completes add modify information customer associated transaction save customer card file square point sale will automatically switch back app even option set true skip_receipt boolean optional true square point sale display digital receipt options buyer transaction completes default value false skip_receipt boolean optional true square point sale display digital receipt options buyer transaction completes default value false processing transaction square point sale merchant ios device switches square point sale details transaction pre-populated merchant either process transaction cancel either way action completes ios device returns website provides details result note currently possible process fake credit card payment point sale api testing integration process small card payments 1 issue refunds square point sale processing transaction square point sale merchant ios device switches square point sale details transaction pre-populated merchant either process transaction cancel either way action completes ios device returns website provides details result note currently possible process fake credit card payment point sale api testing integration process small card payments 1 issue refunds square point sale note currently possible process fake credit card payment point sale api testing integration process small card payments 1 issue refunds square point sale note issue refunds square point sale receiving data square point sale square point sale finishes processing transaction encounters error switches back app via callback_url provided original request parse query parameters determine whether associated transaction succeeded failed along accompanying metadata depending result transaction data object includes following fields transaction_id string unique processed transaction succeeded get full details payment retrievetransaction endpoint square connect api parameter absent transaction processed offline mode error occurred client_transaction_id string transaction device-specified generated case payment needed processed offline mode note value present even payment processed offline mode parameter absent error occurred status string value either ok payment succeeded error error occurred error_code string code payment_canceled indicates type error occurred see handling error codes possible values indicate state string value value specified state original request handling error codes error occurs point sale api transaction error_code field json object returned app one following values amount_invalid_format request missing invalid amount charge amount_too_large request amount charge large amount_too_small request amount charge small client_not_authorized_for_user point sale versions prior 4 53 require developer guide merchants oauth allowing take payments point sale api point sale 4 53 error type deprecated could_not_perform request performed usually unfinished transaction pending square point sale merchants open square point sale complete transaction initiating new request currency_code_mismatch currency code provided request match currency associated current business currency_code_missing currency code provided request missing invalid customer_management_not_supported merchant account support customer management therefore associate transactions customers data_invalid url sent square point sale missing invalid information invalid_customer_id customer provided request correspond customer logged square merchant customer directory invalid_tender_type request included invalid tender type no_network_connection transaction failed device network connection not_logged_in merchant currently logged square point sale payment_canceled merchant canceled payment square point sale unsupported_api_version installed version square point sale support specified version point sale api unsupported_currency_code currency code provided request currently supported point sale api unsupported_tender_type request included tender type currently supported point sale api user_id_mismatch business location currently logged square point sale match location represented location_id provided request user_not_active currently logged location activated card processing receiving data square point sale square point sale finishes processing transaction encounters error switches back app via callback_url provided original request callback_url parse query parameters determine whether associated transaction succeeded failed along accompanying metadata depending result transaction data object includes following fields data transaction_id string unique processed transaction succeeded get full details payment retrievetransaction endpoint square connect api parameter absent transaction processed offline mode error occurred client_transaction_id string transaction device-specified generated case payment needed processed offline mode note value present even payment processed offline mode parameter absent error occurred status string value either ok payment succeeded error error occurred error_code string code payment_canceled indicates type error occurred see handling error codes possible values indicate state string value value specified state original request transaction_id string unique processed transaction succeeded get full details payment retrievetransaction endpoint square connect api parameter absent transaction processed offline mode error occurred client_transaction_id string transaction device-specified generated case payment needed processed offline mode note value present even payment processed offline mode parameter absent error occurred status string value either ok payment succeeded error error occurred error_code string code payment_canceled indicates type error occurred see handling error codes possible values indicate state string value value specified state original request transaction_id string unique processed transaction succeeded get full details payment retrievetransaction endpoint square connect api parameter absent transaction processed offline mode error occurred transaction_id string unique processed transaction succeeded get full details payment retrievetransaction endpoint square connect api parameter absent transaction processed offline mode error occurred client_transaction_id string transaction device-specified generated case payment needed processed offline mode note value present even payment processed offline mode parameter absent error occurred client_transaction_id string transaction device-specified generated case payment needed processed offline mode note value present even payment processed offline mode parameter absent error occurred status string value either ok payment succeeded error error occurred status string value either ok payment succeeded error error occurred error_code string code payment_canceled indicates type error occurred see handling error codes possible values indicate error_code string code payment_canceled indicates type error occurred see handling error codes possible values indicate state string value value specified state original request state string value value specified state original request handling error codes error occurs point sale api transaction error_code field json object returned app one following values error_code amount_invalid_format request missing invalid amount charge amount_too_large request amount charge large amount_too_small request amount charge small client_not_authorized_for_user point sale versions prior 4 53 require developer guide merchants oauth allowing take payments point sale api point sale 4 53 error type deprecated could_not_perform request performed usually unfinished transaction pending square point sale merchants open square point sale complete transaction initiating new request currency_code_mismatch currency code provided request match currency associated current business currency_code_missing currency code provided request missing invalid customer_management_not_supported merchant account support customer management therefore associate transactions customers data_invalid url sent square point sale missing invalid information invalid_customer_id customer provided request correspond customer logged square merchant customer directory invalid_tender_type request included invalid tender type no_network_connection transaction failed device network connection not_logged_in merchant currently logged square point sale payment_canceled merchant canceled payment square point sale unsupported_api_version installed version square point sale support specified version point sale api unsupported_currency_code currency code provided request currently supported point sale api unsupported_tender_type request included tender type currently supported point sale api user_id_mismatch business location currently logged square point sale match location represented location_id provided request user_not_active currently logged location activated card processing amount_invalid_format request missing invalid amount charge amount_too_large request amount charge large amount_too_small request amount charge small client_not_authorized_for_user point sale versions prior 4 53 require developer guide merchants oauth allowing take payments point sale api point sale 4 53 error type deprecated could_not_perform request performed usually unfinished transaction pending square point sale merchants open square point sale complete transaction initiating new request currency_code_mismatch currency code provided request match currency associated current business currency_code_missing currency code provided request missing invalid customer_management_not_supported merchant account support customer management therefore associate transactions customers data_invalid url sent square point sale missing invalid information invalid_customer_id customer provided request correspond customer logged square merchant customer directory invalid_tender_type request included invalid tender type no_network_connection transaction failed device network connection not_logged_in merchant currently logged square point sale payment_canceled merchant canceled payment square point sale unsupported_api_version installed version square point sale support specified version point sale api unsupported_currency_code currency code provided request currently supported point sale api unsupported_tender_type request included tender type currently supported point sale api user_id_mismatch business location currently logged square point sale match location represented location_id provided request user_not_active currently logged location activated card processing amount_invalid_format request missing invalid amount charge amount_invalid_format request missing invalid amount charge amount_too_large request amount charge large amount_too_large request amount charge large amount_too_small request amount charge small amount_too_small request amount charge small client_not_authorized_for_user point sale versions prior 4 53 require developer guide merchants oauth allowing take payments point sale api point sale 4 53 error type deprecated client_not_authorized_for_user point sale versions prior 4 53 require developer guide merchants oauth allowing take payments point sale api point sale 4 53 error type deprecated could_not_perform request performed usually unfinished transaction pending square point sale merchants open square point sale complete transaction initiating new request could_not_perform request performed usually unfinished transaction pending square point sale merchants open square point sale complete transaction initiating new request currency_code_mismatch currency code provided request match currency associated current business currency_code_mismatch currency code provided request match currency associated current business currency_code_missing currency code provided request missing invalid currency_code_missing currency code provided request missing invalid customer_management_not_supported merchant account support customer management therefore associate transactions customers customer_management_not_supported merchant account support customer management therefore associate transactions customers data_invalid url sent square point sale missing invalid information data_invalid url sent square point sale missing invalid information invalid_customer_id customer provided request correspond customer logged square merchant customer directory invalid_customer_id customer provided request correspond customer logged square merchant customer directory invalid_tender_type request included invalid tender type invalid_tender_type request included invalid tender type no_network_connection transaction failed device network connection no_network_connection transaction failed device network connection not_logged_in merchant currently logged square point sale not_logged_in merchant currently logged square point sale payment_canceled merchant canceled payment square point sale payment_canceled merchant canceled payment square point sale unsupported_api_version installed version square point sale support specified version point sale api unsupported_api_version installed version square point sale support specified version point sale api unsupported_currency_code currency code provided request currently supported point sale api unsupported_currency_code currency code provided request currently supported point sale api unsupported_tender_type request included tender type currently supported point sale api unsupported_tender_type request included tender type currently supported point sale api user_id_mismatch business location currently logged square point sale match location represented location_id provided request user_id_mismatch business location currently logged square point sale match location represented location_id provided request user_not_active currently logged location activated card processing user_not_active currently logged location activated card processing using point sale api offline mode merchants process point sale api payments square point sale offline mode without internet connection order merchant enabled offline mode business merchant processed least one online point sale api payment application last 24 hours merchant processes point sale api payment offline mode square point sale response application include transaction_id field square backend systems received transaction yet response however include client_transaction_id field merchant internet connection restored transaction reaches square client_transaction_id get transaction full details connect api transaction objects returned connect api listtransactions endpoint include client_id field field matches value client_transaction_id returned point sale api match value fetch full details transaction originally processed offline mode note currently possible filter listtransactions endpoint results client_id field using point sale api offline mode merchants process point sale api payments square point sale offline mode without internet connection order offline mode merchant enabled offline mode business merchant processed least one online point sale api payment application last 24 hours merchant enabled offline mode business merchant processed least one online point sale api payment application last 24 hours online merchant processes point sale api payment offline mode square point sale response application include transaction_id field square backend systems received transaction yet response however include client_transaction_id field merchant internet connection restored transaction reaches square client_transaction_id get transaction full details connect api transaction_id client_transaction_id client_transaction_id transaction objects returned connect api listtransactions endpoint include client_id field field matches value client_transaction_id returned point sale api match value fetch full details transaction originally processed offline mode note currently possible filter listtransactions endpoint results client_id field transaction listtransactions client_id client_transaction_id filter client_id additional resources get stuck check solution issue stack overflow questions related square apis tagged square-connect label find answer feel free post new question square api development team monitors label square api returns error message helpful diagnosing issue please contact support details issue error message received additional resources get stuck check solution issue stack overflow questions related square apis tagged square-connect label find answer feel free post new question square api development team monitors label stack overflow square-connect square api returns error message helpful diagnosing issue please contact support details issue error message received contact support",
tags:"",url:"/articles/web-api-ios"},{title:"Run Business with Square's Business APIs",text:"Run Business with Square's Business APIs Use Square\u2019s back-office management APIs with custom solutions run business square business apis square back-office management apis custom solutions manage locations employees timecards connect square api suite provides business management solutions make easy run business control employee access different workflows square point sale app locations connect v2 server-side api returns information business locations associated square account employees connect v1 server-side api creates manages employee records used square point sale app roles connect v1 server-side api creates manages employee roles grant restrict access different workflows square point sale app timecards connect v1 server-side api creates manages employee shift records note square reporting employee management https endpoints still available connect v1 interactions v1 endpoints slightly different interactions v2 endpoints sure read connect v1 api conventions working connect v1 endpoints connect v1 connect v2 apis work cross-functionally application communicate endpoints versions combine results locally needed square back-office management apis custom solutions manage locations employees timecards connect square api suite provides business management solutions make easy run business control employee access different workflows square point sale app square back-office management apis custom solutions manage locations employees timecards connect square api suite provides business management solutions make easy run business control employee access different workflows square point sale app locations connect v2 server-side api returns information business locations associated square account employees connect v1 server-side api creates manages employee records used square point sale app roles connect v1 server-side api creates manages employee roles grant restrict access different workflows square point sale app timecards connect v1 server-side api creates manages employee shift records locations connect v2 server-side api returns information business locations associated square account locations employees connect v1 server-side api creates manages employee records used square point sale app employees roles connect v1 server-side api creates manages employee roles grant restrict access different workflows square point sale app roles timecards connect v1 server-side api creates manages employee shift records timecards note square reporting employee management https endpoints still available connect v1 interactions v1 endpoints slightly different interactions v2 endpoints sure read connect v1 api conventions working connect v1 endpoints connect v1 connect v2 apis work cross-functionally application communicate endpoints versions combine results locally needed note square reporting employee management https endpoints still available connect v1 interactions v1 endpoints slightly different interactions v2 endpoints sure read connect v1 api conventions working connect v1 endpoints note connect v1 api conventions connect v1 connect v2 apis work cross-functionally application communicate endpoints versions combine results locally needed api sdk feature comparison compatible square hardware applicable applicable applicable applicable compatible square dashboard included included included included cross-functional square apis sdks catalog included included included included checkout included included included included customer included included included included locations applicable included included included orders included included included included pos api included included included included transactions included included included included development support desktop browsers applicable applicable applicable applicable mobile web browsers applicable applicable applicable applicable native non-web mobile development applicable applicable applicable applicable customizable ui applicable applicable applicable applicable test payments included included included included crud support create included included included included retrieve included included included included update included included included included delete included included included included security features https tls support included included included included oauth support included included included included api sdk feature comparison compatible square hardware applicable applicable applicable applicable compatible square dashboard included included included included cross-functional square apis sdks catalog included included included included checkout included included included included customer included included included included locations applicable included included included orders included included included included pos api included included included included transactions included included included included development support desktop browsers applicable applicable applicable applicable mobile web browsers applicable applicable applicable applicable native non-web mobile development applicable applicable applicable applicable customizable ui applicable applicable applicable applicable test payments included included included included crud support create included included included included retrieve included included included included update included included included included delete included included included included security features https tls support included included included included oauth support included included included included compatible square hardware applicable applicable applicable applicable compatible square dashboard included included included included cross-functional square apis sdks catalog included included included included checkout included included included included customer included included included included locations applicable included included included orders included included included included pos api included included included included transactions included included included included development support desktop browsers applicable applicable applicable applicable mobile web browsers applicable applicable applicable applicable native non-web mobile development applicable applicable applicable applicable customizable ui applicable applicable applicable applicable test payments included included included included crud support create included included included included retrieve included included included included update included included included included delete included included included included security features https tls support included included included included oauth support included included included included compatible square hardware applicable applicable applicable applicable compatible square hardware applicable applicable applicable applicable compatible square dashboard included included included included compatible square dashboard included included included included cross-functional square apis sdks cross-functional square apis sdks catalog included included included included catalog included included included included checkout included included included included checkout included included included included customer included included included included customer included included included included locations applicable included included included locations applicable included included included orders included included included included orders included included included included pos api included included included included pos api included included included included transactions included included included included transactions included included included included development support development support desktop browsers applicable applicable applicable applicable desktop browsers applicable applicable applicable applicable mobile web browsers applicable applicable applicable applicable mobile web browsers applicable applicable applicable applicable native non-web mobile development applicable applicable applicable applicable native non-web mobile development applicable applicable applicable applicable customizable ui applicable applicable applicable applicable customizable ui applicable applicable applicable applicable test payments included included included included test payments included included included included crud support crud support create included included included included create included included included included retrieve included included included included retrieve included included included included update included included included included update included included included included delete included included included included delete included included included included security features security features https tls support included included included included https tls support included included included included oauth support included included included included oauth support included included included included find right solution back-office partner solutions manage employees permissions payroll existing open source solution learn locations api look information business locations learn employees api create manage employee rosters learn roles api manage employee permissions learn timecards api create manage employee work shifts learn find right solution back-office partner solutions manage employees permissions payroll existing open source solution learn locations api look information business locations learn employees api create manage employee rosters learn roles api manage employee permissions learn timecards api create manage employee work shifts learn back-office partner solutions manage employees permissions payroll existing open source solution learn back-office partner solutions manage employees permissions payroll existing open source solution learn back-office partner solutions manage employees permissions payroll existing open source solution learn locations api look information business locations learn employees api create manage employee rosters learn locations api look information business locations learn locations api look information business locations learn employees api create manage employee rosters learn employees api create manage employee rosters learn roles api manage employee permissions learn timecards api create manage employee work shifts learn roles api manage employee permissions learn roles api manage employee permissions learn timecards api create manage employee work shifts learn timecards api create manage employee work shifts learn faqs api conventions connect v1 differ connect v2 5 key differences connect v1 connect v2 1 monetary amounts connect v1 monetary amounts negative represent money paid merchant example square processing fee connect v2 monetary amounts positive 2 date format connect v1 dates conform iso 8601 formatting requirements connect v2 dates conform stricter rfc 3339 formatting requirements rfc 3339-compliant date effectively iso 8601-compliant date optional components provided one exception fractional seconds still left example 2016-01-15t00 00 00z valid iso 8601 date valid rfc 3339 date 2016-01-15 lacks required time elements valid iso 8601 requirements 3 result pagination connect v1 pagination information provided link response header connect v2 endpoints paginate results return cursor field response body used query string follow-up request get next set results 4 default sort order connect v1 endpoints return lists records return results oldest-first order default connect v2 endpoints return lists records return results newest-first order default 5 error format connect v1 one error ever returned single response errors different format v2 errors see connect v1 api reference docs information connect v1 errors connect v2 endpoints return array errors response body error occurred corresponding request formatting error objects consistent across connect v2 endpoints see connect v2 api reference docs information connect v2 errors faqs api conventions connect v1 differ connect v2 5 key differences connect v1 connect v2 1 monetary amounts connect v1 monetary amounts negative represent money paid merchant example square processing fee connect v1 connect v2 monetary amounts positive connect v2 2 date format connect v1 dates conform iso 8601 formatting requirements connect v1 iso 8601 connect v2 dates conform stricter rfc 3339 formatting requirements connect v2 rfc 3339 rfc 3339-compliant date effectively iso 8601-compliant date optional components provided one exception fractional seconds still left example 2016-01-15t00 00 00z valid iso 8601 date valid rfc 3339 date 2016-01-15 lacks required time elements valid iso 8601 requirements 3 result pagination connect v1 pagination information provided link response header connect v1 connect v2 endpoints paginate results return cursor field response body used query string follow-up request get next set results connect v2 4 default sort order connect v1 endpoints return lists records return results oldest-first order default connect v1 connect v2 endpoints return lists records return results newest-first order default connect v2 5 error format connect v1 one error ever returned single response errors different format v2 errors see connect v1 api reference docs information connect v1 errors connect v1 connect v1 errors connect v2 endpoints return array errors response body error occurred corresponding request formatting error objects consistent across connect v2 endpoints see connect v2 api reference docs information connect v2 errors connect v2 connect v2 errors",tags:"",url:"/business/run-business"},{title:"Customers API Overview",text:"Customers API Overview Specs at a glance Language Support HTTP C# Java PHP Python customers api overview specs glance language support http java php python ruby platform web resources setup guide api reference guide customers api creates manages customer information card-on-file details recurring payments used collect email addresses mailing lists collect information needed contact customers past transactions customers api makes easy seamlessly integrate customer information rest square apis customers api create new customer records save card file attaching card nonce customer record list business customers update customer contact information cards file retrieve single customer record delete customer record delete card file square automatically updates cards file expire additional cost merchant buyer specs glance language support http java php python ruby platform web resources setup guide api reference guide specs glance language support http java php python ruby language support http java php python ruby http java php python ruby platform web platform web web resources setup guide api reference guide resources setup guide api reference guide setup guide api reference guide customers api creates manages customer information card-on-file details recurring payments used collect email addresses mailing lists collect information needed contact customers past transactions customers api makes easy seamlessly integrate customer information rest square apis customers api create new customer records save card file attaching card nonce customer record list business customers update customer contact information cards file retrieve single customer record delete customer record delete card file square automatically updates cards file expire additional cost merchant buyer customers api creates manages customer information card-on-file details recurring payments used collect email addresses mailing lists collect information needed contact customers past transactions customers api makes easy seamlessly integrate customer information rest square apis customers api create new customer records save card file attaching card nonce customer record list business customers update customer contact information cards file retrieve single customer record delete customer record delete card file create new customer records save card file attaching card nonce customer record list business customers update customer contact information cards file retrieve single customer record delete customer record delete card file square automatically updates cards file expire additional cost merchant buyer requirements limitations email receipts ask customers whether experience positive negative customer objects returned api include customer experience data transactions customers api used send customers emails customers api check duplicate records customer creation customers api link customers transactions processed checkout api customers api access instant profiles instant profiles customer profiles automatically created following transaction customer name collected payment card transaction include existing customer profile square will create instant profile customers api filter customer records location employee created record applications using customers api need permission make calls merchant behalf using oauth request customer_read customer_write permissions applications built personal need personal access token requirements limitations email receipts ask customers whether experience positive negative customer objects returned api include customer experience data transactions customers api used send customers emails customers api check duplicate records customer creation customers api link customers transactions processed checkout api customers api access instant profiles instant profiles customer profiles automatically created following transaction customer name collected payment card transaction include existing customer profile square will create instant profile customers api filter customer records location employee created record email receipts ask customers whether experience positive negative customer objects returned api include customer experience data transactions customer customers api used send customers emails customers api check duplicate records customer creation customer customers api link customers transactions processed checkout api customers api access instant profiles instant profiles customer profiles automatically created following transaction customer name collected payment card transaction include existing customer profile square will create instant profile customers api filter customer records location employee created record applications using customers api need permission make calls merchant behalf using oauth request customer_read customer_write permissions customer_read customer_write applications built personal need personal access token customers api data model related apis transactions api customer api works following primary data types customer represents single customer contains contact information name address email phone number also one associated cards file address collection strings representing physical address customergroupinfo contains information customer group unique customerpreferences represents customer preference receiving marketing emails contains single field true false value customer object needs least one following fields first name last name company name email address phone number customer objects also contain following optional information address note customer reference associate customer entity system note createcustomer endpoint prevent creating duplicate customer records recommend writing code identifies deletes duplicate customer records using deletecustomer endpoint using listcustomers endpoint check duplicates saving customer record handling customer data responsibly application uses customer contact information sure information judiciously tips handle customer data responsibly respect customer email preferences opted marketing emails keep customerpreferences false store personally identifying information pii like name email physical address without explicit consent store sensitive payment info note field always secure https services protect user information transit important ask customer express permission saving customer contact information cards file example include checkbox purchase flow unchecked default customer check specify wish save card information future purchases abuse customer contact information may result application disabled without notice customers api data model related apis transactions api transactions api customer api works following primary data types customer represents single customer contains contact information name address email phone number also one associated cards file address collection strings representing physical address customergroupinfo contains information customer group unique customerpreferences represents customer preference receiving marketing emails contains single field true false value customer represents single customer contains contact information name address email phone number also one associated cards file customer address collection strings representing physical address address customergroupinfo contains information customer group unique customergroupinfo customerpreferences represents customer preference receiving marketing emails contains single field true false value customerpreferences customer object needs least one following fields customer first name last name company name email address phone number first name last name company name email address phone number customer objects also contain following optional information customer address note customer reference associate customer entity system address note customer reference associate customer entity system note createcustomer endpoint prevent creating duplicate customer records recommend writing code identifies deletes duplicate customer records using deletecustomer endpoint using listcustomers endpoint check duplicates saving customer record customer handling customer data responsibly application uses customer contact information sure information judiciously tips handle customer data responsibly respect customer email preferences opted marketing emails keep customerpreferences false store personally identifying information pii like name email physical address without explicit consent store sensitive payment info note field always secure https services protect user information transit respect customer email preferences opted marketing emails keep customerpreferences false customerpreferences store personally identifying information pii like name email physical address without explicit consent store sensitive payment info note field note always secure https services protect user information transit important ask customer express permission saving customer contact information cards file example include checkbox purchase flow unchecked default customer check specify wish save card information future purchases abuse customer contact information may result application disabled without notice important ask customer express permission saving customer contact information cards file example include checkbox purchase flow unchecked default customer check specify wish save card information future purchases abuse customer contact information may result application disabled without notice important works customers api process flow customers process overview customers api restful web service hosted square servers creates manages customer information card file payment recurring payments frontend collects customer information customer consent backend packages information createcustomer request object sends createcustomer endpoint square server processes request request succeeds square server returns customer object request fails square server returns error frontend displays results customer also save card file particular customer sending card_nonce customer_id createcustomercard endpoint returned card process payments customers api sqpaymentform charge endpoint transactions api work together process card-on-file payments square payment form collects card information uses generate card nonce recommend also collect customer contact information point form note credit card information collected using sqpaymentform square secure payment form client server packages customer information createcustomer request object sends createcustomer endpoint square server returns customer object value will used customer_id charge request client server packages createcustomercard request object containing customer_id card nonce generated square payment form square server returns customercard object value will used customer_card_id charge request client server packages charge request customer_card_id customer_id instead card_nonce instant profiles instant profiles customer profiles automatically created following transaction customer name collected payment card matching profile already exist within directory square will create instant profile future purchases made card will update customer profile new transaction details activity business customer objects linked completed transactions link customer transaction save card file first create retrieve customer record packaging charge request works customers api process flow customers process overview customers api restful web service hosted square servers creates manages customer information card file payment recurring payments frontend collects customer information customer consent backend packages information createcustomer request object sends createcustomer endpoint square server processes request request succeeds square server returns customer object request fails square server returns error frontend displays results customer frontend collects customer information customer consent backend packages information createcustomer request object sends createcustomer endpoint square server processes request request succeeds square server returns customer object request fails square server returns error request succeeds square server returns customer object request fails square server returns error request succeeds square server returns customer object request succeeds customer request fails square server returns error request fails error frontend displays results customer also save card file particular customer sending card_nonce customer_id createcustomercard endpoint returned card process payments customers api sqpaymentform charge endpoint transactions api work together process card-on-file payments card_nonce customer_id sqpaymentform square payment form collects card information uses generate card nonce recommend also collect customer contact information point form square payment form collects card information uses generate card nonce recommend also collect customer contact information point form note credit card information collected using sqpaymentform square secure payment form note credit card information collected using sqpaymentform square secure payment form note client server packages customer information createcustomer request object sends createcustomer endpoint square server returns customer object value will used customer_id charge request client server packages createcustomercard request object containing customer_id card nonce generated square payment form square server returns customercard object value will used customer_card_id charge request client server packages charge request customer_card_id customer_id instead card_nonce client server packages customer information createcustomer request object sends createcustomer endpoint square server returns customer object value will used customer_id charge request customer customer_id client server packages createcustomercard request object containing customer_id card nonce generated square payment form customer_id square server returns customercard object value will used customer_card_id charge request customercard customer_card_id client server packages charge request customer_card_id customer_id instead card_nonce customer_card_id customer_id card_nonce instant profiles instant profiles customer profiles automatically created following transaction customer name collected payment card matching profile already exist within directory square will create instant profile future purchases made card will update customer profile new transaction details activity business customer objects linked completed transactions customer link customer transaction save card file first create retrieve customer record packaging charge request next steps detailed information customers api endpoints recommend reading customers api reference learn storing charging cards file read save charge cards file section customers api setup guide talk developers working square apis go square connect stack overflow next steps detailed information customers api endpoints recommend reading customers api reference learn storing charging cards file read save charge cards file section customers api setup guide talk developers working square apis go square connect stack overflow detailed information customers api endpoints recommend reading customers api reference customers api reference learn storing charging cards file read save charge cards file section customers api setup guide save charge cards file section customers api setup guide talk developers working square apis go square connect stack overflow square connect stack overflow",tags:"",url:"/growth/customers/overview"},{title:"Customers API Setup Guide",
text:"Customers API Setup Guide This document provides step-by-step guidance for integrating with the Customers customers api setup guide document provides step-by-step guidance integrating customers api information customers api works please see customers api overview document provides step-by-step guidance integrating customers api information customers api works please see customers api overview document provides step-by-step guidance integrating customers api information customers api works please see customers api overview customers api overview prerequisites square account customers api create square account minutes already one plan handle customer contact information responsibly note abuse customer contact information may result application disabled without notice prerequisites square account customers api create square account minutes already one plan handle customer contact information responsibly note abuse customer contact information may result application disabled without notice square account customers api create square account minutes already one create square account plan handle customer contact information responsibly note abuse customer contact information may result application disabled without notice handle customer contact information responsibly assumptions guide makes following assumptions read customers api overview covers general functionality api create run websites localhost development server familiar html php familiar https first time working https consider reading https sections square apis getting started guide continuing familiar json new json consider reading json getting started guide codular continuing assumptions guide makes following assumptions read customers api overview covers general functionality api create run websites localhost development server familiar html php familiar https first time working https consider reading https sections square apis getting started guide continuing familiar json new json consider reading json getting started guide codular continuing read customers api overview covers general functionality api customers api overview create run websites localhost development server familiar html php familiar https first time working https consider reading https sections square apis getting started guide continuing square apis getting started guide familiar json new json consider reading json getting started guide codular continuing json getting started guide process overview guide covers three main steps creating first customer object get application credentials add code collects customer information add code sends customer information createcustomer endpoint optional save charge cards file optional link customer object transaction optional update customer object optional delete customer object optional retrieve customer object process overview guide covers three main steps creating first customer object customer get application credentials add code collects customer information add code sends customer information createcustomer endpoint optional save charge cards file optional link customer object transaction optional update customer object optional delete customer object optional retrieve customer object get application credentials add code collects customer information add code sends customer information createcustomer endpoint createcustomer optional save charge cards file optional link customer object transaction customer optional update customer object customer optional delete customer object customer optional retrieve customer object customer working example write sample code setup guide set customers api website following characteristics characteristics required customers api customers api used single merchant solution words merchant site square account used save customer records associated business recommend using oauth authorization whenever possible personal access tokens acceptable single-merchant solutions especially development merchant site uses php version 5 4 later php used provide example code customers api language agnostic setup steps comparable across languages merchant site installed square connect php sdk working example write sample code setup guide set customers api website following characteristics characteristics required customers api customers api used single merchant solution words merchant site square account used save customer records associated business recommend using oauth authorization whenever possible personal access tokens acceptable single-merchant solutions especially development merchant site uses php version 5 4 later php used provide example code customers api language agnostic setup steps comparable across languages merchant site installed square connect php sdk customers api used single merchant solution words merchant site square account used save customer records associated business recommend using oauth authorization whenever possible personal access tokens acceptable single-merchant solutions especially development customers api used single merchant solution merchant site uses php version 5 4 later php used provide example code customers api language agnostic setup steps comparable across languages merchant site uses php version 5 4 later merchant site installed square connect php sdk square connect php sdk step 1 get application credentials recommend using sandbox locations testing development get sandbox open application dashboard application want accepting online payments click application application want accepting online payments click new application enter name application online store click create application copy sandbox access token value credentials tab application control panel instead sandbox personal access token also oauth customers_write permission oauth preferred api authorization mechanism production applications since allows scope permissions also review renew revoke access time sandbox tokens personal access tokens appropriate testing development step 1 get application credentials recommend using sandbox locations testing development get sandbox open application dashboard application want accepting online payments click application application want accepting online payments click new application enter name application online store click create application copy sandbox access token value credentials tab application control panel open application dashboard application dashboard application want accepting online payments click application application want accepting online payments click new application enter name application online store click create application copy sandbox access token value credentials tab application control panel instead sandbox personal access token also oauth customers_write permission oauth preferred api authorization mechanism production applications since allows scope permissions also review renew revoke access time sandbox tokens personal access tokens appropriate testing development oauth customers_write step 2 add code collects customer information ecommerce site needs way collect customer information code minimal html form asks customers provide name email physical address provide consent save data customer profile provide consent save credit card file future recurring payments add code page want collect customer information copy sample customer form form action create_customer_request php method post onsubmit paymentformsubmit h2 save customer profile h2 label name label input type text name name name placeholder name label email label input type email email name email placeholder email required h3 shipping address h3 label street label input type text streetaddress1 name streetaddress1 placeholder address line 1 label street label input type text streetaddress2 name streetaddress2 placeholder address line 2 label city label input type text city name city placeholder city label zip label input type text zip name zip placeholder zip recommend ask customers consent saving customer information input type checkbox name checkbox value check required allow save information customer profile ask customers consent saving credit card information uncomment extra checkbox want save cards file input type checkbox name checkbox value check required allow save credit card information future purchases input type submit submit value submit class btn btn-primary form create customer object need provide least one following fields given_name family_name company_name email_address phone_number read available fields api reference createcustomer step 2 add code collects customer information ecommerce site needs way collect customer information code minimal html form asks customers provide name email physical address provide consent save data customer profile provide consent save credit card file future recurring payments provide name email physical address provide consent save data customer profile provide consent save credit card file future recurring payments add code page want collect customer information copy sample customer form form action create_customer_request php method post onsubmit paymentformsubmit h2 save customer profile h2 label name label input type text name name name placeholder name label email label input type email email name email placeholder email required h3 shipping address h3 label street label input type text streetaddress1 name streetaddress1 placeholder address line 1 label street label input type text streetaddress2 name streetaddress2 placeholder address line 2 label city label input type text city name city placeholder city label zip label input type text zip name zip placeholder zip recommend ask customers consent saving customer information input type checkbox name checkbox value check required allow save information customer profile ask customers consent saving credit card information uncomment extra checkbox want save cards file input type checkbox name checkbox value check required allow save credit card information future purchases input type submit submit value submit class btn btn-primary form copy sample customer form form action create_customer_request php method post onsubmit paymentformsubmit h2 save customer profile h2 label name label input type text name name name placeholder name label email label input type email email name email placeholder email required h3 shipping address h3 label street label input type text streetaddress1 name streetaddress1 placeholder address line 1 label street label input type text streetaddress2 name streetaddress2 placeholder address line 2 label city label input type text city name city placeholder city label zip label input type text zip name zip placeholder zip recommend ask customers consent saving customer information input type checkbox name checkbox value check required allow save information customer profile ask customers consent saving credit card information uncomment extra checkbox want save cards file input type checkbox name checkbox value check required allow save credit card information future purchases input type submit submit value submit class btn btn-primary form sample customer form form action create_customer_request php method post onsubmit paymentformsubmit h2 h2 label label input type text name name name placeholder name label label input type email email name email placeholder email required h3 h3 label label input type text streetaddress1 name streetaddress1 placeholder address line 1 label label input type text streetaddress2 name streetaddress2 placeholder address line 2 label label input type text city name city placeholder city label label input type text zip name zip placeholder zip recommend ask customers consent saving customer information input type checkbox name checkbox value check required ask customers consent saving credit card information uncomment extra checkbox want save cards file input type checkbox name checkbox value check required allow save credit card information future purchases input type submit submit value submit class btn btn-primary form create customer object need provide least one following fields customer given_name family_name company_name email_address phone_number given_name family_name company_name email_address phone_number read available fields api reference createcustomer api reference createcustomer step 3 add code sends customer information createcustomer endpoint create file called create_customer_request php directory html form new file initialize api object filling personal access token step 1 get application credentials copy replace access token accesstoken replace_me include square connect api resources require_once __dir__ local path square connect sdk autoload php create configure new api client object defaultapiconfig new squareconnect configuration defaultapiconfig setaccesstoken accesstoken defaultapiclient new squareconnect apiclient defaultapiconfig customersapi new squareconnect api customersapi defaultapiclient pull customer information html form package customer object copy pull fields html form name _post name email _post email streetaddress1 _post street_address_1 streetaddress2 _post street_address_2 city _post city zip _post zip set values customer object customer new squareconnect model createcustomerrequest customer setgivenname name customer setemailaddress email put address information address array customer setaddress array address_line_1 streetaddress1 address_line_2 streetaddress2 city city zip zip send customer object createcustomer endpoint now print raw result screen copy try result customersapi createcustomer customer print_r result catch exception echo exception calling customersapi createcustomer getmessage php_eol serve html php files webserver serve locally navigate website directory terminal enter following command php localhost 8000 visit localhost 8000 browser see html form try saving customer call successful createcustomer endpoint will return customer object three new fields unique value reference customer api calls created timestamp date time customer profile created last updated timestamp date time customer profile last updated fields createcustomer response object set contain data example createcustomer request include phone number response object will include phone_number field createcustomer endpoint accepts partial addresses example save customer zipcode without including full street address even provide partial address createcustomer return object includes address object hold address information explicitly set country field address object default value zz sample code prints raw response testing purposes following optional steps cover interesting things create customer object step 3 add code sends customer information createcustomer endpoint createcustomer create file called create_customer_request php directory html form new file initialize api object filling personal access token step 1 get application credentials create file called create_customer_request php directory html form create_customer_request php new file initialize api object filling personal access token step 1 get application credentials step 1 get application credentials copy replace access token accesstoken replace_me include square connect api resources require_once __dir__ local path square connect sdk autoload php create configure new api client object defaultapiconfig new squareconnect configuration defaultapiconfig setaccesstoken accesstoken defaultapiclient new squareconnect apiclient defaultapiconfig customersapi new squareconnect api customersapi defaultapiclient copy replace access token accesstoken replace_me include square connect api resources require_once __dir__ local path square connect sdk autoload php create configure new api client object defaultapiconfig new squareconnect configuration defaultapiconfig setaccesstoken accesstoken defaultapiclient new squareconnect apiclient defaultapiconfig customersapi new squareconnect api customersapi defaultapiclient replace access token accesstoken replace_me include square connect api resources require_once __dir__ local path square connect sdk autoload php create configure new api client object defaultapiconfig new squareconnect configuration defaultapiconfig accesstoken defaultapiclient new squareconnect apiclient defaultapiconfig customersapi new squareconnect api customersapi defaultapiclient pull customer information html form package customer object pull customer information html form package customer object customer copy pull fields html form name _post name email _post email streetaddress1 _post street_address_1 streetaddress2 _post street_address_2 city _post city zip _post zip set values customer object customer new squareconnect model createcustomerrequest customer setgivenname name customer setemailaddress email put address information address array customer setaddress array address_line_1 streetaddress1 address_line_2 streetaddress2 city city zip zip copy pull fields html form name _post name email _post email streetaddress1 _post street_address_1 streetaddress2 _post street_address_2 city _post city zip _post zip set values customer object customer new squareconnect model createcustomerrequest customer setgivenname name customer setemailaddress email put address information address array customer setaddress array address_line_1 streetaddress1 address_line_2 streetaddress2 city city zip zip pull fields html form name _post name email _post email streetaddress1 _post street_address_1 streetaddress2 _post street_address_2 city _post city zip _post zip set values customer object customer new squareconnect model createcustomerrequest customer name customer email put address information address array customer array address_line_1 streetaddress1 address_line_2 streetaddress2 city city zip zip send customer object createcustomer endpoint now print raw result screen send customer object createcustomer endpoint now print raw result screen customer copy try result customersapi createcustomer customer print_r result catch exception echo exception calling customersapi createcustomer getmessage php_eol copy try result customersapi createcustomer customer print_r result catch exception echo exception calling customersapi createcustomer getmessage php_eol try result customersapi customer print_r result catch exception echo exception calling customersapi createcustomer php_eol serve html php files webserver serve locally navigate website directory terminal enter following command serve html php files webserver serve locally navigate website directory terminal enter following command php localhost 8000 php localhost 8000 visit localhost 8000 browser see html form try saving customer call successful createcustomer endpoint will return customer object three new fields unique value reference customer api calls created timestamp date time customer profile created last updated timestamp date time customer profile last updated fields createcustomer response object set contain data example createcustomer request include phone number response object will include phone_number field createcustomer endpoint accepts partial addresses example save customer zipcode without including full street address even provide partial address createcustomer return object includes address object hold address information explicitly set country field address object default value zz visit localhost 8000 browser see html form try saving customer call successful createcustomer endpoint will return customer object three new fields unique value reference customer api calls created timestamp date time customer profile created last updated timestamp date time customer profile last updated fields createcustomer response object set contain data example createcustomer request include phone number response object will include phone_number field createcustomer endpoint accepts partial addresses example save customer zipcode without including full street address even provide partial address createcustomer return object includes address object hold address information explicitly set country field address object default value zz visit localhost 8000 browser see html form try saving customer call successful createcustomer endpoint will return customer object three new fields localhost 8000 customer unique value reference customer api calls created timestamp date time customer profile created last updated timestamp date time customer profile last updated unique value reference customer api calls created timestamp date time customer profile created last updated timestamp date time customer profile last updated fields createcustomer response object set contain data example createcustomer request include phone number response object will include phone_number field phone_number createcustomer endpoint accepts partial addresses example save customer zipcode without including full street address even provide partial address createcustomer return object includes address object hold address information explicitly set country field address object default value zz partial address country address sample code prints raw response testing purposes following optional steps cover interesting things create customer object customer optional save charge cards file save card file future purchases recurring payments embed square payment form payment page generate card nonce add square payment form payment page follow instructions sqpaymentform ask customer permission save card information example include checkbox purchase flow customer check specify wish save card information future purchases add callback function payment form add step processing page creates card file customer checks box create new customer object createcustomer retrieve non-confidential information existing customer retrievecustomer set customer_id customer want save card file copy customer update customerid replace_me generate card nonce charging credit card sqpaymentform send card nonce customer createcustomercard endpoint will return _ customer_card_id_ copy object php sdk fields post request body new squareconnect model createcustomercardrequest get card nonce payment form cardnonce _post card_nonce set card nonce value request object body setcardnonce cardnonce try result customersapi createcustomercard customerid body print_r result catch exception echo exception calling customersapi createcustomercard getmessage php_eol tip consider saving cards file part payment workflow customers need enter card information saved card file transactions api charge endpoint process future payments setting customer_card_id customer_id fields chargerequest object instead card_nonce field using oauth need payments_write permission copy location associate created transaction locationid replace_me object object php sdk fields post request body new squareconnect model chargerequest set customer card body setcustomercardid customercardid set customer body setcustomerid customerid try result customersapi charge locationid body print_r result catch exception echo exception calling transactionsapi charge getmessage php_eol optional save charge cards file save card file future purchases recurring payments embed square payment form payment page generate card nonce add square payment form payment page follow instructions sqpaymentform ask customer permission save card information example include checkbox purchase flow customer check specify wish save card information future purchases add callback function payment form add step processing page creates card file customer checks box create new customer object createcustomer retrieve non-confidential information existing customer retrievecustomer set customer_id customer want save card file embed square payment form payment page generate card nonce add square payment form payment page follow instructions sqpaymentform sqpaymentform ask customer permission save card information example include checkbox purchase flow customer check specify wish save card information future purchases add callback function payment form add step processing page creates card file customer checks box create new customer object createcustomer retrieve non-confidential information existing customer retrievecustomer customer set customer_id customer want save card file customer_id copy customer update customerid replace_me copy customer update customerid replace_me customer update customerid replace_me generate card nonce charging credit card sqpaymentform send card nonce customer createcustomercard endpoint will return _ customer_card_id_ generate card nonce charging credit card sqpaymentform sqpaymentform send card nonce customer createcustomercard endpoint will return _ customer_card_id_ createcustomercard _ customer_card_id_ customer_card_id copy object php sdk fields post request body new squareconnect model createcustomercardrequest get card nonce payment form cardnonce _post card_nonce set card nonce value request object body setcardnonce cardnonce try result customersapi createcustomercard customerid body print_r result catch exception echo exception calling customersapi createcustomercard getmessage php_eol copy object php sdk fields post request body new squareconnect model createcustomercardrequest get card nonce payment form cardnonce _post card_nonce set card nonce value request object body setcardnonce cardnonce try result customersapi createcustomercard customerid body print_r result catch exception echo exception calling customersapi createcustomercard getmessage php_eol object php sdk fields post request body new squareconnect model createcustomercardrequest get card nonce payment form cardnonce _post card_nonce set card nonce value request object body cardnonce try result customersapi customerid body print_r result catch exception echo exception calling customersapi createcustomercard php_eol tip consider saving cards file part payment workflow customers need enter card information tip consider saving cards file part payment workflow customers need enter card information tip consider saving cards file part payment workflow customers need enter card information tip saved card file transactions api charge endpoint process future payments setting customer_card_id customer_id fields chargerequest object instead card_nonce field charge customer_card_id customer_id chargerequest instead card_nonce using oauth need payments_write permission payments_write copy location associate created transaction locationid replace_me object object php sdk fields post request body new squareconnect model chargerequest set customer card body setcustomercardid customercardid set customer body setcustomerid customerid try result customersapi charge locationid body print_r result catch exception echo exception calling transactionsapi charge getmessage php_eol copy location associate created transaction locationid replace_me object object php sdk fields post request body new squareconnect model chargerequest set customer card body setcustomercardid customercardid set customer body setcustomerid customerid try result customersapi charge locationid body print_r result catch exception echo exception calling transactionsapi charge getmessage php_eol location associate created transaction locationid replace_me object object php sdk fields post request body new squareconnect model chargerequest set customer card body customercardid set customer body customerid try result customersapi locationid body print_r result catch exception echo exception calling transactionsapi charge php_eol optional link customer object transaction link customer object transaction set customer_id field chargerequest object valid customer returned customers api retrievecustomer endpoint example copy replace customer customerid replace_me set customer charge request chargerequest setcustomerid customerid linking customers transactions provides reporting analytic benefits square dashboard read using transactions api optional link customer object transaction customer link customer object transaction set customer_id field chargerequest object valid customer returned customers api retrievecustomer endpoint customer customer_id chargerequest retrievecustomer example copy replace customer customerid replace_me set customer charge request chargerequest setcustomerid customerid copy replace customer customerid replace_me set customer charge request chargerequest setcustomerid customerid replace customer customerid replace_me set customer charge request chargerequest customerid linking customers transactions provides reporting analytic benefits square dashboard read using transactions api read using transactions api optional update customer object update customer send request updatecustomer endpoint note edit customer cards file make changes card file delete existing card file deletecustomercard endpoint create new one createcustomercard endpoint set customer_id customer want update provide information fields want update example update email address set email field copy get customer update customerid replace_me customer new email address email _post email initialize body updatecustomer request set fields want update using setter function field want change find setter functions rest available fields square connect php sdk documentation sample code sets email address copy object php sdk fields post request body new squareconnect model updatecustomerrequest body setemailaddress email send object updatecustomer endpoint now print raw result screen copy try result customersapi updatecustomer customerid body print_r result catch exception echo exception calling customersapi updatecustomer getmessage php_eol request successful updatecustomer endpoint will return updated customer object optional update customer object customer update customer send request updatecustomer endpoint note edit customer cards file make changes card file delete existing card file deletecustomercard endpoint create new one createcustomercard endpoint note edit customer cards file make changes card file delete existing card file deletecustomercard endpoint create new one createcustomercard endpoint note set customer_id customer want update provide information fields want update example update email address set email field set customer_id customer want update provide information fields want update example update email address set email field customer_id email copy get customer update customerid replace_me customer new email address email _post email copy get customer update customerid replace_me customer new email address email _post email get customer update customerid replace_me customer new email address email _post email initialize body updatecustomer request set fields want update using setter function field want change find setter functions rest available fields square connect php sdk documentation sample code sets email address initialize body updatecustomer request set fields want update using setter function field want change find setter functions rest available fields square connect php sdk documentation sample code sets email address square connect php sdk documentation copy object php sdk fields post request body new squareconnect model updatecustomerrequest body setemailaddress email copy object php sdk fields post request body new squareconnect model updatecustomerrequest body setemailaddress email object php sdk fields post request body new squareconnect model updatecustomerrequest body email send object updatecustomer endpoint now print raw result screen send object updatecustomer endpoint now print raw result screen copy try result customersapi updatecustomer customerid body print_r result catch exception echo exception calling customersapi updatecustomer getmessage php_eol copy try result customersapi updatecustomer customerid body print_r result catch exception echo exception calling customersapi updatecustomer getmessage php_eol try result customersapi customerid body print_r result catch exception echo exception calling customersapi updatecustomer php_eol request successful updatecustomer endpoint will return updated customer object request successful updatecustomer endpoint will return updated customer object customer optional delete customer object delete customer send request deletecustomer endpoint note deleted entities retrieved undeleted set customer_id customer want delete copy customer update customerid replace_me send request deletecustomer endpoint now print raw result screen copy try result customersapi deletecustomer customerid print_r result catch exception echo exception calling customersapi deletecustomer getmessage php_eol request successful customer profile will deleted request fails deletecustomer will return error optional delete customer object customer delete customer send request deletecustomer endpoint note deleted entities retrieved undeleted note deleted entities retrieved undeleted note set customer_id customer want delete set customer_id customer want delete customer_id copy customer update customerid replace_me copy customer update customerid replace_me customer update customerid replace_me send request deletecustomer endpoint now print raw result screen send request deletecustomer endpoint now print raw result screen copy try result customersapi deletecustomer customerid print_r result catch exception echo exception calling customersapi deletecustomer getmessage php_eol copy try result customersapi deletecustomer customerid print_r result catch exception echo exception calling customersapi deletecustomer getmessage php_eol try result customersapi customerid print_r result catch exception echo exception calling customersapi deletecustomer php_eol request successful customer profile will deleted request fails deletecustomer will return error request successful customer profile will deleted request fails deletecustomer will return error error optional retrieve customer information retrieve 100 customers time using listcustomers endpoint retrieve list existing customers listcustomers endpoint send request listcustomers endpoint now print raw result screen copy try result customersapi listcustomers print_r result catch exception echo exception calling customersapi listcustomers getmessage php_eol request successful listcustomers will return first 100 customers cursor value retrieve next set customers send followup request listcustomers cursor value parameter listcustomers 100 fewer customers listcustomers will return cursor value read paginating results retrieve specific customer retrievecustomer endpoint set customer_id customer want retrieve copy customer update customerid replace_me send request retrievecustomer endpoint now print raw result screen copy try result customersapi retrievecustomer customerid print_r result catch exception echo exception calling customersapi retrievecustomer getmessage php_eol request succeeds retrievecustomer returns corresponding customer object request fails retrievecustomer returns error optional retrieve customer information retrieve 100 customers time using listcustomers endpoint retrieve list existing customers listcustomers endpoint send request listcustomers endpoint now print raw result screen send request listcustomers endpoint now print raw result screen copy try result customersapi listcustomers print_r result catch exception echo exception calling customersapi listcustomers getmessage php_eol copy try result customersapi listcustomers print_r result catch exception echo exception calling customersapi listcustomers getmessage php_eol try result customersapi print_r result catch exception echo exception calling customersapi listcustomers php_eol request successful listcustomers will return first 100 customers cursor value retrieve next set customers send followup request listcustomers cursor value parameter listcustomers 100 fewer customers listcustomers will return cursor value read paginating results request successful listcustomers will return first 100 customers cursor value retrieve next set customers send followup request listcustomers cursor value parameter listcustomers 100 fewer customers listcustomers will return cursor value read paginating results cursor cursor listcustomers cursor read paginating results retrieve specific customer retrievecustomer endpoint set customer_id customer want retrieve set customer_id customer want retrieve customer_id copy customer update customerid replace_me copy customer update customerid replace_me customer update customerid replace_me send request retrievecustomer endpoint now print raw result screen send request retrievecustomer endpoint now print raw result screen copy try result customersapi retrievecustomer customerid print_r result catch exception echo exception calling customersapi retrievecustomer getmessage php_eol copy try result customersapi retrievecustomer customerid print_r result catch exception echo exception calling customersapi retrievecustomer getmessage php_eol try result customersapi customerid print_r result catch exception echo exception calling customersapi retrievecustomer php_eol request succeeds retrievecustomer returns corresponding customer object request fails retrievecustomer returns error request succeeds retrievecustomer returns corresponding customer object request fails retrievecustomer returns error customer error next steps detailed information customers api endpoints consider reading customers api reference learn using square payment form consider reading square payment form overview learn processing transactions consider reading transactions api overview learn testing app non-production environment consider reading testing sandbox talk developers working square apis square connect tag stack overflow next steps detailed information customers api endpoints consider reading customers api reference learn using square payment form consider reading square payment form overview learn processing transactions consider reading transactions api overview learn testing app non-production environment consider reading testing sandbox talk developers working square apis square connect tag stack overflow detailed information customers api endpoints consider reading customers api reference customers api reference learn using square payment form consider reading square payment form overview square payment form overview learn processing transactions consider reading transactions api overview transactions api overview learn testing app non-production environment consider reading testing sandbox testing sandbox talk developers working square apis square connect tag stack overflow square connect tag stack overflow",
tags:"",url:"/growth/customers/setup"},{title:"Drive Growth with Square's Growth APIs",text:"Drive Growth with Square's Growth APIs Use Square\u2019s tracking and analytics APIs with custom drive growth square growth apis square tracking analytics apis custom solutions manage customers save payment information future purchases customers server-side api creates manages customer information including card-on-file payment information used future purchases square products apis transactions point sale square tracking analytics apis custom solutions manage customers save payment information future purchases square tracking analytics apis custom solutions manage customers save payment information future purchases customers server-side api creates manages customer information including card-on-file payment information used future purchases square products apis transactions point sale customers server-side api creates manages customer information including card-on-file payment information used future purchases square products apis transactions point sale customers api sdk feature comparison compatible square hardware applicable compatible square dashboard included cross-functional square apis sdks catalog included checkout included customer applicable locations included orders included pos api included transactions included development support desktop browsers applicable mobile web browsers applicable native non-web mobile development applicable customizable ui applicable test payments included crud support create included retrieve included update included delete included security features https tls support included oauth support included api sdk feature comparison compatible square hardware applicable compatible square dashboard included cross-functional square apis sdks catalog included checkout included customer applicable locations included orders included pos api included transactions included development support desktop browsers applicable mobile web browsers applicable native non-web mobile development applicable customizable ui applicable test payments included crud support create included retrieve included update included delete included security features https tls support included oauth support included compatible square hardware applicable compatible square dashboard included cross-functional square apis sdks catalog included checkout included customer applicable locations included orders included pos api included transactions included development support desktop browsers applicable mobile web browsers applicable native non-web mobile development applicable customizable ui applicable test payments included crud support create included retrieve included update included delete included security features https tls support included oauth support included compatible square hardware applicable compatible square hardware applicable compatible square dashboard included compatible square dashboard included cross-functional square apis sdks cross-functional square apis sdks catalog included catalog included checkout included checkout included customer applicable customer applicable locations included locations included orders included orders included pos api included pos api included transactions included transactions included development support development support desktop browsers applicable desktop browsers applicable mobile web browsers applicable mobile web browsers applicable native non-web mobile development applicable native non-web mobile development applicable customizable ui applicable customizable ui applicable test payments included test payments included crud support crud support create included create included retrieve included retrieve included update included update included delete included delete included security features security features https tls support included https tls support included oauth support included oauth support included find right solution partner solutions manage analytics reporting existing open source solution learn customers api create manage customers recurring payment information learn find right solution partner solutions manage analytics reporting existing open source solution learn customers api create manage customers recurring payment information learn partner solutions manage analytics reporting existing open source solution learn customers api create manage customers recurring payment information learn partner solutions manage analytics reporting existing open source solution learn partner solutions manage analytics reporting existing open source solution learn customers api create manage customers recurring payment information learn customers api create manage customers recurring payment information learn faqs customers api work ecommerce in-person mobile transactions yes customers api used capture customer information across platforms square payment apis support card-on-file transactions faqs customers api work ecommerce in-person mobile transactions yes customers api used capture customer information across platforms square payment apis support card-on-file transactions",tags:"",url:"/growth/drive-growth"},{title:"Build with Square",text:"Build with Square Build customized solutions that accept payments (online, in store, or build square build customized solutions accept payments online store go manage products grow business handle day-to-day operations keep business running square apis free simple powerful secure reliable requirement get started creating square account take payments accept online in-person mobile payments manage products manage product catalogs inventory orders drive growth review sales engage customers track impact run business manage employees resources locations get started build square apis sell products services australia canada japan united kingdom united states take payments in-person online strong security simplified pci compliance integrate square products sync partner solutions retrieve transaction details manage product catalog create itemized orders create customer accounts customers save payment information future purchases track employee hours set permissions issuing refunds square point sale app getting started square apis simple step 1 create square account login step 2 create access credentials application dashboard step 3 start building square apis connect sdks sign learn build square build customized solutions accept payments online store go manage products grow business handle day-to-day operations keep business running square apis free simple powerful secure reliable requirement get started creating square account take payments accept online in-person mobile payments manage products manage product catalogs inventory orders drive growth review sales engage customers track impact run business manage employees resources locations build square build customized solutions accept payments online store go manage products grow business handle day-to-day operations keep business running square apis free simple powerful secure reliable requirement get started creating square account take payments accept online in-person mobile payments manage products manage product catalogs inventory orders drive growth review sales engage customers track impact run business manage employees resources locations build customized solutions accept payments online store go manage products grow business handle day-to-day operations keep business running square apis free simple powerful secure reliable requirement get started creating square account creating square account take payments accept online in-person mobile payments manage products manage product catalogs inventory orders drive growth review sales engage customers track impact run business manage employees resources locations take payments accept online in-person mobile payments manage products manage product catalogs inventory orders drive growth review sales engage customers track impact run business manage employees resources locations take payments accept online in-person mobile payments take payments accept online in-person mobile payments take payments accept online in-person mobile payments manage products manage product catalogs inventory orders manage products manage product catalogs inventory orders manage products manage product catalogs inventory orders drive growth review sales engage customers track impact drive growth review sales engage customers track impact drive growth review sales engage customers track impact run business manage employees resources locations run business manage employees resources locations run business manage employees resources locations get started build square apis sell products services australia canada japan united kingdom united states take payments in-person online strong security simplified pci compliance integrate square products sync partner solutions retrieve transaction details manage product catalog create itemized orders create customer accounts customers save payment information future purchases track employee hours set permissions issuing refunds square point sale app getting started square apis simple step 1 create square account login step 2 create access credentials application dashboard step 3 start building square apis connect sdks sign learn get started build square apis sell products services australia canada japan united kingdom united states take payments in-person online strong security simplified pci compliance integrate square products sync partner solutions retrieve transaction details manage product catalog create itemized orders create customer accounts customers save payment information future purchases track employee hours set permissions issuing refunds square point sale app sell products services australia canada japan united kingdom united states take payments in-person online strong security simplified pci compliance integrate square products sync partner solutions square products retrieve transaction details manage product catalog create itemized orders create customer accounts customers save payment information future purchases track employee hours set permissions issuing refunds square point sale app getting started square apis simple step 1 create square account login step 2 create access credentials application dashboard step 3 start building square apis connect sdks application dashboard apis connect sdks sign learn sign learn",tags:"",url:"/"},{title:"Configuring Apple Pay for Web",text:"Configuring Apple Pay for Web This document provides guidance for enabling and disabling Apple configuring apple pay web document provides guidance enabling disabling apple pay web square payment form object sqpaymentform document provides guidance enabling disabling apple pay web square payment form object sqpaymentform document provides guidance enabling disabling apple pay web square payment form object sqpaymentform sqpaymentform assumptions guide makes following assumptions read sqpaymentform overview how-to guide cover general functionality payment form followed required steps sqpaymentform setup guide guide focuses specifically customizing sqpaymentform apple pay general setup sqpaymentform assumptions guide makes following assumptions read sqpaymentform overview how-to guide cover general functionality payment form followed required steps sqpaymentform setup guide guide focuses specifically customizing sqpaymentform apple pay general setup sqpaymentform read sqpaymentform overview how-to guide cover general functionality payment form sqpaymentform overview sqpaymentform followed required steps sqpaymentform setup guide guide focuses specifically customizing sqpaymentform apple pay general setup sqpaymentform sqpaymentform setup guide sqpaymentform sqpaymentform sqpaymentform enable apple pay sqpaymentform prerequisites square payment form adheres apple development requirements web apple pay web apple pay sqpaymentform following true using https production square account web apple pay payments tested http localhost square sandbox credentials will payment form supported client ios 10 later apple pay javascript supported ios devices secure element supported safari sfsafariviewcontroller objects macos 10 12 later apple pay javascript supported safari user iphone apple watch authorize payment macbook pro touch apple pay web available square accounts based united states process overview enable apple pay web sqpaymentform will need register domain apple add apple pay placeholder payment page enable apple pay parameter sqpaymentform object update methodssupported callback function customize createpaymentrequest callback function note developing macbook pro may necessary activate apple pay touch restart safari pick changes step 1 register domain apple manually register single domain manually register single domain web apple pay open application dashboard select application associated sqpaymentform implementation click apple pay tab selected application click add new domain link follow onscreen instructions programmatically register multiple domains implemented sqpaymentform part platform addition registering platform domain individually register every client domain subdomain enable web apple pay platform users example platform user accepts payments shop domain com domain com domains registered apple user accept web apple pay payments registering domain web apple pay apple pay platform agree apple pay platform web merchant terms conditions note square triggers domain validation apple pay payment page loads need create apple merchant call apple apis enable functionality programmatically register client domain download square copy apple merchant domain verification file host verification file https client domain well-known apple-developer-merchantid-domain-association registerdomain endpoint square applepay api register validate domain connect v2 sdk call registerdomain curl command line curl https connect squareup com v2 apple-pay domains authorization bearer access_token content-type application json domain_name client domain see square applepay api reference information using registerdomain endpoint step 2 add apple pay placeholder payment page using html template sqpaymentform setup guide apple pay placeholder included default using sqpaymentform templates previously disabled apple pay functionality add apple pay placeholder adding following html payment page button sq-apple-pay class button-apple-pay button desired also modify apple pay web css class apple pay button long changes line apple human interface guidelines step 3 enable apple pay parameter sqpaymentform object using javascript template sqpaymentform setup guide apple pay parameter enabled default using sqpaymentform templates previously disabled apple pay functionality enable apple pay parameter initializing html placeholder set previous step create initialize payment form object var paymentform new sqpaymentform initialize payment form elements applicationid applicationid locationid locationid inputclass sq-input initialize web apple pay placeholder applepay elementid sq-apple-pay step 4 update methodssupported callback function sqpaymentform example code includes visual placeholder apple pay set methodssupported callback simplify development testing functionality removed putting payment form production delete references visual placeholder applepaylabel methodssupported methodssupported function methods var applepaylabel document getelementbyid sq-apple-pay-label methods applepay true applepaybtn style display inline-block applepaylabel style display none delete html visual placeholder exists div sq-apple-pay-label class wallet-not-enabled apple pay enabled div removing html placeholder without updating methodssupported function will javascript error step 5 customize createpaymentrequest callback function process payments will need customize createpaymentrequest callback function create json block defines payment request object based customer purchase totals create initialize payment form object var paymentform new sqpaymentform sqpaymentform callback functions callbacks callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson digital wallet services expect payment requests specific format result object created createpaymentrequest functionally different square internal data types example monetary amounts provided floats rather integers details expected structure payment request object see sqpaymentform overview enable apple pay sqpaymentform prerequisites square payment form adheres apple development requirements web apple pay web apple pay sqpaymentform following true apple development requirements sqpaymentform using https production square account web apple pay payments tested http localhost square sandbox credentials will payment form supported client ios 10 later apple pay javascript supported ios devices secure element supported safari sfsafariviewcontroller objects macos 10 12 later apple pay javascript supported safari user iphone apple watch authorize payment macbook pro touch apple pay web available square accounts based united states using https production square account web apple pay payments tested http localhost square sandbox credentials localhost will payment form supported client ios 10 later apple pay javascript supported ios devices secure element supported safari sfsafariviewcontroller objects macos 10 12 later apple pay javascript supported safari user iphone apple watch authorize payment macbook pro touch ios 10 later apple pay javascript supported ios devices secure element supported safari sfsafariviewcontroller objects macos 10 12 later apple pay javascript supported safari user iphone apple watch authorize payment macbook pro touch ios 10 later apple pay javascript supported ios devices secure element supported safari sfsafariviewcontroller objects ios 10 later sfsafariviewcontroller macos 10 12 later apple pay javascript supported safari user iphone apple watch authorize payment macbook pro touch macos 10 12 later apple pay web available square accounts based united states process overview enable apple pay web sqpaymentform will need sqpaymentform register domain apple add apple pay placeholder payment page enable apple pay parameter sqpaymentform object update methodssupported callback function customize createpaymentrequest callback function register domain apple add apple pay placeholder payment page enable apple pay parameter sqpaymentform object sqpaymentform update methodssupported callback function methodssupported customize createpaymentrequest callback function createpaymentrequest note developing macbook pro may necessary activate apple pay touch restart safari pick changes note developing macbook pro may necessary activate apple pay touch restart safari pick changes note step 1 register domain apple manually register single domain manually register single domain web apple pay open application dashboard select application associated sqpaymentform implementation click apple pay tab selected application click add new domain link follow onscreen instructions open application dashboard application dashboard select application associated sqpaymentform implementation click apple pay tab selected application apple pay click add new domain link follow onscreen instructions programmatically register multiple domains implemented sqpaymentform part platform addition registering platform domain individually register every client domain subdomain enable web apple pay platform users example platform user accepts payments shop domain com domain com domains registered apple user accept web apple pay payments sqpaymentform shop domain com domain com registering domain web apple pay apple pay platform agree apple pay platform web merchant terms conditions apple pay platform web merchant terms conditions note square triggers domain validation apple pay payment page loads need create apple merchant call apple apis enable functionality note square triggers domain validation apple pay payment page loads need create apple merchant call apple apis enable functionality note programmatically register client domain download square copy apple merchant domain verification file host verification file https client domain well-known apple-developer-merchantid-domain-association registerdomain endpoint square applepay api register validate domain download square copy apple merchant domain verification file square copy apple merchant domain verification file host verification file https client domain well-known apple-developer-merchantid-domain-association https client domain well-known apple-developer-merchantid-domain-association registerdomain endpoint square applepay api register validate domain registerdomain connect v2 sdk call registerdomain curl command line curl curl https connect squareup com v2 apple-pay domains authorization bearer access_token content-type application json domain_name client domain curl https connect squareup com v2 apple-pay domains authorization bearer access_token content-type application json domain_name client domain see square applepay api reference information using registerdomain endpoint applepay api reference registerdomain step 2 add apple pay placeholder payment page using html template sqpaymentform setup guide apple pay placeholder included default using sqpaymentform templates previously disabled apple pay functionality add apple pay placeholder adding following html payment page sqpaymentform sqpaymentform button sq-apple-pay class button-apple-pay button button sq-apple-pay class button-apple-pay button button sq-apple-pay class button-apple-pay button desired also modify apple pay web css class apple pay button long changes line apple human interface guidelines apple human interface guidelines step 3 enable apple pay parameter sqpaymentform object using javascript template sqpaymentform setup guide apple pay parameter enabled default using sqpaymentform templates previously disabled apple pay functionality enable apple pay parameter initializing html placeholder set previous step sqpaymentform sqpaymentform create initialize payment form object var paymentform new sqpaymentform initialize payment form elements applicationid applicationid locationid locationid inputclass sq-input initialize web apple pay placeholder applepay elementid sq-apple-pay create initialize payment form object var paymentform new sqpaymentform initialize payment form elements applicationid applicationid locationid locationid inputclass sq-input initialize web apple pay placeholder applepay elementid sq-apple-pay create initialize payment form object var new initialize payment form elements applicationid locationid inputclass sq-input initialize web apple pay placeholder elementid sq-apple-pay step 4 update methodssupported callback function sqpaymentform example code includes visual placeholder apple pay set methodssupported callback simplify development testing functionality removed putting payment form production sqpaymentform methodssupported delete references visual placeholder applepaylabel methodssupported applepaylabel methodssupported methodssupported function methods var applepaylabel document getelementbyid sq-apple-pay-label methods applepay true applepaybtn style display inline-block applepaylabel style display none methodssupported function methods var applepaylabel document getelementbyid sq-apple-pay-label methods applepay true applepaybtn style display inline-block applepaylabel style display none methodssupported function var sq-apple-pay-label true inline-block none delete html visual placeholder exists div sq-apple-pay-label class wallet-not-enabled apple pay enabled div div sq-apple-pay-label class wallet-not-enabled apple pay enabled div div sq-apple-pay-label class wallet-not-enabled div removing html placeholder without updating methodssupported function will javascript error methodssupported step 5 customize createpaymentrequest callback function createpaymentrequest process payments will need customize createpaymentrequest callback function create json block defines payment request object based customer purchase totals createpaymentrequest create initialize payment form object var paymentform new sqpaymentform sqpaymentform callback functions callbacks callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson create initialize payment form object var paymentform new sqpaymentform sqpaymentform callback functions callbacks callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson create initialize payment form object var new sqpaymentform callback functions callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var add code set create paymentrequestjson return digital wallet services expect payment requests specific format result object created createpaymentrequest functionally different square internal data types example monetary amounts provided floats rather integers createpaymentrequest rather integers details expected structure payment request object see sqpaymentform overview sqpaymentform overview sqpaymentform disable apple pay sqpaymentform want accept payment apple pay will need disable apple pay elements sqpaymentform sqpaymentform example code process overview disable apple pay sqpaymentform will need remove apple pay placeholders payment page remove apple pay css classes stylesheet disable apple pay parameter sqpaymentform object update methodssupported callback function step 1 remove apple pay placeholders payment page sqpaymentform example code includes two html placeholders apple pay delete div sq-apple-pay-label class wallet-not-enabled apple pay enabled div placeholder apple pay button button sq-apple-pay class button-apple-pay button step 2 remove apple pay placeholder css classes stylesheet sqpaymentform example code includes css classes related apple pay visual placeholder simplify development testing delete css classes sqpaymentform css indicates wallet enabled message will appear wallet-not-enabled indicates apple pay button will appear button-apple-pay step 3 disable apple pay parameter sqpaymentform object disable apple pay parameter sqpaymentform set digital wallet frame element false sqpaymentform js initialize web apple pay placeholder applepay false step 4 update methodssupported callback function sqpaymentform example code includes visual placeholder apple pay set methodssupported callback simplify development testing remove functionality deleting references visual placeholder methodssupported function methods var applepaylabel document getelementbyid sq-apple-pay-label methods applepay true applepaybtn style display inline-block applepaylabel style display none disable apple pay sqpaymentform want accept payment apple pay will need disable apple pay elements sqpaymentform sqpaymentform example code sqpaymentform sqpaymentform process overview disable apple pay sqpaymentform will need sqpaymentform remove apple pay placeholders payment page remove apple pay css classes stylesheet disable apple pay parameter sqpaymentform object update methodssupported callback function remove apple pay placeholders payment page remove apple pay css classes stylesheet disable apple pay parameter sqpaymentform object sqpaymentform update methodssupported callback function methodssupported step 1 remove apple pay placeholders payment page sqpaymentform example code includes two html placeholders apple pay delete sqpaymentform div sq-apple-pay-label class wallet-not-enabled apple pay enabled div placeholder apple pay button button sq-apple-pay class button-apple-pay button div sq-apple-pay-label class wallet-not-enabled apple pay enabled div placeholder apple pay button button sq-apple-pay class button-apple-pay button div sq-apple-pay-label class wallet-not-enabled div placeholder apple pay button button sq-apple-pay class button-apple-pay button step 2 remove apple pay placeholder css classes stylesheet sqpaymentform example code includes css classes related apple pay visual placeholder simplify development testing delete css classes sqpaymentform css sqpaymentform sqpaymentform css indicates wallet enabled message will appear wallet-not-enabled indicates apple pay button will appear button-apple-pay indicates wallet enabled message will appear wallet-not-enabled indicates apple pay button will appear button-apple-pay indicates wallet enabled message will appear wallet-not-enabled indicates apple pay button will appear button-apple-pay step 3 disable apple pay parameter sqpaymentform object disable apple pay parameter sqpaymentform set digital wallet frame element false sqpaymentform js sqpaymentform false sqpaymentform js initialize web apple pay placeholder applepay false initialize web apple pay placeholder applepay false initialize web apple pay placeholder false step 4 update methodssupported callback function sqpaymentform example code includes visual placeholder apple pay set methodssupported callback simplify development testing remove functionality deleting references visual placeholder sqpaymentform methodssupported methodssupported function methods var applepaylabel document getelementbyid sq-apple-pay-label methods applepay true applepaybtn style display inline-block applepaylabel style display none methodssupported function methods var applepaylabel document getelementbyid sq-apple-pay-label methods applepay true applepaybtn style display inline-block applepaylabel style display none methodssupported function var sq-apple-pay-label true inline-block none",tags:"",url:"/payments/sqpaymentform/config-apple-pay-web"},{title:"Configuring Masterpass",
text:"Configuring Masterpass This document provides guidance for enabling and disabling Masterpass with the Square configuring masterpass document provides guidance enabling disabling masterpass square payment form object sqpaymentform document provides guidance enabling disabling masterpass square payment form object sqpaymentform document provides guidance enabling disabling masterpass square payment form object sqpaymentform sqpaymentform assumptions guide makes following assumptions read sqpaymentform overview how-to guide cover general functionality payment form followed required steps sqpaymentform setup guide guide focuses specifically customizing sqpaymentform masterpass general setup sqpaymentform assumptions guide makes following assumptions read sqpaymentform overview how-to guide cover general functionality payment form followed required steps sqpaymentform setup guide guide focuses specifically customizing sqpaymentform masterpass general setup sqpaymentform read sqpaymentform overview how-to guide cover general functionality payment form sqpaymentform overview sqpaymentform followed required steps sqpaymentform setup guide guide focuses specifically customizing sqpaymentform masterpass general setup sqpaymentform sqpaymentform setup guide sqpaymentform sqpaymentform sqpaymentform enable masterpass sqpaymentform prerequisites masterpass sqpaymentform following true using https masterpass payments may tested sqpaymentform localhost without using https https accept payments production masterpass available square accounts based united states process overview enable masterpass sqpaymentform will need add masterpass placeholder payment page customize masterpass button enable masterpass parameter sqpaymentform object update methodssupported callback function customize createpaymentrequest callback function step 1 add masterpass placeholder payment page using html template sqpaymentform setup guide masterpass placeholder included default using sqpaymentform templates previously disabled masterpass functionality add masterpass placeholder adding following html payment page button sq-masterpass class button-masterpass button step 2 customize masterpass button size using javascript template sqpaymentform setup guide masterpass button configured 147 pixels x 34 pixels mastercard provides range image resources choose like customize masterpass button customize masterpass button size visit mastercard developers digital assets page copy url button want update css file new background image url dimensions min-width min-height max-height indicates masterpass button will appear button-masterpass min-width 200px min-height 40px max-height 40px padding 0 margin 10px background-image url https static masterpass com dyn img btn global mp_chk_btn_147x034px svg background-color black background-size 100 100 background-repeat no-repeat background-position 50 50 border-radius 5px border-color rgb 255 255 255 cursor pointer display none step 3 enable masterpass parameter sqpaymentform object using javascript template sqpaymentform setup guide masterpass parameter enabled default using sqpaymentform templates previously disabled masterpass functionality enable masterpass parameter initializing html placeholder set previous step create initialize payment form object var paymentform new sqpaymentform initialize masterpass placeholder masterpass elementid sq-masterpass step 4 update methodssupported callback function sqpaymentform example code includes visual placeholder masterpass set methodssupported callback simplify development testing functionality removed putting payment form production delete references visual placeholder masterpasslabel methodssupported methodssupported function methods var masterpasslabel document getelementbyid sq-masterpass-label methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none delete html visual placeholder exists div sq-masterpass-label class wallet-not-enabled masterpass enabled div removing html placeholder without updating methodssupported function will javascript error step 5 customize createpaymentrequest callback function process payments will need customize createpaymentrequest callback function create json block defines payment request object based customer purchase totals create initialize payment form object var paymentform new sqpaymentform sqpaymentform callback functions callbacks callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson digital wallet services expect payment requests specific format result object created createpaymentrequest functionally different square internal data types example monetary amounts provided floats rather integers details expected structure payment request object see sqpaymentform overview enable masterpass sqpaymentform prerequisites masterpass sqpaymentform following true sqpaymentform using https masterpass payments may tested sqpaymentform localhost without using https https accept payments production masterpass available square accounts based united states using https masterpass payments may tested sqpaymentform localhost without using https https accept payments production sqpaymentform localhost masterpass available square accounts based united states process overview enable masterpass sqpaymentform will need sqpaymentform add masterpass placeholder payment page customize masterpass button enable masterpass parameter sqpaymentform object update methodssupported callback function customize createpaymentrequest callback function add masterpass placeholder payment page customize masterpass button enable masterpass parameter sqpaymentform object sqpaymentform update methodssupported callback function methodssupported customize createpaymentrequest callback function createpaymentrequest step 1 add masterpass placeholder payment page using html template sqpaymentform setup guide masterpass placeholder included default using sqpaymentform templates previously disabled masterpass functionality add masterpass placeholder adding following html payment page sqpaymentform sqpaymentform button sq-masterpass class button-masterpass button button sq-masterpass class button-masterpass button button sq-masterpass class button-masterpass button step 2 customize masterpass button size using javascript template sqpaymentform setup guide masterpass button configured 147 pixels x 34 pixels mastercard provides range image resources choose like customize masterpass button sqpaymentform customize masterpass button size visit mastercard developers digital assets page copy url button want update css file new background image url dimensions min-width min-height max-height mastercard developers digital assets min-width min-height max-height indicates masterpass button will appear button-masterpass min-width 200px min-height 40px max-height 40px padding 0 margin 10px background-image url https static masterpass com dyn img btn global mp_chk_btn_147x034px svg background-color black background-size 100 100 background-repeat no-repeat background-position 50 50 border-radius 5px border-color rgb 255 255 255 cursor pointer display none indicates masterpass button will appear button-masterpass min-width 200px min-height 40px max-height 40px padding 0 margin 10px background-image url https static masterpass com dyn img btn global mp_chk_btn_147x034px svg background-color black background-size 100 100 background-repeat no-repeat background-position 50 50 border-radius 5px border-color rgb 255 255 255 cursor pointer display none indicates masterpass button will appear button-masterpass min-width 200px min-height 40px max-height 40px padding 0 margin 10px background-image url https static masterpass com dyn img btn global mp_chk_btn_147x034px svg background-color black background-size 100 100 background-repeat no-repeat background-position 50 50 border-radius 5px border-color rgb 255 255 255 cursor pointer display none step 3 enable masterpass parameter sqpaymentform object using javascript template sqpaymentform setup guide masterpass parameter enabled default using sqpaymentform templates previously disabled masterpass functionality enable masterpass parameter initializing html placeholder set previous step sqpaymentform sqpaymentform create initialize payment form object var paymentform new sqpaymentform initialize masterpass placeholder masterpass elementid sq-masterpass create initialize payment form object var paymentform new sqpaymentform initialize masterpass placeholder masterpass elementid sq-masterpass create initialize payment form object var new initialize masterpass placeholder elementid sq-masterpass step 4 update methodssupported callback function methodssupported sqpaymentform example code includes visual placeholder masterpass set methodssupported callback simplify development testing functionality removed putting payment form production sqpaymentform methodssupported delete references visual placeholder masterpasslabel methodssupported masterpasslabel methodssupported methodssupported function methods var masterpasslabel document getelementbyid sq-masterpass-label methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none methodssupported function methods var masterpasslabel document getelementbyid sq-masterpass-label methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none methodssupported function var sq-masterpass-label true inline-block none delete html visual placeholder exists div sq-masterpass-label class wallet-not-enabled masterpass enabled div div sq-masterpass-label class wallet-not-enabled masterpass enabled div div sq-masterpass-label class wallet-not-enabled div removing html placeholder without updating methodssupported function will javascript error methodssupported step 5 customize createpaymentrequest callback function createpaymentrequest process payments will need customize createpaymentrequest callback function create json block defines payment request object based customer purchase totals createpaymentrequest create initialize payment form object var paymentform new sqpaymentform sqpaymentform callback functions callbacks callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson create initialize payment form object var paymentform new sqpaymentform sqpaymentform callback functions callbacks callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson create initialize payment form object var new sqpaymentform callback functions callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var add code set create paymentrequestjson return digital wallet services expect payment requests specific format result object created createpaymentrequest functionally different square internal data types example monetary amounts provided floats rather integers createpaymentrequest rather integers details expected structure payment request object see sqpaymentform overview sqpaymentform disable masterpass sqpaymentform want accept payment masterpass will need disable masterpass elements sqpaymentform sqpaymentform example code process overview disable masterpass sqpaymentform will need remove masterpass placeholders payment page remove masterpass css classes stylesheet disable masterpass parameter sqpaymentform object update methodssupported callback function step 1 remove masterpass placeholders payment page sqpaymentform example code includes two html placeholders masterpay delete div sq-masterpass-label class button-notsupported masterpass supported div placeholder masterpass button button sq-masterpass class button-masterpass button step 2 remove masterpass placeholder css classes stylesheet sqpaymentform example code includes css classes related masterpass visual placeholder simplify development testing delete css classes sqpaymentform css indicates wallet enabled message will appear wallet-not-enabled indicates masterpass button will appear button-masterpass step 3 disable masterpass parameter sqpaymentform object disable masterpass parameter sqpaymentform set digital wallet frame element false sqpaymentform js initialize masterpass placeholder masterpass false step 4 update methodssupported callback function sqpaymentform example code includes visual placeholder masterpass set methodssupported callback simplify development testing remove functionality deleting references visual placeholder methodssupported function methods var masterpasslabel document getelementbyid sq-masterpass-label methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none disable masterpass sqpaymentform want accept payment masterpass will need disable masterpass elements sqpaymentform sqpaymentform example code sqpaymentform sqpaymentform process overview disable masterpass sqpaymentform will need sqpaymentform remove masterpass placeholders payment page remove masterpass css classes stylesheet disable masterpass parameter sqpaymentform object update methodssupported callback function remove masterpass placeholders payment page remove masterpass css classes stylesheet disable masterpass parameter sqpaymentform object sqpaymentform update methodssupported callback function methodssupported step 1 remove masterpass placeholders payment page sqpaymentform example code includes two html placeholders masterpay delete sqpaymentform div sq-masterpass-label class button-notsupported masterpass supported div placeholder masterpass button button sq-masterpass class button-masterpass button div sq-masterpass-label class button-notsupported masterpass supported div placeholder masterpass button button sq-masterpass class button-masterpass button div sq-masterpass-label class button-notsupported div placeholder masterpass button button sq-masterpass class button-masterpass button step 2 remove masterpass placeholder css classes stylesheet sqpaymentform example code includes css classes related masterpass visual placeholder simplify development testing delete css classes sqpaymentform css sqpaymentform indicates wallet enabled message will appear wallet-not-enabled indicates masterpass button will appear button-masterpass indicates wallet enabled message will appear wallet-not-enabled indicates masterpass button will appear button-masterpass indicates wallet enabled message will appear wallet-not-enabled indicates masterpass button will appear button-masterpass step 3 disable masterpass parameter sqpaymentform object disable masterpass parameter sqpaymentform set digital wallet frame element false sqpaymentform js sqpaymentform false sqpaymentform js initialize masterpass placeholder masterpass false initialize masterpass placeholder masterpass false initialize masterpass placeholder false step 4 update methodssupported callback function methodssupported sqpaymentform example code includes visual placeholder masterpass set methodssupported callback simplify development testing remove functionality deleting references visual placeholder sqpaymentform methodssupported methodssupported function methods var masterpasslabel document getelementbyid sq-masterpass-label methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none methodssupported function methods var masterpasslabel document getelementbyid sq-masterpass-label methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none methodssupported function var sq-masterpass-label true inline-block none",tags:"",url:"/payments/sqpaymentform/config-masterpass-web"},{title:"SqPaymentForm Overview",
text:"SqPaymentForm Overview Specs at a glance Platform Web Resources Setup Guide C# Sample App sqpaymentform overview specs glance platform web resources setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app square hosts small javascript library includes javascript object sqpaymentform sqpaymentform secure pci-compliant javascript object accepts payment information generates encrypted payment token known card nonce used transactions api collect ecommerce payments page loads sqpaymentform looks html placeholders replaces iframes generate secure payment form accepts payments credit cards apple pay web masterpass specs glance platform web resources setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app specs glance platform web platform web web resources setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app resources setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app square hosts small javascript library includes javascript object sqpaymentform sqpaymentform secure pci-compliant javascript object accepts payment information generates encrypted payment token known card nonce used transactions api collect ecommerce payments page loads sqpaymentform looks html placeholders replaces iframes generate secure payment form accepts payments credit cards apple pay web masterpass square hosts small javascript library includes javascript object sqpaymentform sqpaymentform secure pci-compliant javascript object accepts payment information generates encrypted payment token known card nonce used transactions api collect ecommerce payments sqpaymentform sqpaymentform page loads sqpaymentform looks html placeholders replaces iframes generate secure payment form accepts payments credit cards apple pay web masterpass sqpaymentform requirements limitations sites square-hosted version sqpaymentform library application referencing copy javascript library hosted non-square server will disabled without notice square payment form generated webpage uses https credit card masterpass payments may tested localhost without using https https required apple pay transactions apple pay web requires domain registration apple sqpaymentform will render apple pay button unless apple indicates site domain valid nonces created digital wallets used store customer card file shipping address validation available digital wallets support address selection ui apple pay web square api sandbox support apple pay web time note digital wallet functionality apple pay web masterpass square payment form supported accounts based united states requirements limitations sites square-hosted version sqpaymentform library application referencing copy javascript library hosted non-square server will disabled without notice square payment form generated webpage uses https credit card masterpass payments may tested localhost without using https https required apple pay transactions apple pay web requires domain registration apple sqpaymentform will render apple pay button unless apple indicates site domain valid nonces created digital wallets used store customer card file shipping address validation available digital wallets support address selection ui apple pay web square api sandbox support apple pay web time sites square-hosted version sqpaymentform library application referencing copy javascript library hosted non-square server will disabled without notice sqpaymentform square payment form generated webpage uses https credit card masterpass payments may tested localhost without using https https required apple pay transactions localhost apple pay web requires domain registration apple sqpaymentform will render apple pay button unless apple indicates site domain valid sqpaymentform nonces created digital wallets used store customer card file customer card file shipping address validation available digital wallets support address selection ui apple pay web square api sandbox support apple pay web time note digital wallet functionality apple pay web masterpass square payment form supported accounts based united states note digital wallet functionality apple pay web masterpass square payment form supported accounts based united states note sqpaymentform data model sqpaymentform data model includes three primary elements sqpaymentform configuration fields sqpaymentform data fields define html placeholder names enable disable payment features control presentation form fields sqpaymentform callback functions sqpaymentform functions triggered specific events happen behavior functions fully customizable digital wallet paymentrequest objects data objects used specifically digital wallet payments formatted accordance requirements various wallet services apple pay web configuration fields sqpaymentform renders form based configuration data fields name type description applepay placeholder json object sets button placeholder apple pay web button applicationid string identifies calling form verified application generated square application dashboard cardnumber placeholder json object sets div placeholder text input field placeholder credit card number cvv placeholder json object sets div placeholder text input field placeholder credit card cvv expirationdate placeholder json object sets div placeholder text input field placeholder credit card expiration date masterpass placeholder json object sets button placeholder text placeholder masterpass button postalcode placeholder json object sets div placeholder text postal code input field placeholder inputclass string sets css class defines external styles text-input iframes inputstyles array inputstyle objects define internal styles applied rendered iframes placeholder json objects json object placeholder fields two string values elementid document object model dom placeholder element field required placeholder text string appears iframe first rendered field optional applies input field placeholders cardnumber field-name elementid dom placeholder optional text placeholders disabled setting associated field false example masterpass false inputstyle objects inputstyles field accepts array inputstyle objects define styles based window width interior iframe input fields font family color typically first entry style array sets default styles subsequent style objects modify styles based width screen used view payment form example inputstyles object provide values mediamaxwidth mediaminwidth styles applied screens sizes unless overridden another input style fontsize 24px padding 3px styles applied inputs screen width 400px smaller note specify value padding padding value previous object preserved mediamaxwidth 400px fontsize 18px css inputstyle objects applied sequentially particular style property set multiple inputstyles window width inputstyle appears last array takes precedence property sqpaymentform currently supports following inputstyles properties mediaminwidth minimum window width pixels set styles applies default value 0px mediamaxwidth maximum window width pixels set styles applies default value infinite backgroundcolor corresponds background-color css property accepts hexadecimal rgb css built-in color values boxshadow corresponds box-shadow css property color corresponds color css property accepts hexadecimal rgb css built-in color values fontfamily corresponds font-family css property accepts common web safe font names arial helvetica custom web fonts currently supported fontsize corresponds font-size css property accepts pixel px point pt proportional values fontweight corresponds font-weight css property lineheight corresponds line-height css property accepts pixel px point pt proportional values padding corresponds padding css property accepts pixel px point pt proportional values callback functions sqpaymentform object includes following callback functions cardnonceresponsereceived called sqpaymentform receives result nonce generation request result will valid credit card wallet nonce error createpaymentrequest passes transaction information digital wallet provider create wallet nonce called digital wallet button payment form clicked inputeventreceived called form interaction event occurs buyer filling payment form methodssupported called square js library page renders decide digital wallet button rendered payment form paymentformloaded called payment form iframes successfully added webpage unsupportedbrowserdetected called sqpaymentform detects page rendered unsupported browser validateshippingcontact called user pays digital wallet supports address selection requestshippingaddress true paymentrequest object user selects changes shipping information digital wallet ui callback functions customized control sqpaymentform interacts webpage embedded browser page rendered paymentrequest objects digital wallet services apple pay web expect payment requests specific format result fields createpaymentrequest function different square internal data types example monetary value amount payment form float rather integer line items digital wallet payment related square order object requestshippingaddress true requestbillinginfo true shippingcontact familyname customer last name givenname customer first name email mycustomer example com country usa region city san francisco addresslines 1455 market 600 postalcode 94103 currencycode usd countrycode total label merchant name amount total amount pending false lineitems label subtotal amount subtotal amount pending false label shipping amount shipping amount pending true label tax amount tax amount pending false paymentrequest fields name type description requestshippingaddress boolean required lets customers select shipping address digital wallet ui requestshippingaddress field valid digital wallets support address selection selected address returned sqcontact json object requestbillinginfo boolean required lets customers select billing address digital wallet ui requestbillinginfo field valid digital wallets support address selection selected address returned sqcontact json object shippingcontact sqcontact json object optional default shipping contact information will displayed digital wallet ui countrycode string required 2-letter iso 3166-1 alpha-2 country code currencycode string required 3-letter iso 4217 currency code lineitems array sqlineitem json object required list items included transaction information typically displayed digital wallet ui total sqlineitem json object required merchant name status total cost transaction information typically displayed digital wallet ui sqlineitem json object sqlineitem json object following fields label human-readable string explains purpose amount line item typically name charge object purchased total field typically merchant name amount cost object float 15 00 line item typically cost object subtotal additional charge taxes shipping total field total charge transaction equal sum line item amounts pending boolean indicating whether value amount field represents estimated unknown cost typically field false sqcontact json object sqcontact json object following fields familyname string containing last name contact givenname string containing first name contact email string containing email address contact country 2-letter string containing iso 3166-1 country code contact address countryname string containing full country name contact countryname read-only attribute based 2-letter country code country region string containing applicable administrative region province state contact address city string containing city name contact address addresslines array strings containing street address lines contact address postalcode string containing postal code contact address contact fields optional partial contact information allowed sqpaymentform data model sqpaymentform data model includes three primary elements sqpaymentform sqpaymentform configuration fields sqpaymentform data fields define html placeholder names enable disable payment features control presentation form fields sqpaymentform callback functions sqpaymentform functions triggered specific events happen behavior functions fully customizable digital wallet paymentrequest objects data objects used specifically digital wallet payments formatted accordance requirements various wallet services apple pay web sqpaymentform configuration fields sqpaymentform data fields define html placeholder names enable disable payment features control presentation form fields sqpaymentform configuration fields sqpaymentform sqpaymentform sqpaymentform callback functions sqpaymentform functions triggered specific events happen behavior functions fully customizable sqpaymentform callback functions sqpaymentform sqpaymentform digital wallet paymentrequest objects data objects used specifically digital wallet payments formatted accordance requirements various wallet services apple pay web digital wallet paymentrequest objects paymentrequest configuration fields sqpaymentform renders form based configuration data fields sqpaymentform name type description applepay placeholder json object sets button placeholder apple pay web button applicationid string identifies calling form verified application generated square application dashboard cardnumber placeholder json object sets div placeholder text input field placeholder credit card number cvv placeholder json object sets div placeholder text input field placeholder credit card cvv expirationdate placeholder json object sets div placeholder text input field placeholder credit card expiration date masterpass placeholder json object sets button placeholder text placeholder masterpass button postalcode placeholder json object sets div placeholder text postal code input field placeholder inputclass string sets css class defines external styles text-input iframes inputstyles array inputstyle objects define internal styles applied rendered iframes name type description name type description applepay placeholder json object sets button placeholder apple pay web button applepay placeholder json object sets button placeholder apple pay web button applicationid string identifies calling form verified application generated square application dashboard applicationid string identifies calling form verified application generated square application dashboard cardnumber placeholder json object sets div placeholder text input field placeholder credit card number cardnumber placeholder json object sets div placeholder text input field placeholder credit card number cvv placeholder json object sets div placeholder text input field placeholder credit card cvv cvv placeholder json object sets div placeholder text input field placeholder credit card cvv expirationdate placeholder json object sets div placeholder text input field placeholder credit card expiration date expirationdate placeholder json object sets div placeholder text input field placeholder credit card expiration date masterpass placeholder json object sets button placeholder text placeholder masterpass button masterpass placeholder json object sets button placeholder text placeholder masterpass button postalcode placeholder json object sets div placeholder text postal code input field placeholder postalcode placeholder json object sets div placeholder text postal code input field placeholder inputclass string sets css class defines external styles text-input iframes inputclass string sets css class defines external styles text-input iframes inputstyles array inputstyle objects define internal styles applied rendered iframes inputstyles array inputstyle objects define internal styles applied rendered iframes placeholder json objects json object placeholder fields two string values elementid document object model dom placeholder element field required placeholder text string appears iframe first rendered field optional applies input field placeholders cardnumber elementid document object model dom placeholder element field required elementid placeholder text string appears iframe first rendered field optional applies input field placeholders cardnumber placeholder field-name elementid dom placeholder optional text field-name elementid dom placeholder optional text elementid dom placeholder optional text placeholders disabled setting associated field false example masterpass false masterpass false false inputstyle objects inputstyles field accepts array inputstyle objects define styles based window width interior iframe input fields font family color typically first entry style array sets default styles subsequent style objects modify styles based width screen used view payment form example inputstyles inputstyle interior inputstyles object provide values mediamaxwidth mediaminwidth styles applied screens sizes unless overridden another input style fontsize 24px padding 3px styles applied inputs screen width 400px smaller note specify value padding padding value previous object preserved mediamaxwidth 400px fontsize 18px inputstyles object provide values mediamaxwidth mediaminwidth styles applied screens sizes unless overridden another input style fontsize 24px padding 3px styles applied inputs screen width 400px smaller note specify value padding padding value previous object preserved mediamaxwidth 400px fontsize 18px object provide values mediamaxwidth mediaminwidth styles applied screens sizes unless overridden another input style fontsize 24px padding 3px styles applied inputs screen width 400px smaller note specify value padding padding value previous object preserved mediamaxwidth 400px fontsize 18px css inputstyle objects applied sequentially particular style property set multiple inputstyles window width inputstyle appears last array takes precedence property inputstyle inputstyles inputstyle sqpaymentform currently supports following inputstyles properties sqpaymentform inputstyles mediaminwidth minimum window width pixels set styles applies default value 0px mediamaxwidth maximum window width pixels set styles applies default value infinite backgroundcolor corresponds background-color css property accepts hexadecimal rgb css built-in color values boxshadow corresponds box-shadow css property color corresponds color css property accepts hexadecimal rgb css built-in color values fontfamily corresponds font-family css property accepts common web safe font names arial helvetica custom web fonts currently supported fontsize corresponds font-size css property accepts pixel px point pt proportional values fontweight corresponds font-weight css property lineheight corresponds line-height css property accepts pixel px point pt proportional values padding corresponds padding css property accepts pixel px point pt proportional values mediaminwidth minimum window width pixels set styles applies default value 0px mediaminwidth mediamaxwidth maximum window width pixels set styles applies default value infinite mediamaxwidth backgroundcolor corresponds background-color css property accepts hexadecimal rgb css built-in color values backgroundcolor background-color boxshadow corresponds box-shadow css property boxshadow box-shadow color corresponds color css property accepts hexadecimal rgb css built-in color values color color fontfamily corresponds font-family css property accepts common web safe font names arial helvetica custom web fonts currently supported fontfamily font-family fontsize corresponds font-size css property accepts pixel px point pt proportional values fontsize font-size fontweight corresponds font-weight css property fontweight font-weight lineheight corresponds line-height css property accepts pixel px point pt proportional values lineheight line-height padding corresponds padding css property accepts pixel px point pt proportional values padding padding callback functions sqpaymentform object includes following callback functions cardnonceresponsereceived called sqpaymentform receives result nonce generation request result will valid credit card wallet nonce error createpaymentrequest passes transaction information digital wallet provider create wallet nonce called digital wallet button payment form clicked inputeventreceived called form interaction event occurs buyer filling payment form methodssupported called square js library page renders decide digital wallet button rendered payment form paymentformloaded called payment form iframes successfully added webpage unsupportedbrowserdetected called sqpaymentform detects page rendered unsupported browser validateshippingcontact called user pays digital wallet supports address selection requestshippingaddress true paymentrequest object user selects changes shipping information digital wallet ui cardnonceresponsereceived called sqpaymentform receives result nonce generation request result will valid credit card wallet nonce error cardnonceresponsereceived sqpaymentform createpaymentrequest passes transaction information digital wallet provider create wallet nonce called digital wallet button payment form clicked createpaymentrequest inputeventreceived called form interaction event occurs buyer filling payment form inputeventreceived methodssupported called square js library page renders decide digital wallet button rendered payment form methodssupported paymentformloaded called payment form iframes successfully added webpage paymentformloaded unsupportedbrowserdetected called sqpaymentform detects page rendered unsupported browser unsupportedbrowserdetected sqpaymentform validateshippingcontact called user pays digital wallet supports address selection requestshippingaddress true paymentrequest object user selects changes shipping information digital wallet ui validateshippingcontact requestshippingaddress paymentrequest callback functions customized control sqpaymentform interacts webpage embedded browser page rendered sqpaymentform paymentrequest objects digital wallet services apple pay web expect payment requests specific format result fields createpaymentrequest function different square internal data types example monetary value amount payment form float rather integer line items digital wallet payment related square order object createpaymentrequest square internal data types requestshippingaddress true requestbillinginfo true shippingcontact familyname customer last name givenname customer first name email mycustomer example com country usa region city san francisco addresslines 1455 market 600 postalcode 94103 currencycode usd countrycode total label merchant name amount total amount pending false lineitems label subtotal amount subtotal amount pending false label shipping amount shipping amount pending true label tax amount tax amount pending false requestshippingaddress true requestbillinginfo true shippingcontact familyname customer last name givenname customer first name email mycustomer example com country usa region city san francisco addresslines 1455 market 600 postalcode 94103 currencycode usd countrycode total label merchant name amount total amount pending false lineitems label subtotal amount subtotal amount pending false label shipping amount shipping amount pending true label tax amount tax amount pending false requestshippingaddress true requestbillinginfo true shippingcontact familyname customer last name givenname customer first name email mycustomer example com country usa region city san francisco addresslines 1455 market 600 postalcode 94103 usd countrycode total label merchant name amount total amount pending false lineitems label subtotal amount subtotal amount pending false label shipping amount shipping amount pending true label tax amount tax amount pending false paymentrequest fields name type description requestshippingaddress boolean required lets customers select shipping address digital wallet ui requestshippingaddress field valid digital wallets support address selection selected address returned sqcontact json object requestbillinginfo boolean required lets customers select billing address digital wallet ui requestbillinginfo field valid digital wallets support address selection selected address returned sqcontact json object shippingcontact sqcontact json object optional default shipping contact information will displayed digital wallet ui countrycode string required 2-letter iso 3166-1 alpha-2 country code currencycode string required 3-letter iso 4217 currency code lineitems array sqlineitem json object required list items included transaction information typically displayed digital wallet ui total sqlineitem json object required merchant name status total cost transaction information typically displayed digital wallet ui name type description name type description requestshippingaddress boolean required lets customers select shipping address digital wallet ui requestshippingaddress field valid digital wallets support address selection selected address returned sqcontact json object requestshippingaddress boolean required lets customers select shipping address digital wallet ui requestshippingaddress field valid digital wallets support address selection selected address returned sqcontact json object requestbillinginfo boolean required lets customers select billing address digital wallet ui requestbillinginfo field valid digital wallets support address selection selected address returned sqcontact json object requestbillinginfo boolean required lets customers select billing address digital wallet ui requestbillinginfo field valid digital wallets support address selection selected address returned sqcontact json object shippingcontact sqcontact json object optional default shipping contact information will displayed digital wallet ui shippingcontact sqcontact json object optional default shipping contact information will displayed digital wallet ui countrycode string required 2-letter iso 3166-1 alpha-2 country code countrycode string required 2-letter iso 3166-1 alpha-2 country code currencycode string required 3-letter iso 4217 currency code currencycode string required 3-letter iso 4217 currency code lineitems array sqlineitem json object required list items included transaction information typically displayed digital wallet ui lineitems array sqlineitem json object required list items included transaction information typically displayed digital wallet ui total sqlineitem json object required merchant name status total cost transaction information typically displayed digital wallet ui total sqlineitem json object required merchant name status total cost transaction information typically displayed digital wallet ui sqlineitem json object sqlineitem json object following fields sqlineitem label human-readable string explains purpose amount line item typically name charge object purchased total field typically merchant name amount cost object float 15 00 line item typically cost object subtotal additional charge taxes shipping total field total charge transaction equal sum line item amounts pending boolean indicating whether value amount field represents estimated unknown cost typically field false label human-readable string explains purpose amount line item typically name charge object purchased total field typically merchant name label amount cost object float 15 00 line item typically cost object subtotal additional charge taxes shipping total field total charge transaction equal sum line item amounts amount pending boolean indicating whether value amount field represents estimated unknown cost typically field false pending false sqcontact json object sqcontact json object following fields sqcontact familyname string containing last name contact givenname string containing first name contact email string containing email address contact country 2-letter string containing iso 3166-1 country code contact address countryname string containing full country name contact countryname read-only attribute based 2-letter country code country region string containing applicable administrative region province state contact address city string containing city name contact address addresslines array strings containing street address lines contact address postalcode string containing postal code contact address familyname string containing last name contact givenname string containing first name contact email string containing email address contact country 2-letter string containing iso 3166-1 country code contact address iso 3166-1 country code countryname string containing full country name contact countryname read-only attribute based 2-letter country code country countryname read-only country region string containing applicable administrative region province state contact address city string containing city name contact address addresslines array strings containing street address lines contact address postalcode string containing postal code contact address contact fields optional partial contact information allowed works sqpaymentform process flow sqpaymentform looks placeholder html elements generate secure payment form supports payments credit cards apple pay web masterpass general steps rendering payment form requesting nonce customer opens page loads sqpaymentform library sqpaymentform checks see browser compatible unsupportedbrowserdetected callback triggers ends process methodssupported callback triggers checks see available digital wallets enabled supported sqpaymentform replaces html placeholders iframes paymentformloaded callback triggers customer clicks digital wallet button clicks pay card digital wallet clicked createpaymentrequest callback triggers validateshippingcontact callback also triggered digital wallet supports address selection user selects changes shipping address digital wallet ui pay card clicked javascript page calls sqpaymentform requestcardnonce function cardnonceresponsereceived callback triggers javascript page handles nonce response nonce generation succeeds set hidden nonce field submit form nonce generation fails handle errors provide feedback customer cardnonceresponsereceived callback cardnonceresponsereceived callback includes following parameters errors array json objects describe errors occurred nonce creation null creation succeeded json object three fields type programmatic description error message human-readable description error field input field caused error nonce string representing nonce created null error occurred nonce values expire 24 hours carddata json object containing non-confidential information customer credit card null error occurred card_brand enum value indicating brand credit card used americanexpress discover discoverdiners jcb mastercard unionpay unknown visa last_4 last 4 digits card number exp_month 2-digit month expiration date exp_year 4-digit year expiration date billing_postal_code postal code provided null postal code disabled digital_wallet_type enum value indicating type digital wallet contains credit card applepay masterpass none billingcontact sqcontact json object containing billing contact information provided digital wallet ui supports address selection shippingcontact sqcontact json object containing shipping contact information provided digital wallet ui supports address selection note billingcontact shippingcontact fields valid users paying digital wallet supports address selection user prompted provide contact information even parameters set address information provided digital wallet ui fields guaranteed present nonce generation errors common nonce generation errors validation_error provided data invalid invalid_application_id application provided initializing payment form invalid missing_application_id application provided initializing payment form missing_card_data one card data fields filled payment form too_many_requests application generated many nonce generation requests short time try later unauthorized application authorized connect api accept online payments unknown unknown error occurred validateshippingcontact callback validateshippingcontact callback triggered requestshippingaddress true paymentrequest object sent digital wallet supports address selection user selects modifies shipping address digital wallet ui validation succeeds validateshippingcontact return null validation fails validateshippingcontact return sqvalidationerrors json object validateshippingcontact callback customizable used take additional action verify contact information provided digital wallet example wine merchant validateshippingcontact verify ship alcohol state indicated shipping address sqvalidationerrors json object sqvalidationerrors object includes following fields country array 1 human-readable strings explaining country provided invalid region array 1 human-readable strings explaining region provided invalid city array 1 human-readable strings explaining city provided invalid addresslines array 1 human-readable strings explaining address lines provided invalid postalcode array 1 human-readable strings explaining postal code provided invalid fields sqvalidationerrors object optional least one field set shipping address provided validateshippingcontact fails validation inputeventreceived callback inputeventreceived callback operates independently main nonce generation workflow callback customizable used take additional action one following event types detected focusclassadded form field gained focus corresponding focus css class added element focusclassremoved form field lost focus corresponding focus css class removed element errorclassadded form field invalid value corresponding error css class added element errorclassremoved invalid value form field corrected corresponding error css class removed element cardbrandchanged payment form detected new likely credit card brand based card number postalcodechanged current value postal code form field changed inputeventreceived callback includes inputevent parameter provides actionable information event example cardbrand mastercard elementid sq-card-number eventtype focusclassremoved field cardnumber currentstate haserrorclass false hasfocusclass false iscompletelyvalid true ispotentiallyvalid true previousstate haserrorclass false hasfocusclass true iscompletelyvalid false ispotentiallyvalid true fields inputevent parameter updated time customer interacts form name type description cardbrand string enum value indicating likely brand customer card indicated current value credit card number input field americanexpress discover discoverdiners jcb mastercard unionpay unknown visa elementid string payment form field event applies eventtype string inputeventreceived event detected field string sqpaymentform field event applies cardnumber postalcode cvv expirationdate currentstate input state json object current state payment form field event applies previousstate input state json object state payment form field immediately event occurred compare field currentstatefield determine may changed input state json objects input state json object includes following boolean fields haserrorclass field true form input invalid value corresponding error css class applied input hasfocusclass field true form input focus corresponding focus css class applied input ispotentiallyvalid field true value input field meets validation requirements value meet expected length input iscompletelyvalid field true value input meets validation requirements input including length character-type requirement values ispotentiallyvalid iscompletelyvalid will change form input changes used combination determine problem form input example ispotentiallyvalid will true credit card number input field current value 123 even though value long enough actual credit card contains numeric characters comparison iscompletelyvalid will false credit card number input field correct length consists numeric characters works sqpaymentform process flow sqpaymentform looks placeholder html elements generate secure payment form supports payments credit cards apple pay web masterpass general steps rendering payment form requesting nonce sqpaymentform customer opens page loads sqpaymentform library sqpaymentform checks see browser compatible unsupportedbrowserdetected callback triggers ends process methodssupported callback triggers checks see available digital wallets enabled supported sqpaymentform replaces html placeholders iframes paymentformloaded callback triggers customer clicks digital wallet button clicks pay card digital wallet clicked createpaymentrequest callback triggers validateshippingcontact callback also triggered digital wallet supports address selection user selects changes shipping address digital wallet ui pay card clicked javascript page calls sqpaymentform requestcardnonce function cardnonceresponsereceived callback triggers javascript page handles nonce response nonce generation succeeds set hidden nonce field submit form nonce generation fails handle errors provide feedback customer customer opens page loads sqpaymentform library sqpaymentform sqpaymentform checks see browser compatible unsupportedbrowserdetected callback triggers ends process sqpaymentform unsupportedbrowserdetected methodssupported callback triggers checks see available digital wallets enabled supported methodssupported sqpaymentform replaces html placeholders iframes paymentformloaded callback triggers sqpaymentform paymentformloaded customer clicks digital wallet button clicks pay card digital wallet clicked createpaymentrequest callback triggers validateshippingcontact callback also triggered digital wallet supports address selection user selects changes shipping address digital wallet ui pay card clicked javascript page calls sqpaymentform requestcardnonce function digital wallet clicked createpaymentrequest callback triggers validateshippingcontact callback also triggered digital wallet supports address selection user selects changes shipping address digital wallet ui pay card clicked javascript page calls sqpaymentform requestcardnonce function digital wallet clicked createpaymentrequest callback triggers validateshippingcontact callback also triggered digital wallet supports address selection user selects changes shipping address digital wallet ui digital wallet clicked createpaymentrequest validateshippingcontact pay card clicked javascript page calls sqpaymentform requestcardnonce function pay card clicked sqpaymentform requestcardnonce cardnonceresponsereceived callback triggers cardnonceresponsereceived javascript page handles nonce response nonce generation succeeds set hidden nonce field submit form nonce generation fails handle errors provide feedback customer nonce generation succeeds set hidden nonce field submit form nonce generation fails handle errors provide feedback customer nonce generation succeeds set hidden nonce field submit form nonce generation succeeds nonce generation fails handle errors provide feedback customer nonce generation fails cardnonceresponsereceived callback cardnonceresponsereceived callback includes following parameters cardnonceresponsereceived errors array json objects describe errors occurred nonce creation null creation succeeded json object three fields type programmatic description error message human-readable description error field input field caused error nonce string representing nonce created null error occurred nonce values expire 24 hours carddata json object containing non-confidential information customer credit card null error occurred card_brand enum value indicating brand credit card used americanexpress discover discoverdiners jcb mastercard unionpay unknown visa last_4 last 4 digits card number exp_month 2-digit month expiration date exp_year 4-digit year expiration date billing_postal_code postal code provided null postal code disabled digital_wallet_type enum value indicating type digital wallet contains credit card applepay masterpass none billingcontact sqcontact json object containing billing contact information provided digital wallet ui supports address selection shippingcontact sqcontact json object containing shipping contact information provided digital wallet ui supports address selection errors array json objects describe errors occurred nonce creation null creation succeeded json object three fields type programmatic description error message human-readable description error field input field caused error errors type programmatic description error message human-readable description error field input field caused error type programmatic description error type message human-readable description error message field input field caused error field nonce string representing nonce created null error occurred nonce values expire 24 hours nonce nonce values expire 24 hours carddata json object containing non-confidential information customer credit card null error occurred card_brand enum value indicating brand credit card used americanexpress discover discoverdiners jcb mastercard unionpay unknown visa last_4 last 4 digits card number exp_month 2-digit month expiration date exp_year 4-digit year expiration date billing_postal_code postal code provided null postal code disabled digital_wallet_type enum value indicating type digital wallet contains credit card applepay masterpass none carddata card_brand enum value indicating brand credit card used americanexpress discover discoverdiners jcb mastercard unionpay unknown visa last_4 last 4 digits card number exp_month 2-digit month expiration date exp_year 4-digit year expiration date billing_postal_code postal code provided null postal code disabled digital_wallet_type enum value indicating type digital wallet contains credit card applepay masterpass none card_brand enum value indicating brand credit card used americanexpress discover discoverdiners jcb mastercard unionpay unknown visa card_brand americanexpress discover discoverdiners jcb mastercard unionpay unknown visa last_4 last 4 digits card number last_4 exp_month 2-digit month expiration date exp_month exp_year 4-digit year expiration date exp_year billing_postal_code postal code provided null postal code disabled billing_postal_code digital_wallet_type enum value indicating type digital wallet contains credit card applepay masterpass none digital_wallet_type applepay masterpass none billingcontact sqcontact json object containing billing contact information provided digital wallet ui supports address selection billingcontact sqcontact shippingcontact sqcontact json object containing shipping contact information provided digital wallet ui supports address selection shippingcontact sqcontact note billingcontact shippingcontact fields valid users paying digital wallet supports address selection user prompted provide contact information even parameters set address information provided digital wallet ui fields guaranteed present note billingcontact shippingcontact fields valid users paying digital wallet supports address selection user prompted provide contact information even parameters set address information provided digital wallet ui fields guaranteed present note billingcontact shippingcontact nonce generation errors common nonce generation errors validation_error provided data invalid invalid_application_id application provided initializing payment form invalid missing_application_id application provided initializing payment form missing_card_data one card data fields filled payment form too_many_requests application generated many nonce generation requests short time try later unauthorized application authorized connect api accept online payments unknown unknown error occurred validation_error provided data invalid validation_error invalid_application_id application provided initializing payment form invalid invalid_application_id missing_application_id application provided initializing payment form missing_application_id missing_card_data one card data fields filled payment form missing_card_data too_many_requests application generated many nonce generation requests short time try later too_many_requests unauthorized application authorized connect api accept online payments unauthorized unknown unknown error occurred unknown validateshippingcontact callback validateshippingcontact callback triggered requestshippingaddress true paymentrequest object sent digital wallet supports address selection user selects modifies shipping address digital wallet ui validateshippingcontact requestshippingaddress true paymentrequest validation succeeds validateshippingcontact return null validation fails validateshippingcontact return sqvalidationerrors json object validation succeeds validateshippingcontact return null validation succeeds null validation fails validateshippingcontact return sqvalidationerrors json object validation fails sqvalidationerrors validateshippingcontact callback customizable used take additional action verify contact information provided digital wallet example wine merchant validateshippingcontact verify ship alcohol state indicated shipping address validateshippingcontact validateshippingcontact sqvalidationerrors json object sqvalidationerrors object includes following fields sqvalidationerrors country array 1 human-readable strings explaining country provided invalid region array 1 human-readable strings explaining region provided invalid city array 1 human-readable strings explaining city provided invalid addresslines array 1 human-readable strings explaining address lines provided invalid postalcode array 1 human-readable strings explaining postal code provided invalid country array 1 human-readable strings explaining country provided invalid region array 1 human-readable strings explaining region provided invalid city array 1 human-readable strings explaining city provided invalid addresslines array 1 human-readable strings explaining address lines provided invalid postalcode array 1 human-readable strings explaining postal code provided invalid fields sqvalidationerrors object optional least one field set shipping address provided validateshippingcontact fails validation sqvalidationerrors validateshippingcontact inputeventreceived callback inputeventreceived callback operates independently main nonce generation workflow callback customizable used take additional action one following event types detected inputeventreceived focusclassadded form field gained focus corresponding focus css class added element focusclassremoved form field lost focus corresponding focus css class removed element errorclassadded form field invalid value corresponding error css class added element errorclassremoved invalid value form field corrected corresponding error css class removed element cardbrandchanged payment form detected new likely credit card brand based card number postalcodechanged current value postal code form field changed focusclassadded form field gained focus corresponding focus css class added element focusclassadded focusclassremoved form field lost focus corresponding focus css class removed element focusclassremoved errorclassadded form field invalid value corresponding error css class added element errorclassadded errorclassremoved invalid value form field corrected corresponding error css class removed element errorclassremoved cardbrandchanged payment form detected new likely credit card brand based card number cardbrandchanged postalcodechanged current value postal code form field changed postalcodechanged inputeventreceived callback includes inputevent parameter provides actionable information event example inputeventreceived inputevent cardbrand mastercard elementid sq-card-number eventtype focusclassremoved field cardnumber currentstate haserrorclass false hasfocusclass false iscompletelyvalid true ispotentiallyvalid true previousstate haserrorclass false hasfocusclass true iscompletelyvalid false ispotentiallyvalid true cardbrand mastercard elementid sq-card-number eventtype focusclassremoved field cardnumber currentstate haserrorclass false hasfocusclass false iscompletelyvalid true ispotentiallyvalid true previousstate haserrorclass false hasfocusclass true iscompletelyvalid false ispotentiallyvalid true cardbrand mastercard elementid sq-card-number eventtype focusclassremoved field cardnumber currentstate haserrorclass false hasfocusclass false iscompletelyvalid true ispotentiallyvalid true previousstate haserrorclass false hasfocusclass true iscompletelyvalid false ispotentiallyvalid true fields inputevent parameter updated time customer interacts form name type description cardbrand string enum value indicating likely brand customer card indicated current value credit card number input field americanexpress discover discoverdiners jcb mastercard unionpay unknown visa elementid string payment form field event applies eventtype string inputeventreceived event detected field string sqpaymentform field event applies cardnumber postalcode cvv expirationdate currentstate input state json object current state payment form field event applies previousstate input state json object state payment form field immediately event occurred compare field currentstatefield determine may changed name type description name type description cardbrand string enum value indicating likely brand customer card indicated current value credit card number input field americanexpress discover discoverdiners jcb mastercard unionpay unknown visa cardbrand string enum value indicating likely brand customer card indicated current value credit card number input field americanexpress discover discoverdiners jcb mastercard unionpay unknown visa elementid string payment form field event applies elementid string payment form field event applies eventtype string inputeventreceived event detected eventtype string inputeventreceived event detected field string sqpaymentform field event applies cardnumber postalcode cvv expirationdate field string sqpaymentform field event applies cardnumber postalcode cvv expirationdate currentstate input state json object current state payment form field event applies currentstate input state json object current state payment form field event applies previousstate input state json object state payment form field immediately event occurred compare field currentstatefield determine may changed previousstate input state json object state payment form field immediately event occurred compare field currentstatefield determine may changed input state json objects input state json object includes following boolean fields haserrorclass field true form input invalid value corresponding error css class applied input hasfocusclass field true form input focus corresponding focus css class applied input ispotentiallyvalid field true value input field meets validation requirements value meet expected length input iscompletelyvalid field true value input meets validation requirements input including length character-type requirement haserrorclass field true form input invalid value corresponding error css class applied input haserrorclass true hasfocusclass field true form input focus corresponding focus css class applied input hasfocusclass true ispotentiallyvalid field true value input field meets validation requirements value meet expected length input ispotentiallyvalid true iscompletelyvalid field true value input meets validation requirements input including length character-type requirement iscompletelyvalid true values ispotentiallyvalid iscompletelyvalid will change form input changes used combination determine problem form input example ispotentiallyvalid will true credit card number input field current value 123 even though value long enough actual credit card contains numeric characters comparison iscompletelyvalid will false credit card number input field correct length consists numeric characters ispotentiallyvalid iscompletelyvalid ispotentiallyvalid iscompletelyvalid next steps learn embed square payment form recommend reading sqpaymentform setup guide learn transactions api recommend reading transactions api overview learn storing customer cards file recommend reading createcustomercard endpoint reference next steps learn embed square payment form recommend reading sqpaymentform setup guide learn transactions api recommend reading transactions api overview learn storing customer cards file recommend reading createcustomercard endpoint reference learn embed square payment form recommend reading sqpaymentform setup guide sqpaymentform setup guide learn transactions api recommend reading transactions api overview transactions api overview learn storing customer cards file recommend reading createcustomercard endpoint reference createcustomercard endpoint reference",
tags:"",url:"/payments/sqpaymentform/sqpaymentform-overview"},{title:"SqPaymentForm Setup Guide",
text:"SqPaymentForm Setup Guide This document provides guidance for embedding the Square Payment Form object sqpaymentform setup guide document provides guidance embedding square payment form object sqpaymentform custom webpage information square payment form works please see sqpaymentform overview document provides guidance embedding square payment form object sqpaymentform custom webpage information square payment form works please see sqpaymentform overview document provides guidance embedding square payment form object sqpaymentform custom webpage information square payment form works please see sqpaymentform overview sqpaymentform sqpaymentform overview prerequisites square payment form following true square account create square account minutes signup page already one ecommerce site sells products services line square terms service ecommerce site hosted system supports server-side processing html forms php ruby asp java pages hosting solutions support html pages sqpaymentform process payments using https credit card masterpass payments may tested sqpaymentform localhost without using https https verified domain apple pay web site visitors using current version modern standard web browser site visitors running internet explorer ie 10 later plan sqpaymentform ecommerce site enabled payment processing account sure visit squareup com activate continuing note digital wallet functionality apple pay web masterpass square payment form supported accounts based united states prerequisites square payment form following true square account create square account minutes signup page already one ecommerce site sells products services line square terms service ecommerce site hosted system supports server-side processing html forms php ruby asp java pages hosting solutions support html pages sqpaymentform process payments using https credit card masterpass payments may tested sqpaymentform localhost without using https https verified domain apple pay web site visitors using current version modern standard web browser site visitors running internet explorer ie 10 later square account create square account minutes signup page already one create square account ecommerce site sells products services line square terms service square terms service ecommerce site hosted system supports server-side processing html forms php ruby asp java pages hosting solutions support html pages sqpaymentform process payments sqpaymentform using https credit card masterpass payments may tested sqpaymentform localhost without using https https verified domain apple pay web sqpaymentform localhost site visitors using current version modern standard web browser site visitors running internet explorer ie 10 later plan sqpaymentform ecommerce site enabled payment processing account sure visit squareup com activate continuing sqpaymentform squareup com activate note digital wallet functionality apple pay web masterpass square payment form supported accounts based united states note digital wallet functionality apple pay web masterpass square payment form supported accounts based united states note assumptions guide makes following assumptions read sqpaymentform overview how-to guide cover general functionality service create run websites localhost development server familiar html css javascript new web development recommend reading html js making webpages interactive kahnacademy getting started web mozilla taking web development course code academy continuing assumptions guide makes following assumptions read sqpaymentform overview how-to guide cover general functionality service create run websites localhost development server familiar html css javascript new web development recommend reading html js making webpages interactive kahnacademy getting started web mozilla taking web development course code academy continuing read sqpaymentform overview how-to guide cover general functionality service sqpaymentform overview create run websites localhost development server familiar html css javascript new web development recommend reading html js making webpages interactive kahnacademy getting started web mozilla taking web development course code academy continuing html js making webpages interactive getting started web web development course process overview sqpaymentform generates encrypted payment token known nonce square transactions api embedding square payment form page collect payment information requires following steps update head section payment page add html form payment page implement sqpaymentform object functions implement sqpaymentform styles set application location test payment form configure disable digital wallet payments document also provides guidance customizing behavior payment form including removing postal code requirement customizing cardnonceresponsereceived customizing validateshippingcontact customizing unsupportedbrowserdetected customizing paymentformloaded customizing sqpaymentform styles process overview sqpaymentform generates encrypted payment token known nonce square transactions api embedding square payment form page collect payment information requires following steps sqpaymentform update head section payment page add html form payment page implement sqpaymentform object functions implement sqpaymentform styles set application location test payment form configure disable digital wallet payments update head section payment page head add html form payment page implement sqpaymentform object functions sqpaymentform implement sqpaymentform styles sqpaymentform set application location test payment form configure disable digital wallet payments document also provides guidance customizing behavior payment form including removing postal code requirement customizing cardnonceresponsereceived customizing validateshippingcontact customizing unsupportedbrowserdetected customizing paymentformloaded customizing sqpaymentform styles removing postal code requirement customizing cardnonceresponsereceived cardnonceresponsereceived customizing validateshippingcontact validateshippingcontact customizing unsupportedbrowserdetected unsupportedbrowserdetected customizing paymentformloaded paymentformloaded customizing sqpaymentform styles sqpaymentform step 1 update head section payment page include sqpaymentform library implementation files add following references payment page copy link sqpaymentform library script type text javascript src https js squareup com v2 paymentform script link local sqpaymentform initialization script type text javascript src path sqpaymentform js script link custom styles sqpaymentform link rel stylesheet type text css href path sqpaymentform css references serves specific purpose js squareup com v2 paymentform square canonical javascript library sqpaymentform payment form will work without reference sqpaymentform js local javascript file create step 3 configure initialize sqpaymentform object sqpaymentform css local css file stylesheet create step 4 customize look payment form tip name local javascript css files whatever like used sqpaymentform guide reflect fact related sqpaymentform functionality choose add example code existing javascript css files wish step 1 update head section payment page head include sqpaymentform library implementation files add following references payment page sqpaymentform copy link sqpaymentform library script type text javascript src https js squareup com v2 paymentform script link local sqpaymentform initialization script type text javascript src path sqpaymentform js script link custom styles sqpaymentform link rel stylesheet type text css href path sqpaymentform css copy link sqpaymentform library script type text javascript src https js squareup com v2 paymentform script link local sqpaymentform initialization script type text javascript src path sqpaymentform js script link custom styles sqpaymentform link rel stylesheet type text css href path sqpaymentform css script type text javascript src https js squareup com v2 paymentform script script type text javascript src path sqpaymentform js script stylesheet text css path sqpaymentform css references serves specific purpose js squareup com v2 paymentform square canonical javascript library sqpaymentform payment form will work without reference sqpaymentform js local javascript file create step 3 configure initialize sqpaymentform object sqpaymentform css local css file stylesheet create step 4 customize look payment form js squareup com v2 paymentform square canonical javascript library sqpaymentform payment form will work without reference js squareup com v2 paymentform sqpaymentform sqpaymentform js local javascript file create step 3 configure initialize sqpaymentform object sqpaymentform js local javascript file sqpaymentform css local css file stylesheet create step 4 customize look payment form sqpaymentform css local css file tip name local javascript css files whatever like used sqpaymentform guide reflect fact related sqpaymentform functionality choose add example code existing javascript css files wish tip name local javascript css files whatever like used sqpaymentform guide reflect fact related sqpaymentform functionality choose add example code existing javascript css files wish tip sqpaymentform step 2 add html form payment page example html form create minimal payment form payment page copy div sq-ccbox replace action attribute form path url want post nonce example process-card form nonce-form novalidate action path payment processing page method post pay credit card table tbody tr td card number td td div sq-card-number div td tr tr td cvv td td div sq-cvv div td tr tr td expiration date td td div sq-expiration-date div td tr tr td postal code td td div sq-postal-code div td tr tr td colspan 2 button sq-creditcard class button-credit-card onclick requestcardnonce event pay card button td tr tbody table nonce generated will assigned hidden input field input type hidden card-nonce name nonce form div div sq-walletbox pay digital wallet div sq-apple-pay-label class wallet-not-enabled apple pay web enabled div placeholder apple pay web button button sq-apple-pay class button-apple-pay button div sq-masterpass-label class wallet-not-enabled masterpass enabled div placeholder masterpass button button sq-masterpass class button-masterpass button div remember update action parameter path payment processing page addition iframe placeholders support elements html sample includes two html elements structure payment form sq-ccbox collects html elements related credit card payments sq-walletbox collects html elements related digital wallet payments objects provided help group payment form elements completely optional step 2 add html form payment page example html form create minimal payment form payment page copy div sq-ccbox replace action attribute form path url want post nonce example process-card form nonce-form novalidate action path payment processing page method post pay credit card table tbody tr td card number td td div sq-card-number div td tr tr td cvv td td div sq-cvv div td tr tr td expiration date td td div sq-expiration-date div td tr tr td postal code td td div sq-postal-code div td tr tr td colspan 2 button sq-creditcard class button-credit-card onclick requestcardnonce event pay card button td tr tbody table nonce generated will assigned hidden input field input type hidden card-nonce name nonce form div div sq-walletbox pay digital wallet div sq-apple-pay-label class wallet-not-enabled apple pay web enabled div placeholder apple pay web button button sq-apple-pay class button-apple-pay button div sq-masterpass-label class wallet-not-enabled masterpass enabled div placeholder masterpass button button sq-masterpass class button-masterpass button div copy div sq-ccbox replace action attribute form path url want post nonce example process-card form nonce-form novalidate action path payment processing page method post pay credit card table tbody tr td card number td td div sq-card-number div td tr tr td cvv td td div sq-cvv div td tr tr td expiration date td td div sq-expiration-date div td tr tr td postal code td td div sq-postal-code div td tr tr td colspan 2 button sq-creditcard class button-credit-card onclick requestcardnonce event pay card button td tr tbody table nonce generated will assigned hidden input field input type hidden card-nonce name nonce form div div sq-walletbox pay digital wallet div sq-apple-pay-label class wallet-not-enabled apple pay web enabled div placeholder apple pay web button button sq-apple-pay class button-apple-pay button div sq-masterpass-label class wallet-not-enabled masterpass enabled div placeholder masterpass button button sq-masterpass class button-masterpass button div div sq-ccbox replace action attribute form path url want post nonce example process-card form nonce-form novalidate action path payment processing page method post table tbody tr td td td div sq-card-number div td tr tr td td td div sq-cvv div td tr tr td td td div sq-expiration-date div td tr tr td td td div sq-postal-code div td tr tr td colspan 2 button sq-creditcard class button-credit-card onclick requestcardnonce event button td tr tbody table nonce generated will assigned hidden input field input type hidden card-nonce name nonce form div div sq-walletbox div sq-apple-pay-label class wallet-not-enabled div placeholder apple pay web button button sq-apple-pay class button-apple-pay button div sq-masterpass-label class wallet-not-enabled div placeholder masterpass button button sq-masterpass class button-masterpass button div remember update action parameter path payment processing page addition iframe placeholders support elements html sample includes two html elements structure payment form sq-ccbox collects html elements related credit card payments sq-walletbox collects html elements related digital wallet payments sq-ccbox collects html elements related credit card payments sq-ccbox sq-walletbox collects html elements related digital wallet payments sq-walletbox objects provided help group payment form elements completely optional step 3 implement sqpaymentform object functions sqpaymentform object relies ajax generate requested payment nonce implement form define customize expected callback functions form triggers form styles create javascript file sqpaymentform js using following coding template copy set application var applicationid set location var locationid function requestcardnonce requestcardnonce triggered pay credit card button clicked modifying function required customized wish take additional action form button clicked function requestcardnonce event submit form sqpaymentform returns nonce event preventdefault request nonce sqpaymentform object paymentform requestcardnonce create initialize payment form object var paymentform new sqpaymentform initialize payment form elements applicationid applicationid locationid locationid inputclass sq-input customize css sqpaymentform iframe elements inputstyles fontsize 9em initialize apple pay placeholder applepay elementid sq-apple-pay initialize masterpass placeholder masterpass elementid sq-masterpass initialize credit card placeholders cardnumber elementid sq-card-number placeholder cvv elementid sq-cvv placeholder cvv expirationdate elementid sq-expiration-date placeholder mm yy postalcode elementid sq-postal-code sqpaymentform callback functions callbacks callback function methodssupported triggered page loaded methodssupported function methods var applepaybtn document getelementbyid sq-apple-pay var applepaylabel document getelementbyid sq-apple-pay-label var masterpassbtn document getelementbyid sq-masterpass var masterpasslabel document getelementbyid sq-masterpass-label show button apple pay web enabled otherwise display wallet enabled message methods applepay true applepaybtn style display inline-block applepaylabel style display none show button masterpass enabled otherwise display wallet enabled message methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson callback function validateshippingcontact triggered shipping address selected changed digital wallet ui supports address selection validateshippingcontact function contact var validationerrorobj add code set validationerrorobj errors found return validationerrorobj callback function cardnonceresponsereceived triggered sqpaymentform completes card nonce request cardnonceresponsereceived function errors nonce carddata errors log errors nonce generation javascript console console log encountered errors errors foreach function error console log error message return alert nonce received nonce testing assign nonce value hidden form field document getelementbyid card-nonce value nonce post nonce form payment processing page document getelementbyid nonce-form submit callback function unsupportedbrowserdetected triggered page loads unsupported browser detected unsupportedbrowserdetected function provide feedback site visitors callback function inputeventreceived triggered visitors interact sqpaymentform iframe elements inputeventreceived function inputevent switch inputevent eventtype case focusclassadded handle desired break case focusclassremoved handle desired break case errorclassadded handle desired break case errorclassremoved handle desired break case cardbrandchanged handle desired break case postalcodechanged handle desired break callback function paymentformloaded triggered sqpaymentform fully loaded paymentformloaded function handle desired step 3 implement sqpaymentform object functions sqpaymentform object relies ajax generate requested payment nonce implement form define customize expected callback functions form triggers form styles sqpaymentform create javascript file sqpaymentform js using following coding template sqpaymentform js copy set application var applicationid set location var locationid function requestcardnonce requestcardnonce triggered pay credit card button clicked modifying function required customized wish take additional action form button clicked function requestcardnonce event submit form sqpaymentform returns nonce event preventdefault request nonce sqpaymentform object paymentform requestcardnonce create initialize payment form object var paymentform new sqpaymentform initialize payment form elements applicationid applicationid locationid locationid inputclass sq-input customize css sqpaymentform iframe elements inputstyles fontsize 9em initialize apple pay placeholder applepay elementid sq-apple-pay initialize masterpass placeholder masterpass elementid sq-masterpass initialize credit card placeholders cardnumber elementid sq-card-number placeholder cvv elementid sq-cvv placeholder cvv expirationdate elementid sq-expiration-date placeholder mm yy postalcode elementid sq-postal-code sqpaymentform callback functions callbacks callback function methodssupported triggered page loaded methodssupported function methods var applepaybtn document getelementbyid sq-apple-pay var applepaylabel document getelementbyid sq-apple-pay-label var masterpassbtn document getelementbyid sq-masterpass var masterpasslabel document getelementbyid sq-masterpass-label show button apple pay web enabled otherwise display wallet enabled message methods applepay true applepaybtn style display inline-block applepaylabel style display none show button masterpass enabled otherwise display wallet enabled message methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson callback function validateshippingcontact triggered shipping address selected changed digital wallet ui supports address selection validateshippingcontact function contact var validationerrorobj add code set validationerrorobj errors found return validationerrorobj callback function cardnonceresponsereceived triggered sqpaymentform completes card nonce request cardnonceresponsereceived function errors nonce carddata errors log errors nonce generation javascript console console log encountered errors errors foreach function error console log error message return alert nonce received nonce testing assign nonce value hidden form field document getelementbyid card-nonce value nonce post nonce form payment processing page document getelementbyid nonce-form submit callback function unsupportedbrowserdetected triggered page loads unsupported browser detected unsupportedbrowserdetected function provide feedback site visitors callback function inputeventreceived triggered visitors interact sqpaymentform iframe elements inputeventreceived function inputevent switch inputevent eventtype case focusclassadded handle desired break case focusclassremoved handle desired break case errorclassadded handle desired break case errorclassremoved handle desired break case cardbrandchanged handle desired break case postalcodechanged handle desired break callback function paymentformloaded triggered sqpaymentform fully loaded paymentformloaded function handle desired copy set application var applicationid set location var locationid function requestcardnonce requestcardnonce triggered pay credit card button clicked modifying function required customized wish take additional action form button clicked function requestcardnonce event submit form sqpaymentform returns nonce event preventdefault request nonce sqpaymentform object paymentform requestcardnonce create initialize payment form object var paymentform new sqpaymentform initialize payment form elements applicationid applicationid locationid locationid inputclass sq-input customize css sqpaymentform iframe elements inputstyles fontsize 9em initialize apple pay placeholder applepay elementid sq-apple-pay initialize masterpass placeholder masterpass elementid sq-masterpass initialize credit card placeholders cardnumber elementid sq-card-number placeholder cvv elementid sq-cvv placeholder cvv expirationdate elementid sq-expiration-date placeholder mm yy postalcode elementid sq-postal-code sqpaymentform callback functions callbacks callback function methodssupported triggered page loaded methodssupported function methods var applepaybtn document getelementbyid sq-apple-pay var applepaylabel document getelementbyid sq-apple-pay-label var masterpassbtn document getelementbyid sq-masterpass var masterpasslabel document getelementbyid sq-masterpass-label show button apple pay web enabled otherwise display wallet enabled message methods applepay true applepaybtn style display inline-block applepaylabel style display none show button masterpass enabled otherwise display wallet enabled message methods masterpass true masterpassbtn style display inline-block masterpasslabel style display none callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var paymentrequestjson add code set create paymentrequestjson return paymentrequestjson callback function validateshippingcontact triggered shipping address selected changed digital wallet ui supports address selection validateshippingcontact function contact var validationerrorobj add code set validationerrorobj errors found return validationerrorobj callback function cardnonceresponsereceived triggered sqpaymentform completes card nonce request cardnonceresponsereceived function errors nonce carddata errors log errors nonce generation javascript console console log encountered errors errors foreach function error console log error message return alert nonce received nonce testing assign nonce value hidden form field document getelementbyid card-nonce value nonce post nonce form payment processing page document getelementbyid nonce-form submit callback function unsupportedbrowserdetected triggered page loads unsupported browser detected unsupportedbrowserdetected function provide feedback site visitors callback function inputeventreceived triggered visitors interact sqpaymentform iframe elements inputeventreceived function inputevent switch inputevent eventtype case focusclassadded handle desired break case focusclassremoved handle desired break case errorclassadded handle desired break case errorclassremoved handle desired break case cardbrandchanged handle desired break case postalcodechanged handle desired break callback function paymentformloaded triggered sqpaymentform fully loaded paymentformloaded function handle desired set application var set location var function requestcardnonce requestcardnonce triggered pay credit card button clicked modifying function required customized wish take additional action form button clicked function requestcardnonce submit form sqpaymentform returns nonce request nonce sqpaymentform object create initialize payment form object var new initialize payment form elements applicationid locationid inputclass sq-input customize css sqpaymentform iframe elements inputstyles fontsize 9em initialize apple pay placeholder applepay elementid sq-apple-pay initialize masterpass placeholder masterpass elementid sq-masterpass initialize credit card placeholders cardnumber elementid sq-card-number placeholder cvv elementid sq-cvv placeholder cvv expirationdate elementid sq-expiration-date placeholder mm yy postalcode elementid sq-postal-code sqpaymentform callback functions callbacks callback function methodssupported triggered page loaded methodssupported function var sq-apple-pay var sq-apple-pay-label var sq-masterpass var sq-masterpass-label show button apple pay web enabled otherwise display wallet enabled message true inline-block none show button masterpass enabled otherwise display wallet enabled message true inline-block none callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function var add code set create paymentrequestjson return callback function validateshippingcontact triggered shipping address selected changed digital wallet ui supports address selection validateshippingcontact function var add code set validationerrorobj errors found return callback function cardnonceresponsereceived triggered sqpaymentform completes card nonce request cardnonceresponsereceived function log errors nonce generation javascript console encountered errors function return nonce received testing assign nonce value hidden form field card-nonce post nonce form payment processing page nonce-form callback function unsupportedbrowserdetected triggered page loads unsupported browser detected unsupportedbrowserdetected function provide feedback site visitors callback function inputeventreceived triggered visitors interact sqpaymentform iframe elements inputeventreceived function switch case focusclassadded handle desired break case focusclassremoved handle desired break case errorclassadded handle desired break case errorclassremoved handle desired break case cardbrandchanged handle desired break case postalcodechanged handle desired break callback function paymentformloaded triggered sqpaymentform fully loaded paymentformloaded function handle desired step 4 implement sqpaymentform default styles create stylesheet sqpaymentform css using following css template copy define sqpaymentform iframes look sq-input border 1px solid rgb 223 223 223 outline-offset 2px margin-bottom 5px display inline-block define sqpaymentform iframes look focus sq-input--focus outline 5px auto rgb 59 153 252 define sqpaymentform iframes look contain invalid values sq-input--error outline 5px auto rgb 255 97 97 customize pay credit card button button-credit-card min-width 200px min-height 20px padding 0 margin 5px line-height 20px box-shadow 2px 2px 1px rgb 200 200 200 background rgb 255 255 255 border-radius 5px border 1px solid rgb 200 200 200 font-weight bold cursor pointer customize wallet enabled message wallet-not-enabled min-width 200px min-height 40px max-height 64px padding 0 margin 10px line-height 40px background eee border-radius 5px font-weight lighter font-style italic font-family inherit display block customize apple pay web button button-apple-pay min-width 200px min-height 40px max-height 64px padding 0 margin 10px background-image webkit-named-image apple-pay-logo-white background-color black background-size 100 60 background-repeat no-repeat background-position 50 50 border-radius 5px cursor pointer display none customize masterpass button button-masterpass min-width 200px min-height 40px max-height 40px padding 0 margin 10px background-image url https static masterpass com dyn img btn global mp_chk_btn_147x034px svg background-color black background-size 100 100 background-repeat no-repeat background-position 50 50 border-radius 5px border-color rgb 255 255 255 cursor pointer display none sq-walletbox float left margin 5px padding 10px text-align center vertical-align top font-weight bold sq-ccbox float left margin 5px padding 10px text-align center vertical-align top font-weight bold css classes define default presentation payment form step 4 implement sqpaymentform default styles create stylesheet sqpaymentform css using following css template sqpaymentform css copy define sqpaymentform iframes look sq-input border 1px solid rgb 223 223 223 outline-offset 2px margin-bottom 5px display inline-block define sqpaymentform iframes look focus sq-input--focus outline 5px auto rgb 59 153 252 define sqpaymentform iframes look contain invalid values sq-input--error outline 5px auto rgb 255 97 97 customize pay credit card button button-credit-card min-width 200px min-height 20px padding 0 margin 5px line-height 20px box-shadow 2px 2px 1px rgb 200 200 200 background rgb 255 255 255 border-radius 5px border 1px solid rgb 200 200 200 font-weight bold cursor pointer customize wallet enabled message wallet-not-enabled min-width 200px min-height 40px max-height 64px padding 0 margin 10px line-height 40px background eee border-radius 5px font-weight lighter font-style italic font-family inherit display block customize apple pay web button button-apple-pay min-width 200px min-height 40px max-height 64px padding 0 margin 10px background-image webkit-named-image apple-pay-logo-white background-color black background-size 100 60 background-repeat no-repeat background-position 50 50 border-radius 5px cursor pointer display none customize masterpass button button-masterpass min-width 200px min-height 40px max-height 40px padding 0 margin 10px background-image url https static masterpass com dyn img btn global mp_chk_btn_147x034px svg background-color black background-size 100 100 background-repeat no-repeat background-position 50 50 border-radius 5px border-color rgb 255 255 255 cursor pointer display none sq-walletbox float left margin 5px padding 10px text-align center vertical-align top font-weight bold sq-ccbox float left margin 5px padding 10px text-align center vertical-align top font-weight bold copy define sqpaymentform iframes look sq-input border 1px solid rgb 223 223 223 outline-offset 2px margin-bottom 5px display inline-block define sqpaymentform iframes look focus sq-input--focus outline 5px auto rgb 59 153 252 define sqpaymentform iframes look contain invalid values sq-input--error outline 5px auto rgb 255 97 97 customize pay credit card button button-credit-card min-width 200px min-height 20px padding 0 margin 5px line-height 20px box-shadow 2px 2px 1px rgb 200 200 200 background rgb 255 255 255 border-radius 5px border 1px solid rgb 200 200 200 font-weight bold cursor pointer customize wallet enabled message wallet-not-enabled min-width 200px min-height 40px max-height 64px padding 0 margin 10px line-height 40px background eee border-radius 5px font-weight lighter font-style italic font-family inherit display block customize apple pay web button button-apple-pay min-width 200px min-height 40px max-height 64px padding 0 margin 10px background-image webkit-named-image apple-pay-logo-white background-color black background-size 100 60 background-repeat no-repeat background-position 50 50 border-radius 5px cursor pointer display none customize masterpass button button-masterpass min-width 200px min-height 40px max-height 40px padding 0 margin 10px background-image url https static masterpass com dyn img btn global mp_chk_btn_147x034px svg background-color black background-size 100 100 background-repeat no-repeat background-position 50 50 border-radius 5px border-color rgb 255 255 255 cursor pointer display none sq-walletbox float left margin 5px padding 10px text-align center vertical-align top font-weight bold sq-ccbox float left margin 5px padding 10px text-align center vertical-align top font-weight bold define sqpaymentform iframes look sq-input border 1px solid rgb 223 223 223 outline-offset 2px margin-bottom 5px display inline-block define sqpaymentform iframes look focus sq-input--focus outline 5px auto rgb 59 153 252 define sqpaymentform iframes look contain invalid values sq-input--error outline 5px auto rgb 255 97 97 customize pay credit card button button-credit-card min-width 200px min-height 20px padding 0 margin 5px line-height 20px box-shadow 2px 2px 1px rgb 200 200 200 background rgb 255 255 255 border-radius 5px border 1px solid rgb 200 200 200 font-weight bold cursor pointer customize wallet enabled message wallet-not-enabled min-width 200px min-height 40px max-height 64px padding 0 margin 10px line-height 40px background eee border-radius 5px font-weight lighter font-style italic font-family inherit display block customize apple pay web button button-apple-pay min-width 200px min-height 40px max-height 64px padding 0 margin 10px background-image k apple-pay-logo-white background-color black background-size 100 60 background-repeat no-repeat background-position 50 50 border-radius 5px cursor pointer display none customize masterpass button button-masterpass min-width 200px min-height 40px max-height 40px padding 0 margin 10px background-image url https static masterpass com dyn img btn global mp_chk_btn_147x034px svg background-color black background-size 100 100 background-repeat no-repeat background-position 50 50 border-radius 5px border-color rgb 255 255 255 cursor pointer display none sq-walletbox float left margin 5px padding 10px text-align center vertical-align top font-weight bold sq-ccbox float left margin 5px padding 10px text-align center vertical-align top font-weight bold css classes define default presentation payment form step 5 set application location sqpaymentform will load properly unless applicationid locationid variables set properly recommend using sandbox ids testing development get sandbox ids open application dashboard click application want payment form credentials tab application control panel copy sandbox application locations tab application control panel copy one location values list sandbox locations now update sqpaymentform js application location ids 1 set application 2var applicationid 3 4 set location 5var locationid 6 7 create initialize payment form object 8var paymentform new sqpaymentform 9 10 step 5 set application location sqpaymentform will load properly unless applicationid locationid variables set properly sqpaymentform applicationid locationid recommend using sandbox ids testing development get sandbox ids open application dashboard click application want payment form credentials tab application control panel copy sandbox application locations tab application control panel copy one location values list sandbox locations open application dashboard application dashboard click application want payment form credentials tab application control panel copy sandbox application credentials sandbox application locations tab application control panel copy one location values list sandbox locations location sandbox now update sqpaymentform js application location ids sqpaymentform js 1 set application 2var applicationid 3 4 set location 5var locationid 6 7 create initialize payment form object 8var paymentform new sqpaymentform 9 10 1 set application 2var applicationid 3 4 set location 5var locationid 6 7 create initialize payment form object 8var paymentform new sqpaymentform 9 10 1 set application 2 2 var 3 4 set location 5 5 var 6 7 create initialize payment form object 8 var new 9 10 step 6 test payment form example html javascript css run without modification application location ids set confirm form renders properly verify nonce generation succeeds credit cards open new payment page see minimal html page page look similar screenshot follow steps troubleshooting payment form try start filling pay credit card form credit card number includes non-numeric characters a53b759734545858 sqpaymentform performs basic real-time validation information entered iframe fields sq-input--error css class will applied card number field highlight error now fill pay credit card form test card information click pay card card number 4532759734545858 cvv three non-consecutive numbers expiration date month year future postal code 94103 alert appear displays nonce obtained sqpaymentform square servers alert appear check browser javascript console information error encountered tip remember delete alert message done testing page alert nonce received nonce testing step 6 test payment form example html javascript css run without modification application location ids set confirm form renders properly verify nonce generation succeeds credit cards open new payment page see minimal html page page look similar screenshot follow steps troubleshooting payment form try troubleshooting payment form start filling pay credit card form credit card number includes non-numeric characters a53b759734545858 sqpaymentform performs basic real-time validation information entered iframe fields sq-input--error css class will applied card number field highlight error pay credit card sqpaymentform sq-input--error now fill pay credit card form test card information click pay card pay credit card card number 4532759734545858 cvv three non-consecutive numbers expiration date month year future postal code 94103 card number 4532759734545858 card number cvv three non-consecutive numbers cvv expiration date month year future expiration date postal code 94103 postal code alert appear displays nonce obtained sqpaymentform square servers alert appear check browser javascript console information error encountered sqpaymentform tip remember delete alert message done testing page alert nonce received nonce testing tip remember delete alert message done testing page tip alert nonce received nonce testing alert nonce received nonce testing nonce received testing step 7 enable disable digital wallet payments sqpaymentform supports nonce-generation digital wallets sample code provided guide includes visual placeholders digital wallets simplify development testing wallet placeholders removed fully enabling disabling digital wallets putting payment form production enable digital wallet functionality want accept digital wallet payments will need fully enable functionality line wallet provider requirements see wallet-specific guides guidance configuring payment options enable apple pay web enable masterpass disable functionality specific wallets want disable digital wallet payments specific digital wallet will need remove associated html placeholder sqpaymentform parameter css objects see wallet-specific guides guidance disabling digital wallet functionality disable apple pay web disable masterpass completely disable digital wallet functionality want disable digital wallet payments 1 follow wallet-specific instructions disable individual wallet disable apple pay web disable masterpass 2 remove entire sq-walletbox html block payment page div sq-walletbox div 3 disable createpaymentrequest callback function sqpaymentform js callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function 4 disable validateshippingcontact callback function sqpaymentform js callback function validateshippingcontact triggered shipping address selected changed digital wallet ui supports address selection validateshippingcontact function contact step 7 enable disable digital wallet payments sqpaymentform supports nonce-generation digital wallets sample code provided guide includes visual placeholders digital wallets simplify development testing sqpaymentform wallet placeholders removed fully enabling disabling digital wallets putting payment form production wallet placeholders removed fully enabling disabling digital wallets putting payment form production enable digital wallet functionality want accept digital wallet payments will need fully enable functionality line wallet provider requirements see wallet-specific guides guidance configuring payment options enable apple pay web enable masterpass enable apple pay web enable masterpass disable functionality specific wallets want disable digital wallet payments specific digital wallet will need remove associated html placeholder sqpaymentform parameter css objects see wallet-specific guides guidance disabling digital wallet functionality sqpaymentform disable apple pay web disable masterpass disable apple pay web disable masterpass completely disable digital wallet functionality want disable digital wallet payments 1 follow wallet-specific instructions disable individual wallet 1 disable apple pay web disable masterpass disable apple pay web disable masterpass 2 remove entire sq-walletbox html block payment page 2 sq-walletbox div sq-walletbox div div sq-walletbox div div sq-walletbox div 3 disable createpaymentrequest callback function sqpaymentform js 3 createpaymentrequest sqpaymentform js callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function callback function createpaymentrequest triggered digital wallet payment button clicked createpaymentrequest function 4 disable validateshippingcontact callback function sqpaymentform js 4 validateshippingcontact sqpaymentform js callback function validateshippingcontact triggered shipping address selected changed digital wallet ui supports address selection validateshippingcontact function contact callback function validateshippingcontact triggered shipping address selected changed digital wallet ui supports address selection validateshippingcontact function contact callback function validateshippingcontact triggered shipping address selected changed digital wallet ui supports address selection validateshippingcontact function contact optional remove postal code requirement warning postal code required payment field merchants based united states canada united kingdom disabling postalcode regions will result credit card transactions declined merchants based outside locations postal code requirement removed setting postalcode element false object configuration 1 create initialize payment form object 2var paymentform new sqpaymentform 3 4 5 6 postalcode false 7 8 sqpaymentform callback functions 9 callbacks 10 11 12 optional remove postal code requirement warning postal code required payment field merchants based united states canada united kingdom disabling postalcode regions will result credit card transactions declined warning postal code required payment field merchants based united states canada united kingdom disabling postalcode regions will result credit card transactions declined warning postalcode merchants based outside locations postal code requirement removed setting postalcode element false object configuration postalcode false 1 create initialize payment form object 2var paymentform new sqpaymentform 3 4 5 6 postalcode false 7 8 sqpaymentform callback functions 9 callbacks 10 11 12 1 create initialize payment form object 2var paymentform new sqpaymentform 3 4 5 6 postalcode false 7 8 sqpaymentform callback functions 9 callbacks 10 11 12 1 create initialize payment form object 2 var new 3 4 5 6 6 false 7 8 sqpaymentform callback functions 9 callbacks 10 11 12 optional customize cardnonceresponsereceived cardnonceresponsereceived callback function includes errors parameter provides information nonce generation may failed strongly recommend customizing cardnonceresponsereceived provide feedback customers payment processed based provided error code information errors parameter possible error codes see errors see sqpaymentform overview optional customize cardnonceresponsereceived cardnonceresponsereceived callback function includes errors parameter provides information nonce generation may failed strongly recommend customizing cardnonceresponsereceived provide feedback customers payment processed based provided error code cardnonceresponsereceived errors strongly cardnonceresponsereceived information errors parameter possible error codes see errors see sqpaymentform overview errors sqpaymentform overview optional customize validateshippingcontact validateshippingcontact callback function includes contact parameter provides information shipping address selected supported digital wallet ui strongly recommend customizing validateshippingcontact confirm shipping information valid provide feedback customers merchant may unable ship provided address information contact parameter required format shipping address validation errors see validateshippingcontact section sqpaymentform overview optional customize validateshippingcontact validateshippingcontact callback function includes contact parameter provides information shipping address selected supported digital wallet ui strongly recommend customizing validateshippingcontact confirm shipping information valid provide feedback customers merchant may unable ship provided address validateshippingcontact contact strongly validateshippingcontact information contact parameter required format shipping address validation errors see validateshippingcontact section sqpaymentform overview contact validateshippingcontact section optional customize unsupportedbrowserdetected sqpaymentform support client browser calls unsupportedbrowserdetected initialization strongly recommend customizing unsupportedbrowserdetected provide feedback visitor browser supported encourages update browser optional customize unsupportedbrowserdetected sqpaymentform support client browser calls unsupportedbrowserdetected initialization strongly recommend customizing unsupportedbrowserdetected provide feedback visitor browser supported encourages update browser sqpaymentform unsupportedbrowserdetected unsupportedbrowserdetected optional customize paymentformloaded paymentformloaded callback function used populate postal code element take actions unrelated payment form form fully loaded paymentform setpostalcode set postal code based information previously entered billing address example 1 sqpaymentform callback functions 2 callbacks 3 4 5 6 7 callback function paymentformloaded 8 triggered sqpaymentform fully loaded 9 10 paymentformloaded function 11 paymentform setpostalcode postal code shipping 12 13 14 setting postalcode programmatically will make entering payment information convenient customers calling paymentform setpostalcode outside paymentformloaded will fail even form fully loaded successful call paymentform setpostalcode also triggers postalcodechanged input event inputevenreceived callback function note preserve pci compliance ensure credit card information collected securely programmatically populate payment form fields postal code information possible input event types see sqpaymentform overview optional customize paymentformloaded paymentformloaded callback function used populate postal code element take actions unrelated payment form form fully loaded paymentformloaded paymentform setpostalcode set postal code based information previously entered billing address example paymentform setpostalcode 1 sqpaymentform callback functions 2 callbacks 3 4 5 6 7 callback function paymentformloaded 8 triggered sqpaymentform fully loaded 9 10 paymentformloaded function 11 paymentform setpostalcode postal code shipping 12 13 14 1 sqpaymentform callback functions 2 callbacks 3 4 5 6 7 callback function paymentformloaded 8 triggered sqpaymentform fully loaded 9 10 paymentformloaded function 11 paymentform setpostalcode postal code shipping 12 13 14 1 sqpaymentform callback functions 2 3 4 5 6 7 callback function paymentformloaded 8 triggered sqpaymentform fully loaded 9 10 paymentformloaded function 11 postal code shipping 12 13 14 setting postalcode programmatically will make entering payment information convenient customers postalcode calling paymentform setpostalcode outside paymentformloaded will fail even form fully loaded successful call paymentform setpostalcode also triggers postalcodechanged input event inputevenreceived callback function paymentform setpostalcode paymentformloaded paymentform setpostalcode postalcodechanged inputevenreceived note preserve pci compliance ensure credit card information collected securely programmatically populate payment form fields postal code note information possible input event types see sqpaymentform overview sqpaymentform overview optional customize sqpaymentform styles sqpaymentform input fields embedded iframes styles rendered payment form specified two ways 1 initialize payment form elements 2 applicationid applicationid 3 locationid locationid 4 inputclass css-class-name 5 6 customize css sqpaymentform iframe elements 7 inputstyles 8 inputstyle object 9 exterior styles styles exterior text input border margins element width defined sqpaymentform stylesheet sqpaymentform css assigned two ways placeholder ids sqpaymentform will respect normal css inheritance styles defined using dom object sq-card-number inputclass sqpaymentform explicitly applies configured css class text input fields sqpaymentform also applies classes detects onfocus event encounters validation error appropriate css class derived name provided inputclass text input focus sqpaymentform applies css-class-name focus class iframe text input basic validation errors form submitted incomplete data sqpaymentform applies css-class-name error class iframe create css rules class names highlight inputs focus validation errors interior styles styles interior text input font family background color defined inputstyle objects inputstyles parameter sqpaymentform object example copy inputstyles object provides value mediamaxwidth mediaminwidth styles apply screens sizes unless overridden another input style fontsize 24px padding 3px styles applied inputs screen width 400px smaller note specify value padding padding value previous object preserved mediamaxwidth 400px fontsize 18px information inputstyle objects applied sqpaymentform elements see sqpaymentform overview optional customize sqpaymentform styles sqpaymentform input fields embedded iframes styles rendered payment form specified two ways sqpaymentform 1 initialize payment form elements 2 applicationid applicationid 3 locationid locationid 4 inputclass css-class-name 5 6 customize css sqpaymentform iframe elements 7 inputstyles 8 inputstyle object 9 1 initialize payment form elements 2 applicationid applicationid 3 locationid locationid 4 inputclass css-class-name 5 6 customize css sqpaymentform iframe elements 7 inputstyles 8 inputstyle object 9 1 initialize payment form elements 2 3 locationid 4 4 inputclass css-class-name 5 6 customize css sqpaymentform iframe elements 7 inputstyles 8 8 9 exterior styles styles exterior text input border margins element width defined sqpaymentform stylesheet sqpaymentform css assigned two ways exterior sqpaymentform sqpaymentform css placeholder ids sqpaymentform will respect normal css inheritance styles defined using dom object sq-card-number inputclass sqpaymentform explicitly applies configured css class text input fields placeholder ids sqpaymentform will respect normal css inheritance styles defined using dom object sq-card-number sqpaymentform inputclass sqpaymentform explicitly applies configured css class text input fields inputclass sqpaymentform sqpaymentform also applies classes detects onfocus event encounters validation error appropriate css class derived name provided inputclass sqpaymentform inputclass text input focus sqpaymentform applies css-class-name focus class iframe text input basic validation errors form submitted incomplete data sqpaymentform applies css-class-name error class iframe text input focus sqpaymentform applies css-class-name focus class iframe sqpaymentform css-class-name focus text input basic validation errors form submitted incomplete data sqpaymentform applies css-class-name error class iframe sqpaymentform css-class-name error create css rules class names highlight inputs focus validation errors interior styles styles interior text input font family background color defined inputstyle objects inputstyles parameter sqpaymentform object example interior inputstyle inputstyles sqpaymentform copy inputstyles object provides value mediamaxwidth mediaminwidth styles apply screens sizes unless overridden another input style fontsize 24px padding 3px styles applied inputs screen width 400px smaller note specify value padding padding value previous object preserved mediamaxwidth 400px fontsize 18px copy inputstyles object provides value mediamaxwidth mediaminwidth styles apply screens sizes unless overridden another input style fontsize 24px padding 3px styles applied inputs screen width 400px smaller note specify value padding padding value previous object preserved mediamaxwidth 400px fontsize 18px object provides value mediamaxwidth mediaminwidth styles apply screens sizes unless overridden another input style fontsize 24px padding 3px styles applied inputs screen width 400px smaller note specify value padding padding value previous object preserved mediamaxwidth 400px fontsize 18px information inputstyle objects applied sqpaymentform elements see sqpaymentform overview inputstyle sqpaymentform sqpaymentform overview troubleshooting sqpaymentform will generate form fields multi-page web application cases sqpaymentform automatically generates form fields webpage initialize payment form loading properly confirm properly set application location ids 1 set application 2var applicationid 3 4 set location 5var locationid 6 7 create initialize payment form object 8var paymentform new sqpaymentform 9 10 set application location form still loading properly verify application correct application dashboard provides two sandbox credentials sandbox application sandbox access token values interchangeable make sure using valid sandbox application sqpaymentform will generate form fields single-page web application sqpaymentform automatically generates fields detects domcontentloaded event event may triggered single-page web applications form initialized long domcontentloaded event fired manage payment form initialization manually add following function call page want initialize payment form copy paymentform build calling paymentform build sqpaymentform already rendered iframe fields will log error javascript console sqpaymentform listeners persisting single-page web application sqpaymentform object registers multiple event listeners webpage listeners go away control passed new page single-page web application listeners might remain longer want manually remove listeners webpage add following function call want clean payment form copy paymentform destroy troubleshooting sqpaymentform will generate form fields multi-page web application cases sqpaymentform automatically generates form fields webpage initialize payment form loading properly confirm properly set application location ids sqpaymentform 1 set application 2var applicationid 3 4 set location 5var locationid 6 7 create initialize payment form object 8var paymentform new sqpaymentform 9 10 1 set application 2var applicationid 3 4 set location 5var locationid 6 7 create initialize payment form object 8var paymentform new sqpaymentform 9 10 1 set application 2 2 var 3 4 set location 5 5 var 6 7 create initialize payment form object 8 var new 9 10 set application location form still loading properly verify application correct application dashboard provides two sandbox credentials sandbox application sandbox access token values interchangeable make sure using valid sandbox application sandbox application sandbox access token application sqpaymentform will generate form fields single-page web application sqpaymentform automatically generates fields detects domcontentloaded event event may triggered single-page web applications form initialized long domcontentloaded event fired sqpaymentform domcontentloaded domcontentloaded manage payment form initialization manually add following function call page want initialize payment form copy paymentform build copy paymentform build calling paymentform build sqpaymentform already rendered iframe fields will log error javascript console paymentform build sqpaymentform sqpaymentform listeners persisting single-page web application sqpaymentform object registers multiple event listeners webpage listeners go away control passed new page single-page web application listeners might remain longer want sqpaymentform manually remove listeners webpage add following function call want clean payment form copy paymentform destroy copy paymentform destroy next steps information using square api sandbox see testing using api sandbox information using nonce process payment square transactions api suggest one following tutorials processing payment generic http library processing payment php client library processing payment ruby client library next steps information using square api sandbox see testing using api sandbox information using nonce process payment square transactions api suggest one following tutorials processing payment generic http library processing payment php client library processing payment ruby client library information using square api sandbox see testing using api sandbox testing using api sandbox information using nonce process payment square transactions api suggest one following tutorials processing payment generic http library processing payment php client library processing payment ruby client library processing payment generic http library processing payment php client library processing payment ruby client library processing payment generic http library processing payment php client library processing payment ruby client library",
tags:"",url:"/payments/sqpaymentform/sqpaymentform-setup"},{title:"Take Payments with Square's Payment APIs",text:"Take Payments with Square's Payment APIs Use Square\u2019s payment APIs with custom solutions to take payments square payment apis square payment apis custom solutions accept payments online in-person united states canada australia united kingdom japan connect square api suite provides secure payment solutions online in-person payments made supported cards payment form transactions work together accept online payments fully customized payment form embedded secure webpage sqpaymentform javascript object renders payment form transactions server-side api processes payments charge endpoint checkout server-side api accepts online payments prebuilt ui checkout workflow point sale mobile api accepts in-person payments also known card present payments calling square payment app custom mobile app payments processed square in-person online payment apis come compliance guarantees square first-party solutions qualifying transactions canada also include chargeback protection online transactions include customer email billing shipping address qualify chargeback protection official point sale application square apis requires square account square acts payment processor also known payment gateway merchant account transaction additionally preserve pci compliance square apis support payments made payment processors square payment apis custom solutions accept payments online in-person united states canada australia united kingdom japan connect square api suite provides secure payment solutions online in-person payments made supported cards square payment apis custom solutions accept payments online in-person united states canada australia united kingdom japan connect square api suite provides secure payment solutions online in-person payments made supported cards supported cards payment form transactions work together accept online payments fully customized payment form embedded secure webpage sqpaymentform javascript object renders payment form transactions server-side api processes payments charge endpoint checkout server-side api accepts online payments prebuilt ui checkout workflow point sale mobile api accepts in-person payments also known card present payments calling square payment app custom mobile app payment form transactions work together accept online payments fully customized payment form embedded secure webpage sqpaymentform javascript object renders payment form transactions server-side api processes payments charge endpoint payment form transactions work together accept online payments fully customized payment form embedded secure webpage sqpaymentform javascript object renders payment form transactions server-side api processes payments charge endpoint payment form transactions checkout server-side api accepts online payments prebuilt ui checkout workflow checkout server-side api accepts online payments prebuilt ui checkout workflow checkout point sale mobile api accepts in-person payments also known card present payments calling square payment app custom mobile app point sale mobile api accepts in-person payments also known card present payments calling square payment app custom mobile app point sale payments processed square in-person online payment apis come compliance guarantees square first-party solutions qualifying transactions canada also include chargeback protection online transactions include customer email billing shipping address qualify chargeback protection official point sale application square apis requires square account square acts payment processor also known payment gateway merchant account transaction additionally preserve pci compliance square apis support payments made payment processors api sdk feature comparison compatible square hardware applicable included applicable compatible square dashboard included included included cross-functional square apis sdks catalog included included included checkout applicable included included customer included included included locations included included included pos api included applicable included transactions included included applicable development support desktop browsers included included included mobile web browsers included included included native non-web mobile development included included included customizable ui included included included test payments included included included crud support create included included included retrieve included included included update included included included delete included included included security features https tls support included included included oauth support included applicable included payment features process square gift card transactions included included included process customer card file transactions included included included pci compliant included included included chargeback protection qualifying transactions canada included included included api sdk feature comparison compatible square hardware applicable included applicable compatible square dashboard included included included cross-functional square apis sdks catalog included included included checkout applicable included included customer included included included locations included included included pos api included applicable included transactions included included applicable development support desktop browsers included included included mobile web browsers included included included native non-web mobile development included included included customizable ui included included included test payments included included included crud support create included included included retrieve included included included update included included included delete included included included security features https tls support included included included oauth support included applicable included payment features process square gift card transactions included included included process customer card file transactions included included included pci compliant included included included chargeback protection qualifying transactions canada included included included compatible square hardware applicable included applicable compatible square dashboard included included included cross-functional square apis sdks catalog included included included checkout applicable included included customer included included included locations included included included pos api included applicable included transactions included included applicable development support desktop browsers included included included mobile web browsers included included included native non-web mobile development included included included customizable ui included included included test payments included included included crud support create included included included retrieve included included included update included included included delete included included included security features https tls support included included included oauth support included applicable included payment features process square gift card transactions included included included process customer card file transactions included included included pci compliant included included included chargeback protection qualifying transactions canada included included included compatible square hardware applicable included applicable compatible square hardware applicable included applicable compatible square dashboard included included included compatible square dashboard included included included cross-functional square apis sdks cross-functional square apis sdks catalog included included included catalog included included included checkout applicable included included checkout applicable included included customer included included included customer included included included locations included included included locations included included included pos api included applicable included pos api included applicable included transactions included included applicable transactions included included applicable development support development support desktop browsers included included included desktop browsers included included included mobile web browsers included included included mobile web browsers included included included native non-web mobile development included included included native non-web mobile development included included included customizable ui included included included customizable ui included included included test payments included included included test payments included included included crud support crud support create included included included create included included included retrieve included included included retrieve included included included update included included included update included included included delete included included included delete included included included security features security features https tls support included included included https tls support included included included oauth support included applicable included oauth support included applicable included payment features payment features process square gift card transactions included included included process square gift card transactions included included included process customer card file transactions included included included process customer card file transactions included included included pci compliant included included included pci compliant included included included chargeback protection qualifying transactions canada included included included chargeback protection qualifying transactions canada included included included pricing payment handling square payment apis pricing model square core products transaction fee based strictly transaction type australia 1 9 2 2 2 2 canada 2 65 3 4 15 2 9 30 japan 3 95 jcb 3 25 others 3 75 3 6 united states 2 75 3 5 15 2 9 30 united kingdom 1 75 2 5 2 5 monthly charges additional fees payment processing supported credit cards charged applicable regional rate whether card issued locally internationally example ecommerce transaction japan will always processing fee 3 6 even participating credit card belongs tourist visiting another country everything pci-compliance fees interchange chargeback fees covered per-transaction percent fee information square pricing including custom pricing options see square pricing overview support article square fees pricing payment handling square payment apis pricing model square core products transaction fee based strictly transaction type australia 1 9 2 2 2 2 canada 2 65 3 4 15 2 9 30 japan 3 95 jcb 3 25 others 3 75 3 6 united states 2 75 3 5 15 2 9 30 united kingdom 1 75 2 5 2 5 australia 1 9 2 2 2 2 canada 2 65 3 4 15 2 9 30 japan 3 95 jcb 3 25 others 3 75 3 6 united states 2 75 3 5 15 2 9 30 united kingdom 1 75 2 5 2 5 australia 1 9 2 2 2 2 australia 1 9 2 2 2 2 canada 2 65 3 4 15 2 9 30 canada 2 65 3 4 15 2 9 30 japan 3 95 jcb 3 25 others 3 75 3 6 japan 3 95 jcb 3 25 others 3 75 3 6 united states 2 75 3 5 15 2 9 30 united states 2 75 3 5 15 2 9 30 united kingdom 1 75 2 5 2 5 united kingdom 1 75 2 5 2 5 monthly charges additional fees payment processing supported credit cards charged applicable regional rate whether card issued locally internationally example ecommerce transaction japan will always processing fee 3 6 even participating credit card belongs tourist visiting another country everything pci-compliance fees interchange chargeback fees covered per-transaction percent fee information square pricing including custom pricing options see square pricing overview support article square fees square pricing overview square fees find right solution ecommerce partner solutions take online payments existing open source ecommerce hosting solution learn transactions api take online payments full control checkout process learn checkout api take online payments prebuilt checkout workflow learn point sale api take in-person payments calling square payment app custom mobile app learn find right solution ecommerce partner solutions take online payments existing open source ecommerce hosting solution learn transactions api take online payments full control checkout process learn checkout api take online payments prebuilt checkout workflow learn point sale api take in-person payments calling square payment app custom mobile app learn ecommerce partner solutions take online payments existing open source ecommerce hosting solution learn ecommerce partner solutions take online payments existing open source ecommerce hosting solution learn ecommerce partner solutions take online payments existing open source ecommerce hosting solution learn transactions api take online payments full control checkout process learn checkout api take online payments prebuilt checkout workflow learn transactions api take online payments full control checkout process learn transactions api take online payments full control checkout process learn checkout api take online payments prebuilt checkout workflow learn checkout api take online payments prebuilt checkout workflow learn point sale api take in-person payments calling square payment app custom mobile app learn point sale api take in-person payments calling square payment app custom mobile app learn point sale api take in-person payments calling square payment app custom mobile app learn faqs square payment apis sandbox development space testing payments partly square ecommerce apis transactions checkout sandbox support see api testing guide details square in-person apis point sale api sandbox support test in-person api integration square recommends making small card payments 1 issuing refunds official square point sale app square provide device api communicating directly square hardware custom app security pci compliance reasons square applications may communicate directly square hardware square in-person apis wrap official square point sale application hand processing either switching context embedding directly custom app process credit card payments without using square-provided payment form ensure pci compliance credit card data entered square-hosted ui currently three ways sqpaymentform associated javascript library site embed secure payment form checkout api send customers secure payment form hosted square point sale api temporarily switch payment screen square official app faqs square payment apis sandbox development space testing payments partly partly square ecommerce apis transactions checkout sandbox support see api testing guide details api testing guide square in-person apis point sale api sandbox support test in-person api integration square recommends making small card payments 1 issuing refunds official square point sale app issuing refunds official square point sale app square provide device api communicating directly square hardware custom app security pci compliance reasons square applications may communicate directly square hardware square in-person apis wrap official square point sale application hand processing either switching context embedding directly custom app process credit card payments without using square-provided payment form ensure pci compliance credit card data entered square-hosted ui currently three ways sqpaymentform associated javascript library site embed secure payment form checkout api send customers secure payment form hosted square point sale api temporarily switch payment screen square official app sqpaymentform associated javascript library site embed secure payment form sqpaymentform embed secure payment form checkout api send customers secure payment form hosted square checkout api point sale api temporarily switch payment screen square official app point sale api",tags:"",url:"/payments/take-payments"},{title:"Transactions API Overview",
text:"Transactions API Overview Specs at a glance Language Support HTTP C# Java PHP Python transactions api overview specs glance language support http java php python ruby platform web resources setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app square transactions api ecommerce api handles online payments multi-party transactions splitting net profit among multiple recipients refunds payments refunds processed online show square dashboard next in-person payments processed square reader transactions api accepts credit cards currently supported square readers digital wallets apple pay web masterpass transactions api works square payment form process online payments customers api process card-on-file payments transactions also tied customer order objects reporting purchases analytics itemization information reported square dashboard accessible customers orders apis specs glance language support http java php python ruby platform web resources setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app specs glance language support http java php python ruby language support http java php python ruby http java php python ruby platform web platform web web resources setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app resources setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app setup guide sample app java sample app node js sample app php sample app python sample app ruby sample app square transactions api ecommerce api handles online payments multi-party transactions splitting net profit among multiple recipients refunds payments refunds processed online show square dashboard next in-person payments processed square reader transactions api accepts credit cards currently supported square readers digital wallets apple pay web masterpass transactions api works square payment form process online payments customers api process card-on-file payments transactions also tied customer order objects reporting purchases analytics itemization information reported square dashboard accessible customers orders apis square transactions api ecommerce api handles online payments multi-party transactions splitting net profit among multiple recipients refunds payments refunds processed online show square dashboard next in-person payments processed square reader transactions api accepts credit cards currently supported square readers digital wallets apple pay web masterpass credit cards currently supported square readers transactions api works square payment form process online payments customers api process card-on-file payments transactions also tied customer order objects reporting purchases analytics itemization information reported square dashboard accessible customers orders apis requirements limitations transactions api calls include authorization token header targeted merchant account anonymous api calls allowed payment recipients provide valid square location receive payment account also associated verified bank account receiving bank accounts settle currency transaction example usd payments may deposited us-based bank account square gift card redemption currently supported explicit shipping information collected transactions mitigate fraud risk information currently reportable multi-party transaction amounts packaged money objects result distribution values specified flat amounts percentages supported time individual multi-party payment may exceed 90 total transaction amount minus square fees time multi-party transaction support limited 1 additional recipient cad gbp usd transactions multi-party transactions oauth tokens authorize payments_write_additional_recipients calls charge endpoint multi-party charge requests personal access tokens supported multi-party transactions currently supported sandbox requirements limitations transactions api calls include authorization token header targeted merchant account anonymous api calls allowed payment recipients provide valid square location receive payment account also associated verified bank account receiving bank accounts settle currency transaction example usd payments may deposited us-based bank account square gift card redemption currently supported explicit shipping information collected transactions mitigate fraud risk information currently reportable multi-party transaction amounts packaged money objects result distribution values specified flat amounts percentages supported time individual multi-party payment may exceed 90 total transaction amount minus square fees time multi-party transaction support limited 1 additional recipient cad gbp usd transactions multi-party transactions oauth tokens authorize payments_write_additional_recipients calls charge endpoint multi-party charge requests personal access tokens supported multi-party transactions currently supported sandbox transactions api calls include authorization token header targeted merchant account anonymous api calls allowed include authorization token header payment recipients provide valid square location receive payment account also associated verified bank account receiving bank accounts settle currency transaction example usd payments may deposited us-based bank account square gift card redemption currently supported explicit shipping information collected transactions mitigate fraud risk information currently reportable multi-party transaction amounts packaged money objects result distribution values specified flat amounts percentages supported time money flat amounts individual multi-party payment may exceed 90 total transaction amount minus square fees time multi-party transaction support limited 1 additional recipient cad gbp usd transactions 1 additional recipient cad gbp usd transactions 1 additional recipient cad gbp usd transactions multi-party transactions oauth tokens authorize payments_write_additional_recipients calls charge endpoint multi-party charge requests personal access tokens supported payments_write_additional_recipients multi-party transactions currently supported sandbox transactions api data model related resources sqpaymentform customers api orders api reporting api transactions api works following primary data types money represents monetary value transaction money amounts specified integers base monetary unit specified currency example usd base monetary unit cent 5 usd specified 500 cents tender collection money objects representing payment method methods used complete transaction currently payments processed transactions api will always one tender object related nonce customer card used payment address represents physical address used provide shipping billing information refund represents portion amount refund applied transaction refunds exist standalone objects accessible listrefunds endpoint addition part transaction object transaction represents transaction processed including billing shipping information payment information additional recipients order reference refunds applied whether transaction delayed important note transaction request object different fully populated transaction object request object includes information required charge endpoint process payment fully populated transaction object slightly different structure includes information included request well meta information generated square servers related objects may linked transaction later time refunds fully populated transaction object made following logical sections buyer information payment information additional recipients reference information refunds buyer information anything related person making purchase including customer email address billing address shipping address buyer information entirely optional email address least one physical address provided qualifying transactions potentially qualify square chargeback protection payment information anything related exchange money transaction successfully processed unless includes unique idempotency key payment nonce customer card money object representing transaction amount transactions also include square order ids link itemized order information processed transaction transactions include payment nonce generated sqpaymentform customer card previously stored using customers api additional recipients entities merchant square will receive portion transaction amount multi-party transaction recipients defined using square location distribution amount money object description explains reason distribution franchise royalty multi-party transaction payments may exceed 90 total transaction amount minus square fees additional recipients optional used multi-party transactions merchant square recipients section used reference information includes notes metadata systems non-square order confirmation number typically reference used link square transactions transaction information non-square systems refunds list refund objects associated transaction refund information exists least one refund processed square dashboard createrefund endpoint otherwise field included transactions object handle card information responsibly payment card industry data security standard pci dss defines important security requirements storage processing transmission payment card information card numbers cardholder names conform requirements never store process transmit payment card information square processes transmits card information collected sqpaymentform loaded retrievecustomer endpoint pci compliance minimize security risk ensure customer privacy circumstances customer confidential information live anywhere outside square servers delayed-capture transactions online payments authorized issuing bank moment purchase authorized transaction means bank put hold funds merchant received payment customers see pending transaction credit card statement later point transactions reconciled capturing transaction captured transaction means merchant receives funds previously put hold issuing bank default behavior charge immediate capture behavior overwritten using delay_capture field transaction request object transactions api data model related resources sqpaymentform customers api orders api reporting api related resources sqpaymentform customers api orders api reporting api transactions api works following primary data types money represents monetary value transaction money amounts specified integers base monetary unit specified currency example usd base monetary unit cent 5 usd specified 500 cents tender collection money objects representing payment method methods used complete transaction currently payments processed transactions api will always one tender object related nonce customer card used payment address represents physical address used provide shipping billing information refund represents portion amount refund applied transaction refunds exist standalone objects accessible listrefunds endpoint addition part transaction object transaction represents transaction processed including billing shipping information payment information additional recipients order reference refunds applied whether transaction delayed money represents monetary value transaction money amounts specified integers base monetary unit specified currency example usd base monetary unit cent 5 usd specified 500 cents money tender collection money objects representing payment method methods used complete transaction currently payments processed transactions api will always one tender object related nonce customer card used payment tender address represents physical address used provide shipping billing information address refund represents portion amount refund applied transaction refunds exist standalone objects accessible listrefunds endpoint addition part transaction object refund transaction represents transaction processed including billing shipping information payment information additional recipients order reference refunds applied whether transaction delayed transaction important note transaction request object different fully populated transaction object request object includes information required charge endpoint process payment fully populated transaction object slightly different structure includes information included request well meta information generated square servers related objects may linked transaction later time refunds request transaction transaction fully populated transaction object made following logical sections buyer information payment information additional recipients reference information refunds transaction buyer information anything related person making purchase including customer email address billing address shipping address buyer information entirely optional email address least one physical address provided qualifying transactions potentially qualify square chargeback protection buyer information square chargeback protection payment information anything related exchange money transaction successfully processed unless includes unique idempotency key payment nonce customer card money object representing transaction amount transactions also include square order ids link itemized order information processed transaction transactions include payment nonce generated sqpaymentform customer card previously stored using customers api payment information money additional recipients entities merchant square will receive portion transaction amount multi-party transaction recipients defined using square location distribution amount money object description explains reason distribution franchise royalty multi-party transaction payments may exceed 90 total transaction amount minus square fees additional recipients optional used multi-party transactions merchant square recipients section used additional recipients money reference information includes notes metadata systems non-square order confirmation number typically reference used link square transactions transaction information non-square systems reference information refunds list refund objects associated transaction refund information exists least one refund processed square dashboard createrefund endpoint otherwise field included transactions object refunds transactions handle card information responsibly payment card industry data security standard pci dss defines important security requirements storage processing transmission payment card information card numbers cardholder names conform requirements never store process transmit payment card information square processes transmits card information collected sqpaymentform loaded retrievecustomer endpoint pci compliance minimize security risk ensure customer privacy circumstances customer confidential information live anywhere outside square servers handle card information responsibly payment card industry data security standard pci dss defines important security requirements storage processing transmission payment card information card numbers cardholder names conform requirements never store process transmit payment card information conform requirements never store process transmit payment card information square processes transmits card information collected sqpaymentform loaded retrievecustomer endpoint pci compliance minimize security risk ensure customer privacy circumstances customer confidential information live anywhere outside square servers delayed-capture transactions online payments authorized issuing bank moment purchase authorized transaction means bank put hold funds merchant received payment customers see pending transaction credit card statement later point transactions reconciled capturing transaction captured transaction means merchant receives funds previously put hold issuing bank authorized captured default behavior charge immediate capture behavior overwritten using delay_capture field transaction request object delay_capture works transactions api process flow payment processing overview transactions api serves two key functions processing payments including refunds reporting payments processing payments typical workflow short immediate capture transactions span multiple days delayed capture transactions general processing payment involves following steps client server creates transaction request object using customer card stored previously payment nonce generated sqpaymentform calls charge endpoint charge endpoint processes payment based delay_capture field delay_capture false payment fully processed credited associated square account charge returns transaction object status captured workflow finished delay_capture true payment authorized charge returns pending transaction object status authorized within 6 days client server determines pending transaction voided captured otherwise will voided automatically transaction voided client server calls voidtransaction pending transaction transaction captured client server calls capturetransaction pending transaction square server finalizes transaction voiding transaction capturing payment client server calls retreivetransaction pending transaction fetch finalized transaction information client server refund captured transactions within 120 days capture date calling createrefund pending transactions explicit calls retreivetransactions required load transaction details voidtransaction retreivetransactions return empty javascript body 200 ok status response transactions successfully processed transactions api reporting endpoints transactions api also includes two reporting endpoints listtransactions returns list transaction objects associated given location listrefunds returns list refund objects associated given location endpoints operate outside core payment processing workflow called time reversing payments charge endpoint supports immediate capture delay_capture false delayed capture delay_capture true transaction processing process reversing payment depends current state transaction refunds issued captured transactions voids issued authorized transactions refunds immediate captures issued square dashboard createrefund endpoint delayed capture transactions automatically voided 6 days works transactions api process flow payment processing overview transactions api serves two key functions processing payments including refunds reporting payments processing payments typical workflow short immediate capture transactions span multiple days delayed capture transactions general processing payment involves following steps client server creates transaction request object using customer card stored previously payment nonce generated sqpaymentform calls charge endpoint charge endpoint processes payment based delay_capture field delay_capture false payment fully processed credited associated square account charge returns transaction object status captured workflow finished delay_capture true payment authorized charge returns pending transaction object status authorized within 6 days client server determines pending transaction voided captured otherwise will voided automatically transaction voided client server calls voidtransaction pending transaction transaction captured client server calls capturetransaction pending transaction square server finalizes transaction voiding transaction capturing payment client server calls retreivetransaction pending transaction fetch finalized transaction information client server refund captured transactions within 120 days capture date calling createrefund client server creates transaction request object using customer card stored previously payment nonce generated sqpaymentform calls charge endpoint charge endpoint processes payment based delay_capture field delay_capture false payment fully processed credited associated square account charge returns transaction object status captured workflow finished delay_capture true payment authorized charge returns pending transaction object status authorized delay_capture delay_capture false payment fully processed credited associated square account charge returns transaction object status captured workflow finished delay_capture true payment authorized charge returns pending transaction object status authorized delay_capture false payment fully processed credited associated square account charge returns transaction object status captured workflow finished delay_capture false delay_capture captured delay_capture true payment authorized charge returns pending transaction object status authorized delay_capture true delay_capture authorized within 6 days client server determines pending transaction voided captured otherwise will voided automatically transaction voided client server calls voidtransaction pending transaction transaction captured client server calls capturetransaction pending transaction square server finalizes transaction voiding transaction capturing payment client server calls retreivetransaction pending transaction fetch finalized transaction information transaction voided client server calls voidtransaction pending transaction transaction captured client server calls capturetransaction pending transaction square server finalizes transaction voiding transaction capturing payment client server calls retreivetransaction pending transaction fetch finalized transaction information transaction voided client server calls voidtransaction pending transaction transaction voided transaction captured client server calls capturetransaction pending transaction transaction captured square server finalizes transaction voiding transaction capturing payment client server calls retreivetransaction pending transaction fetch finalized transaction information client server refund captured transactions within 120 days capture date calling createrefund pending transactions explicit calls retreivetransactions required load transaction details voidtransaction retreivetransactions return empty javascript body 200 ok status response transactions successfully processed 200 ok transactions api reporting endpoints transactions api also includes two reporting endpoints listtransactions returns list transaction objects associated given location listrefunds returns list refund objects associated given location listtransactions returns list transaction objects associated given location listrefunds returns list refund objects associated given location endpoints operate outside core payment processing workflow called time reversing payments charge endpoint supports immediate capture delay_capture false delayed capture delay_capture true transaction processing process reversing payment depends current state transaction delay_capture false delay_capture true refunds issued captured transactions voids issued authorized transactions refunds issued captured transactions refunds voids issued authorized transactions voids refunds immediate captures issued square dashboard createrefund endpoint delayed capture transactions automatically voided 6 days multi-party transactions capturing payment charge endpoint split net profit transaction additional square locations addition originating merchant location multi-party transactions typically used monetize applications per-transaction basis merchants pay application fee taking payment ecommerce platform share portion transaction partner companies charities pay franchise license multi-party transaction distributions visible originating merchant square dashboard querying transaction results listtransactions receivetransaction endpoints additional_recipients object set multi-party transactions standard transactions include additional_recipients field recipients multi-party transaction payments listadditionalrecipientreceivables listadditionalrecipientreceivablerefunds endpoints reporting api report incoming payments multi-party transactions information please see reporting api processing multi-party transaction transaction splitting handled deducting square processing fees total amount partial payments may exceed net profit transaction example consider transaction 100 usd includes additional recipient payment 10 usd case square receives 3 20 usd 2 9 0 30 processing fee results net profit 96 80 usd additional recipient receives 10 usd net profit merchant receives remaining amount 86 80 usd refunds multi-party transactions refund occurs multi-party transaction reimbursement spread equally across parties including square received portion original transaction example assume 50 refund issued multi-party transaction 100 usd included additional recipient payment 10 usd 50 refund means original payee recover 50 usd refund amount collected recovering 50 square fee 1 60 usd 50 additional recipient payment 5 usd 50 deposit made merchant bank account 43 40 usd chargebacks multi-party transactions chargebacks multi-party transactions handled line square chargeback processes standard transactions customer reimbursed using funds merchant account originated transaction unless transaction eligible chargeback protection multi-party transactions capturing payment charge endpoint split net profit transaction additional square locations addition originating merchant location multi-party transactions typically used monetize applications per-transaction basis merchants pay application fee taking payment ecommerce platform share portion transaction partner companies charities pay franchise license multi-party transaction distributions visible originating merchant square dashboard addition querying transaction results listtransactions receivetransaction endpoints additional_recipients object set multi-party transactions standard transactions include additional_recipients field listtransactions receivetransaction additional_recipients additional_recipients recipients multi-party transaction payments listadditionalrecipientreceivables listadditionalrecipientreceivablerefunds endpoints reporting api report incoming payments multi-party transactions information please see reporting api listadditionalrecipientreceivables listadditionalrecipientreceivablerefunds processing multi-party transaction transaction splitting handled deducting square processing fees total amount partial payments may exceed net profit transaction example consider transaction 100 usd includes additional recipient payment 10 usd case square receives 3 20 usd 2 9 0 30 processing fee results net profit 96 80 usd additional recipient receives 10 usd net profit merchant receives remaining amount 86 80 usd refunds multi-party transactions refund occurs multi-party transaction reimbursement spread equally across parties including square received portion original transaction example assume 50 refund issued multi-party transaction 100 usd included additional recipient payment 10 usd 50 refund means original payee recover 50 usd refund amount collected recovering 50 square fee 1 60 usd 50 additional recipient payment 5 usd 50 deposit made merchant bank account 43 40 usd chargebacks multi-party transactions chargebacks multi-party transactions handled line square chargeback processes standard transactions customer reimbursed using funds merchant account originated transaction unless transaction eligible chargeback protection chargeback protection next steps get started transactions api recommend reading transactions api setup guide detailed information transactions api endpoints recommend reading transactions api technical reference learn embed square payment form recommend reading sqpaymentform setup guide learn storing processing customer cards file recommend reading save charge cards file section customers api setup guide also recommend reading createcustomercard retrievecustomer endpoint references next steps get started transactions api recommend reading transactions api setup guide detailed information transactions api endpoints recommend reading transactions api technical reference learn embed square payment form recommend reading sqpaymentform setup guide learn storing processing customer cards file recommend reading save charge cards file section customers api setup guide also recommend reading createcustomercard retrievecustomer endpoint references get started transactions api recommend reading transactions api setup guide transactions api setup guide detailed information transactions api endpoints recommend reading transactions api technical reference transactions api technical reference learn embed square payment form recommend reading sqpaymentform setup guide sqpaymentform setup guide learn storing processing customer cards file recommend reading save charge cards file section customers api setup guide also recommend reading createcustomercard retrievecustomer endpoint references save charge cards file section customers api setup guide createcustomercard retrievecustomer",tags:"",url:"/payments/transactions/overview"},{title:"Transactions API Setup",
text:"Transactions API Setup This document provides guidance for taking online payments with Square's Transactions transactions api setup document provides guidance taking online payments square transactions api information transactions api works see transactions api overview document provides guidance taking online payments square transactions api information transactions api works see transactions api overview document provides guidance taking online payments square transactions api information transactions api works see transactions api overview transactions api overview prerequisites transactions api following true square account create square account minutes already one ecommerce site sells products services line square terms service ecommerce pages hosted systems support dynamic pages server-side processing php ruby asp java pages hosting solutions support html pages transactions api embedded square secure payment form configured post nonce payment processing page previously stored customer card information using customers api will process card file plan transactions api accept online payments ecommerce site enabled payment processing account sure activate account continuing prerequisites transactions api following true square account create square account minutes already one ecommerce site sells products services line square terms service ecommerce pages hosted systems support dynamic pages server-side processing php ruby asp java pages hosting solutions support html pages transactions api embedded square secure payment form configured post nonce payment processing page previously stored customer card information using customers api will process card file square account create square account minutes already one create square account ecommerce site sells products services line square terms service square terms service ecommerce pages hosted systems support dynamic pages server-side processing php ruby asp java pages hosting solutions support html pages transactions api embedded square secure payment form configured post nonce payment processing page previously stored customer card information using customers api will process card file plan transactions api accept online payments ecommerce site enabled payment processing account sure activate account continuing activate account assumptions guide makes following assumptions read transactions api overview how-to guide cover general functionality api create run websites localhost development server familiar http json new json recommend reading json getting started guide codular continuing assumptions guide makes following assumptions read transactions api overview how-to guide cover general functionality api create run websites localhost development server familiar http json new json recommend reading json getting started guide codular continuing read transactions api overview how-to guide cover general functionality api transactions api overview create run websites localhost development server familiar http json new json recommend reading json getting started guide codular continuing json getting started guide process overview processing online payments transactions api generally includes following steps get authorization get location build transaction request call charge optional split transactions additional recipients optional link square order object optional link customer handle card information responsibly payment card industry data security standard pci dss defines important security requirements storage processing transmission payment card information card numbers cardholder names conform requirements never store process transmit payment card information square processes transmits card information collected sqpaymentform loaded retrievecustomer endpoint pci compliance minimize security risk ensure customer privacy circumstances customer confidential information live anywhere outside square servers process overview processing online payments transactions api generally includes following steps get authorization get location build transaction request call charge optional split transactions additional recipients optional link square order object optional link customer get authorization get location build transaction request call charge optional split transactions additional recipients optional link square order object optional link customer handle card information responsibly payment card industry data security standard pci dss defines important security requirements storage processing transmission payment card information card numbers cardholder names conform requirements never store process transmit payment card information square processes transmits card information collected sqpaymentform loaded retrievecustomer endpoint pci compliance minimize security risk ensure customer privacy circumstances customer confidential information live anywhere outside square servers handle card information responsibly payment card industry data security standard pci dss defines important security requirements storage processing transmission payment card information card numbers cardholder names conform requirements never store process transmit payment card information conform requirements never store process transmit payment card information square processes transmits card information collected sqpaymentform loaded retrievecustomer endpoint pci compliance minimize security risk ensure customer privacy circumstances customer confidential information live anywhere outside square servers working example order provide concrete instruction guide based hypothetical site following characteristics transactions api used single merchant solution words merchant site square account used process payments associated person site will personal access token authorization merchant site uses php version 5 4 later php selected example code common web language relatively approachable new developers transactions api language agnostic setup steps comparable across languages merchant site installed square connect v2 php sdk installing sdk optional long package receive json messages square apis installing sdk makes things easier merchant site supports https get https certificate hosting provider free nonprofit encrypt first time working https may want read works page encrypt site continuing situation different working example outlined still able follow along steps guide example code written avoid php-specific functionality much possible may need make slight changes handle authorization oauth create json messages working example order provide concrete instruction guide based hypothetical site following characteristics transactions api used single merchant solution words merchant site square account used process payments associated person site will personal access token authorization merchant site uses php version 5 4 later php selected example code common web language relatively approachable new developers transactions api language agnostic setup steps comparable across languages merchant site installed square connect v2 php sdk installing sdk optional long package receive json messages square apis installing sdk makes things easier merchant site supports https get https certificate hosting provider free nonprofit encrypt first time working https may want read works page encrypt site continuing transactions api used single merchant solution words merchant site square account used process payments associated person site will personal access token authorization transactions api used single merchant solution merchant site uses php version 5 4 later php selected example code common web language relatively approachable new developers transactions api language agnostic setup steps comparable across languages merchant site uses php version 5 4 later merchant site installed square connect v2 php sdk installing sdk optional long package receive json messages square apis installing sdk makes things easier merchant site installed square connect v2 php sdk merchant site supports https get https certificate hosting provider free nonprofit encrypt first time working https may want read works page encrypt site continuing merchant site supports https encrypt works situation different working example outlined still able follow along steps guide example code written avoid php-specific functionality much possible may need make slight changes handle authorization oauth create json messages step 1 get authorization transactions api endpoints without authorizing access square account recommend using sandbox locations testing development get sandbox open application dashboard application want accepting online payments click application application want accepting online payments click new application enter name application online store click create application copy sandbox access token credentials tab application control panel instead sandbox personal access token also oauth payments_write permission oauth preferred method provides better security targeted merchant account sandbox tokens personal access tokens appropriate testing development step 1 get authorization transactions api endpoints without authorizing access square account recommend using sandbox locations testing development get sandbox open application dashboard application want accepting online payments click application application want accepting online payments click new application enter name application online store click create application copy sandbox access token credentials tab application control panel open application dashboard application want accepting online payments click application application want accepting online payments click new application enter name application online store click create application new application create application copy sandbox access token credentials tab application control panel credentials instead sandbox personal access token also oauth payments_write permission oauth preferred method provides better security targeted merchant account sandbox tokens personal access tokens appropriate testing development oauth payments_write step 2 get location transactions processed transactions api credited valid location associated square account locations api find location 1 initialize api object include square connect api resources require_once local path sdk squareconnect autoload php authztoken my_sandbox_token put sandbox token locationid set programmatically create configure new api client object defaultapiconfig new squareconnect configuration defaultapiconfig setaccesstoken authztoken defaultapiclient new squareconnect apiclient defaultapiconfig create locationsapi client load location locationsapi new squareconnect api locationsapi defaultapiclient 2 call listlocations save first viable location locations configured credit card processing accept online payments try apiresponse locationsapi listlocations foreach apiresponse getlocations location in_array credit_card_processing location getcapabilities locationid location getid locationid null print error location set throw new runtimeexception location found catch squareconnect apiexception display exception details forward exception echo squareconnect api locationapi object threw exception br api call locationapi listlocations pre var_dump pre throw note one location simply grab first object list returned listlocations one location modify loop check location names account square dashboard select correct location name example locationname my_location_name apiresponse locationsapi listlocations foreach apiresponse getlocations location locationname location getname locationid location getid in_array credit_card_processing location getcapabilities print error location locationname invalid location process online payments throw new runtimeexception location process online payments step 2 get location transactions processed transactions api credited valid location associated square account locations api find location 1 initialize api object 1 include square connect api resources require_once local path sdk squareconnect autoload php authztoken my_sandbox_token put sandbox token locationid set programmatically create configure new api client object defaultapiconfig new squareconnect configuration defaultapiconfig setaccesstoken authztoken defaultapiclient new squareconnect apiclient defaultapiconfig create locationsapi client load location locationsapi new squareconnect api locationsapi defaultapiclient include square connect api resources require_once local path sdk squareconnect autoload php authztoken my_sandbox_token put sandbox token locationid set programmatically create configure new api client object defaultapiconfig new squareconnect configuration defaultapiconfig setaccesstoken authztoken defaultapiclient new squareconnect apiclient defaultapiconfig create locationsapi client load location locationsapi new squareconnect api locationsapi defaultapiclient include square connect api resources require_once local path sdk squareconnect autoload php authztoken my_sandbox_token put sandbox token locationid set programmatically create configure new api client object defaultapiconfig new squareconnect configuration defaultapiconfig authztoken defaultapiclient new squareconnect apiclient defaultapiconfig create locationsapi client load location locationsapi new squareconnect api locationsapi defaultapiclient 2 call listlocations save first viable location locations configured credit card processing accept online payments 2 listlocations try apiresponse locationsapi listlocations foreach apiresponse getlocations location in_array credit_card_processing location getcapabilities locationid location getid locationid null print error location set throw new runtimeexception location found catch squareconnect apiexception display exception details forward exception echo squareconnect api locationapi object threw exception br api call locationapi listlocations pre var_dump pre throw try apiresponse locationsapi listlocations foreach apiresponse getlocations location in_array credit_card_processing location getcapabilities locationid location getid locationid null print error location set throw new runtimeexception location found catch squareconnect apiexception display exception details forward exception echo squareconnect api locationapi object threw exception br api call locationapi listlocations pre var_dump pre throw try apiresponse locationsapi foreach apiresponse location in_array credit_card_processing location locationid location locationid null print error location set throw new runtimeexception location found catch squareconnect apiexception display exception details forward exception echo squareconnect pi ocationapi object threw exception br api call locationapi listlocations pre var_dump pre throw note one location simply grab first object list returned listlocations one location modify loop check location names account square dashboard select correct location name example note listlocations locationname my_location_name apiresponse locationsapi listlocations foreach apiresponse getlocations location locationname location getname locationid location getid in_array credit_card_processing location getcapabilities print error location locationname invalid location process online payments throw new runtimeexception location process online payments locationname my_location_name apiresponse locationsapi listlocations foreach apiresponse getlocations location locationname location getname locationid location getid in_array credit_card_processing location getcapabilities print error location locationname invalid location process online payments throw new runtimeexception location process online payments locationname my_location_name apiresponse locationsapi foreach apiresponse location locationname location locationid location in_array credit_card_processing location print error location locationname invalid location process online payments throw new runtimeexception location process online payments step 3 build transaction request call charge transactions api accepts two types encrypted payment tokens unique nonces generated square sqpaymentform object customer card ids created customers api card file payments 1 build buyer information buyerinfo array buyerinfo buyer_email_address thebuyer example com buyerinfo shipping_address array address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country buyerinfo billing_address array address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 20003 country 2 configure payment information using one square test nonces sandbox nonce replace nonce generated sqpaymentform cardnonce fake-card-nonce-ok idempotencykey uniqid paymentinfo array paymentinfo idempotency_key idempotencykey paymentinfo amount_money array amount 1000 currency usd paymentinfo card_nonce cardnonce already called customers api load customer information want process card file idempotencykey uniqid paymentinfo array paymentinfo idempotency_key idempotencykey paymentinfo amount_money array amount 1000 currency usd paymentinfo customer_id customeridfromcustomersapi paymentinfo customer_card_id customercardidfromcustomersapi note processing payments card file customer_id customer_card_id required fields 3 configure external reference information referenceifo array referenceifo reference_id confirmation 12345 referenceifo note useful note transaction 4 build transaction request object call charge endpoint txrequest array_merge buyerinfo paymentinfo referenceifo transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi charge locationid txrequest now just print result screen echo pre print_r apiresponse true pre catch squareconnect apiexception echo squareconnect api transactionsapi object threw exception br api call code transactionsapi charge code pre var_dump pre throw reminder production will need already generated card nonce fetched customer card process transaction process credit card digital wallet payments follow instructions sqpaymentform setup guide embed payment form configure form post nonce payment processing page process card file payment customers api retrievecustomer endpoint request customer card save current session step 3 build transaction request call charge transactions api accepts two types encrypted payment tokens unique nonces generated square sqpaymentform object customer card ids created customers api card file payments 1 build buyer information 1 buyerinfo array buyerinfo buyer_email_address thebuyer example com buyerinfo shipping_address array address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country buyerinfo billing_address array address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 20003 country buyerinfo array buyerinfo buyer_email_address thebuyer example com buyerinfo shipping_address array address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country buyerinfo billing_address array address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 20003 country buyerinfo array buyerinfo buyer_email_address thebuyer example com buyerinfo shipping_address array address_line_1 123 main locality san francisco administrative_district_level_1 postal_code 94114 country buyerinfo billing_address array address_line_1 500 electric address_line_2 suite 600 administrative_district_level_1 locality new york postal_code 20003 country 2 configure payment information using one square test nonces 2 test nonces sandbox nonce replace nonce generated sqpaymentform cardnonce fake-card-nonce-ok idempotencykey uniqid paymentinfo array paymentinfo idempotency_key idempotencykey paymentinfo amount_money array amount 1000 currency usd paymentinfo card_nonce cardnonce sandbox nonce replace nonce generated sqpaymentform cardnonce fake-card-nonce-ok idempotencykey uniqid paymentinfo array paymentinfo idempotency_key idempotencykey paymentinfo amount_money array amount 1000 currency usd paymentinfo card_nonce cardnonce sandbox nonce replace nonce generated sqpaymentform cardnonce fake-card-nonce-ok idempotencykey uniqid paymentinfo array paymentinfo idempotency_key idempotencykey paymentinfo amount_money array amount 1000 currency usd paymentinfo card_nonce cardnonce already called customers api load customer information want process card file idempotencykey uniqid paymentinfo array paymentinfo idempotency_key idempotencykey paymentinfo amount_money array amount 1000 currency usd paymentinfo customer_id customeridfromcustomersapi paymentinfo customer_card_id customercardidfromcustomersapi idempotencykey uniqid paymentinfo array paymentinfo idempotency_key idempotencykey paymentinfo amount_money array amount 1000 currency usd paymentinfo customer_id customeridfromcustomersapi paymentinfo customer_card_id customercardidfromcustomersapi idempotencykey uniqid paymentinfo array paymentinfo idempotency_key idempotencykey paymentinfo amount_money array amount 1000 currency usd paymentinfo customer_id customeridfromcustomersapi paymentinfo customer_card_id customercardidfromcustomersapi note processing payments card file customer_id customer_card_id required fields note customer_id customer_card_id 3 configure external reference information 3 referenceifo array referenceifo reference_id confirmation 12345 referenceifo note useful note transaction referenceifo array referenceifo reference_id confirmation 12345 referenceifo note useful note transaction referenceifo array referenceifo reference_id confirmation 12345 referenceifo note useful note transaction 4 build transaction request object call charge endpoint 4 txrequest array_merge buyerinfo paymentinfo referenceifo transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi charge locationid txrequest now just print result screen echo pre print_r apiresponse true pre catch squareconnect apiexception echo squareconnect api transactionsapi object threw exception br api call code transactionsapi charge code pre var_dump pre throw txrequest array_merge buyerinfo paymentinfo referenceifo transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi charge locationid txrequest now just print result screen echo pre print_r apiresponse true pre catch squareconnect apiexception echo squareconnect api transactionsapi object threw exception br api call code transactionsapi charge code pre var_dump pre throw txrequest array_merge buyerinfo paymentinfo referenceifo transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi locationid txrequest now just print result screen echo pre print_r apiresponse true pre catch squareconnect apiexception echo squareconnect pi ransactionsapi object threw exception br api call code transactionsapi charge code pre var_dump pre throw reminder production will need already generated card nonce fetched customer card process transaction process credit card digital wallet payments follow instructions sqpaymentform setup guide embed payment form configure form post nonce payment processing page process card file payment customers api retrievecustomer endpoint request customer card save current session reminder production will need already generated card nonce fetched customer card process transaction reminder process credit card digital wallet payments follow instructions sqpaymentform setup guide embed payment form configure form post nonce payment processing page process card file payment customers api retrievecustomer endpoint request customer card save current session process credit card digital wallet payments follow instructions sqpaymentform setup guide embed payment form configure form post nonce payment processing page process credit card digital wallet payments sqpaymentform setup guide process card file payment customers api retrievecustomer endpoint request customer card save current session process card file payment customers api retrievecustomer endpoint optional split transactions additional recipients charge endpoint supports multi-party transactions additional_recipients field additional recipients defined money object location description explain purpose distribution additional_recipients block considered optional parameter transaction included additional_recipients child elements required configure multi-party transaction add additional_recipients field transaction request calling charge endpoint example configure additional recipients recipientinfo array recipientinfo additional_recipients array recipientinfo additional_recipients array location_id recipientlocation description charity donation wildfire recovery amount_money array amount 200 currency usd txrequest array_merge buyerinfo paymentinfo referenceifo recipientinfo will need oauth payments_write_additional_recipients permission accounts associated location ids split payment using personal access token lack necessary oauth permissions additional recipient accounts transaction declined charge returns error note oauth currently supported sandbox additional recipients tested using real nonces production environment multi-party transactions available united states america canada united kingdom optional split transactions additional recipients charge endpoint supports multi-party transactions additional_recipients field additional recipients defined money object location description explain purpose distribution additional_recipients block considered optional parameter transaction included additional_recipients child elements required additional_recipients money additional_recipients additional_recipients configure multi-party transaction add additional_recipients field transaction request calling charge endpoint example additional_recipients configure additional recipients recipientinfo array recipientinfo additional_recipients array recipientinfo additional_recipients array location_id recipientlocation description charity donation wildfire recovery amount_money array amount 200 currency usd txrequest array_merge buyerinfo paymentinfo referenceifo recipientinfo configure additional recipients recipientinfo array recipientinfo additional_recipients array recipientinfo additional_recipients array location_id recipientlocation description charity donation wildfire recovery amount_money array amount 200 currency usd txrequest array_merge buyerinfo paymentinfo referenceifo recipientinfo configure additional recipients recipientinfo array recipientinfo additional_recipients array recipientinfo additional_recipients array location_id recipientlocation description charity donation wildfire recovery amount_money array amount 200 currency usd txrequest array_merge buyerinfo paymentinfo referenceifo recipientinfo will need oauth payments_write_additional_recipients permission accounts associated location ids split payment using personal access token lack necessary oauth permissions additional recipient accounts transaction declined charge returns error payments_write_additional_recipients note oauth currently supported sandbox additional recipients tested using real nonces production environment multi-party transactions available united states america canada united kingdom note note oauth currently supported sandbox additional recipients tested using real nonces production environment multi-party transactions available united states america canada united kingdom oauth currently supported sandbox additional recipients tested using real nonces production environment multi-party transactions available united states america canada united kingdom optional link square order object reference order object transaction set order_id field transaction request valid order returned orders api createorder endpoint example link order txrequest order_id order_id_returned_by_createorder note value amount_money transaction object value total_money linked order object match charge endpoint will decline transaction return error linking order transaction provides reporting analytic benefits enables square dashboard reporting purchase items taxes discounts order object built square catalog catalog items inventory tracking enabled track product inventory square dashboard information generating orders see orders api overview optional link square order object reference order object transaction set order_id field transaction request valid order returned orders api createorder endpoint example order_id link order txrequest order_id order_id_returned_by_createorder link order txrequest order_id order_id_returned_by_createorder link order txrequest order_id order_id_returned_by_createorder note value amount_money transaction object value total_money linked order object match charge endpoint will decline transaction return error note amount_money total_money linking order transaction provides reporting analytic benefits enables square dashboard reporting purchase items taxes discounts order object built square catalog catalog items inventory tracking enabled track product inventory square dashboard enables square dashboard reporting purchase items taxes discounts order object built square catalog catalog items inventory tracking enabled track product inventory square dashboard information generating orders see orders api overview orders api overview optional link square customer object reference customer object transaction set customer_id field transaction request valid customer returned customers api retrievecustomer endpoint example link order txrequest customer_id customer_id_returned_by_retrievecustomer linking customer transaction provides reporting analytic benefits square dashboard information working customers see customers api overview optional link square customer object reference customer object transaction set customer_id field transaction request valid customer returned customers api retrievecustomer endpoint example customer_id link order txrequest customer_id customer_id_returned_by_retrievecustomer link order txrequest customer_id customer_id_returned_by_retrievecustomer link order txrequest customer_id customer_id_returned_by_retrievecustomer linking customer transaction provides reporting analytic benefits square dashboard information working customers see customers api overview customers api overview handling delayed capture transactions default charge endpoint charges card soon successfully processed prefer delay capture transactions buyer credit card authorized charged six days authorization either capture funds void cancel transaction six days transaction captured voided automatically initiate delayed capture transaction set delay_capture field true example txrequest delay_capture true tender object returned transaction will status authorized instead captured will need save transaction capture void later capture transaction call capturetransaction endpoint saved transaction transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi capturetransaction locationid transactionid catch squareconnect apiexception void transaction call voidtransaction endpoint saved transaction transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi voidtransaction locationid transactionid catch squareconnect apiexception cases endpoint responds empty javascript object success view finalized transaction retrievetransaction endpoint saved transaction example transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi retreievetransaction locationid transactionid catch squareconnect apiexception handling delayed capture transactions default charge endpoint charges card soon successfully processed prefer delay capture transactions buyer credit card authorized charged six days authorization either capture funds void cancel transaction six days transaction captured voided automatically initiate delayed capture transaction set delay_capture field true example delay_capture true txrequest delay_capture true txrequest delay_capture true txrequest delay_capture true tender object returned transaction will status authorized instead captured will need save transaction capture void later tender authorized captured capture transaction call capturetransaction endpoint saved transaction transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi capturetransaction locationid transactionid catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi capturetransaction locationid transactionid catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi locationid transactionid catch squareconnect apiexception void transaction call voidtransaction endpoint saved transaction transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi voidtransaction locationid transactionid catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi voidtransaction locationid transactionid catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi locationid transactionid catch squareconnect apiexception cases endpoint responds empty javascript object success view finalized transaction retrievetransaction endpoint saved transaction example transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi retreievetransaction locationid transactionid catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi retreievetransaction locationid transactionid catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi locationid transactionid catch squareconnect apiexception handling refunds refunds processed based tender ids transaction object returned charge refunds issued portion original tender amount transactions may multiple refunds associated partial amounts different tenders process refund load existing transaction calling listtransactions searching list right transaction objects based external reference set call charge example transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi listtransactions locationid foreach apiresponse gettransactions transaction will call createrefund element array tenders transaction getreferenceid refidiwant transaction gettenders tender tenders array tender getid amount_money tender getamountmoney transactionid transaction getid catch squareconnect apiexception already know transaction call retreivetransactions endpoint load details specifically transaction example transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi retreievetransaction locationid transactionid will call createrefund element array tenders apiresponse gettransaction gettenders tender tenders array tender getid amount_money tender getamountmoney catch squareconnect apiexception transaction list associated tender ids call createrefund process refund original charge issuing refunds requires idempotency key example transactionsapi new squareconnect api transactionsapi defaultapiclient try foreach tenders tender refund array idempotency_key uniqid tender_id tender amount_money tender amount_money reason cosmetic damage found delivery item returned apiresponse transactionsapi createrefund locationid transactionid refund catch squareconnect apiexception note transactions processed square apis will ever single tender object transactions processed square reader may multiple tender objects handling refunds refunds processed based tender ids transaction object returned charge refunds issued portion original tender amount transactions may multiple refunds associated partial amounts different tenders tender process refund load existing transaction calling listtransactions searching list right transaction objects based external reference set call charge example transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi listtransactions locationid foreach apiresponse gettransactions transaction will call createrefund element array tenders transaction getreferenceid refidiwant transaction gettenders tender tenders array tender getid amount_money tender getamountmoney transactionid transaction getid catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi listtransactions locationid foreach apiresponse gettransactions transaction will call createrefund element array tenders transaction getreferenceid refidiwant transaction gettenders tender tenders array tender getid amount_money tender getamountmoney transactionid transaction getid catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi locationid foreach apiresponse transaction will call createrefund element array tenders transaction refidiwant transaction tender tenders array tender amount_money tender transactionid transaction catch squareconnect apiexception already know transaction call retreivetransactions endpoint load details specifically transaction example transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi retreievetransaction locationid transactionid will call createrefund element array tenders apiresponse gettransaction gettenders tender tenders array tender getid amount_money tender getamountmoney catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi retreievetransaction locationid transactionid will call createrefund element array tenders apiresponse gettransaction gettenders tender tenders array tender getid amount_money tender getamountmoney catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try apiresponse transactionsapi locationid transactionid will call createrefund element array tenders apiresponse tender tenders array tender amount_money tender catch squareconnect apiexception transaction list associated tender ids call createrefund process refund original charge issuing refunds requires idempotency key example tender transactionsapi new squareconnect api transactionsapi defaultapiclient try foreach tenders tender refund array idempotency_key uniqid tender_id tender amount_money tender amount_money reason cosmetic damage found delivery item returned apiresponse transactionsapi createrefund locationid transactionid refund catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try foreach tenders tender refund array idempotency_key uniqid tender_id tender amount_money tender amount_money reason cosmetic damage found delivery item returned apiresponse transactionsapi createrefund locationid transactionid refund catch squareconnect apiexception transactionsapi new squareconnect api transactionsapi defaultapiclient try foreach tenders tender refund array idempotency_key uniqid tender_id tender amount_money tender amount_money reason cosmetic damage found delivery item returned apiresponse transactionsapi locationid transactionid refund catch squareconnect apiexception note transactions processed square apis will ever single tender object transactions processed square reader may multiple tender objects note tender tender next steps detailed information transactions api endpoints recommend reading transactions api technical reference learn square payment form recommend reading sqpaymentform overview learn storing processing customer cards file recommend reading save charge cards file section customers api setup guide also recommend reading createcustomercard retrievecustomer endpoint references next steps detailed information transactions api endpoints recommend reading transactions api technical reference learn square payment form recommend reading sqpaymentform overview learn storing processing customer cards file recommend reading save charge cards file section customers api setup guide also recommend reading createcustomercard retrievecustomer endpoint references detailed information transactions api endpoints recommend reading transactions api technical reference transactions api technical reference learn square payment form recommend reading sqpaymentform overview sqpaymentform overview learn storing processing customer cards file recommend reading save charge cards file section customers api setup guide also recommend reading createcustomercard retrievecustomer endpoint references save charge cards file section customers api setup guide createcustomercard retrievecustomer",
tags:"",url:"/payments/transactions/setup"},{title:"Manage Products with Square's Product APIs",text:"Manage Products with Square's Product APIs Use Square\u2019s product management APIs with custom solutions manage products square product apis square product management apis custom solutions create maintain product catalog handle orders connect square api suite provides robust product solutions make easy define manage products ecommerce in-person mobile transactions catalog server-side api creates maintains collection services items physical digital available sale orders server-side api creates itemized records transactions involving catalog hoc items itemized records created orders include services items purchased modifications made items discounts applicable taxes square product management apis custom solutions create maintain product catalog handle orders connect square api suite provides robust product solutions make easy define manage products ecommerce in-person mobile transactions square product management apis custom solutions create maintain product catalog handle orders connect square api suite provides robust product solutions make easy define manage products ecommerce in-person mobile transactions catalog server-side api creates maintains collection services items physical digital available sale orders server-side api creates itemized records transactions involving catalog hoc items itemized records created orders include services items purchased modifications made items discounts applicable taxes catalog server-side api creates maintains collection services items physical digital available sale catalog server-side api creates maintains collection services items physical digital available sale catalog orders server-side api creates itemized records transactions involving catalog hoc items itemized records created orders include services items purchased modifications made items discounts applicable taxes orders server-side api creates itemized records transactions involving catalog hoc items itemized records created orders include services items purchased modifications made items discounts applicable taxes orders api sdk feature comparison compatible square hardware applicable applicable compatible square dashboard included included cross-functional square apis sdks catalog applicable included checkout included included customer included included locations included included orders included applicable pos api included included transactions included included development support desktop browsers applicable applicable mobile web browsers applicable applicable native non-web mobile development applicable applicable customizable ui applicable applicable test payments included included crud support create included included retrieve included included update included included delete included included security features https tls support included included oauth support included included api features supports purchase itemization applicable included supports batch processing included included supports upsert operations included included ties square inventory management included included supports taxes included included supports discount included included supports purchase item modifications included included api sdk feature comparison compatible square hardware applicable applicable compatible square dashboard included included cross-functional square apis sdks catalog applicable included checkout included included customer included included locations included included orders included applicable pos api included included transactions included included development support desktop browsers applicable applicable mobile web browsers applicable applicable native non-web mobile development applicable applicable customizable ui applicable applicable test payments included included crud support create included included retrieve included included update included included delete included included security features https tls support included included oauth support included included api features supports purchase itemization applicable included supports batch processing included included supports upsert operations included included ties square inventory management included included supports taxes included included supports discount included included supports purchase item modifications included included compatible square hardware applicable applicable compatible square dashboard included included cross-functional square apis sdks catalog applicable included checkout included included customer included included locations included included orders included applicable pos api included included transactions included included development support desktop browsers applicable applicable mobile web browsers applicable applicable native non-web mobile development applicable applicable customizable ui applicable applicable test payments included included crud support create included included retrieve included included update included included delete included included security features https tls support included included oauth support included included api features supports purchase itemization applicable included supports batch processing included included supports upsert operations included included ties square inventory management included included supports taxes included included supports discount included included supports purchase item modifications included included compatible square hardware applicable applicable compatible square hardware applicable applicable compatible square dashboard included included compatible square dashboard included included cross-functional square apis sdks cross-functional square apis sdks catalog applicable included catalog applicable included checkout included included checkout included included customer included included customer included included locations included included locations included included orders included applicable orders included applicable pos api included included pos api included included transactions included included transactions included included development support development support desktop browsers applicable applicable desktop browsers applicable applicable mobile web browsers applicable applicable mobile web browsers applicable applicable native non-web mobile development applicable applicable native non-web mobile development applicable applicable customizable ui applicable applicable customizable ui applicable applicable test payments included included test payments included included crud support crud support create included included create included included retrieve included included retrieve included included update included included update included included delete included included delete included included security features security features https tls support included included https tls support included included oauth support included included oauth support included included api features api features supports purchase itemization applicable included supports purchase itemization applicable included supports batch processing included included supports batch processing included included supports upsert operations included included supports upsert operations included included ties square inventory management included included ties square inventory management included included supports taxes included included supports taxes included included supports discount included included supports discount included included supports purchase item modifications included included supports purchase item modifications included included find right solution product management partner solutions manage products services orders existing open source solution learn catalog api manage collection products services including prices discounts taxes learn orders api create itemized purchases enable reporting tracking learn find right solution product management partner solutions manage products services orders existing open source solution learn catalog api manage collection products services including prices discounts taxes learn orders api create itemized purchases enable reporting tracking learn product management partner solutions manage products services orders existing open source solution learn product management partner solutions manage products services orders existing open source solution learn product management partner solutions manage products services orders existing open source solution learn catalog api manage collection products services including prices discounts taxes learn orders api create itemized purchases enable reporting tracking learn catalog api manage collection products services including prices discounts taxes learn catalog api manage collection products services including prices discounts taxes learn orders api create itemized purchases enable reporting tracking learn orders api create itemized purchases enable reporting tracking learn faqs product management apis support shipping fees indirectly time none square apis support shipping fees explicit data type shipping currently supported hoc line item defined time order processed checkout api information working shipping fees see checkout api overview faqs product management apis support shipping fees indirectly time none square apis support shipping fees explicit data type shipping currently supported hoc line item defined time order processed checkout api information working shipping fees see checkout api overview checkout api overview",tags:"",url:"/products/manage-products"},{title:"[v1] Client libraries",text:"Square provides client libraries for Connect V1 and V2 in a variety of programming square provides client libraries connect v1 v2 variety programming languages see client libraries full list",tags:"",url:"/api/connect/v1/#clientlibraries"},{title:"[v1] Swagger specification",text:"Version 1 and 2 of the Connect API are defined with the Swagger specification. version 1 2 connect api defined swagger specification definition available github definition simplify certain development tasks generating custom client libraries see generating client libraries tools swagger information",tags:"",url:"/api/connect/v1/#swaggerspecification"},{title:"[v1] Running Postman",text:'Postman is an app for easy RESTful API exploration. Use our "Postman Collection" to postman app easy restful api exploration postman collection try square connect endpoints read blog post setting postman configuring api credentials click run postman explore v1 v2 api collection',tags:"",url:"/api/connect/v1/#runningpostman"},{title:"[v1] Endpoint paths",text:"Connect API endpoints are hosted from the base URL https://connect.squareup.com. For example, the List connect api endpoints hosted base url https connect squareup com example list payments endpoint full path https connect squareup com v1 location_id payments endpoint paths include location_id parameter indicates business locations application acting behalf get business location ids list locations endpoint",tags:"",url:"/api/connect/v1/#endpointpaths"},{title:"[v1] API versions",text:"An endpoint's API version is included in its path. Bug fixes and minor feature endpoint api version included path bug fixes minor feature additions might made endpoint behavior without advancing version number include adding optional parameters response fields prevent future compatibility issues application prepared receive response fields beyond currently returned given endpoint functionality never removed particular version endpoint field names types change",tags:"",url:"/api/connect/v1/#apiversions"},{title:"[v1] Endpoint names and return values",text:"An endpoint's name indicates the type of data it handles and the action it endpoint name indicates type data handles action performs data common actions create post creates persists entity corresponding type list get returns summary information entities match query parameters provide get comprehensive information particular entity first get entity appropriate list endpoint provide corresponding retrieve endpoint retrieve get provides comprehensive information single entity matches identifier provide update put modifies existing entity matches identifier provide delete delete deletes existing entity matches identifier provide deleted entities retrieved undeleted example list payments endpoint returns array processed payments create item endpoint creates persists item",tags:"",url:"/api/connect/v1/#endpointnames"},{title:"[v1] Request and response headers",text:"Requests to Connect API endpoints must include the following HTTP headers: Authorization: Bearer YOUR_ACCESS_TOKEN requests connect api endpoints include following http headers authorization bearer your_access_token accept application json place your_access_token provide either application personal access token available application dashboard access token generated oauth api post put requests include one additional header content-type application json default endpoint responses provide data json response body include content-type application json header",tags:"",url:"/api/connect/v1/#headers"},{title:"[v1] Providing parameters",text:"The way you provide parameters to a Connect API request depends on the HTTP way provide parameters connect api request depends http method request get delete requests get delete requests provide parameters query string append request url example provide order parameter list payments endpoint like https connect squareup com v1 location_id payments order desc values query parameters url-escaped example provide value 2013-01-15t00 00 00 02 00 begin_time parameter list payments endpoint specify following https connect squareup com v1 location_id payments begin_time 2013-01-15t00 3a00 3a00 2b02 3a00 post put requests post put requests instead provide parameters json body request example body request update category endpoint looks like name sandwiches",tags:"",url:"/api/connect/v1/#providing-parameters"},{title:"[v1] Working with monetary amounts",text:"All monetary amounts in the Connect API are represented by the Money object, which monetary amounts connect api represented money object following structure amount 400 currency_code usd amount field always smallest denomination currency indicated currency_code example currency_code usd dollars amount cents object shown represents 4 00 currency_code jpy japanese yen amount yen currency_code field iso 4217 format",tags:"",url:"/api/connect/v1/#workingwithmonetaryamounts"},{title:"[v1] Working with dates",text:"All representations of dates are strings in ISO 8601 format. You can provide date representations dates strings iso 8601 format provide date strings either utc example 2013-01-15t00 00 00z offset utc indicate time zone example 2013-01-15t00 00 00-08 00 eight hours behind utc provide offset dates sure account daylight saving time correctly applicable date strings returned connect api always utc date ranges certain list endpoints list payments accept optional date range begin_time end_time parameters also accept optional order parameter indicates whether results returned chronological reverse-chronological order regardless order begin_time earlier date end_time later date order asc chronological begin_time inclusive end_time exclusive default behavior list endpoints order desc reverse-chronological begin_time exclusive end_time inclusive see reference particular list endpoint see endpoint accepts begin_time end_time parameters",tags:"",url:"/api/connect/v1/#workingwithdates"},{title:"[v1] Paginating results",text:"List endpoints might paginate the results they return. This means that instead of returning list endpoints might paginate results return means instead returning results single response endpoints might return results along response header links next set results header following format link https connect squareup com v1 location_id payments batch_token batch_token rel next send followup request including usual headers next url fetch next set results repeat process receive response without next url note batch_token parameter included next url short-lived token used fetch next set results particular query persist reuse value",tags:"",url:"/api/connect/v1/#pagination"},{title:"[v1] Batching requests",text:"The Connect API provides a Submit Batch endpoint, which lets you batch multiple Connect connect api provides submit batch endpoint lets batch multiple connect api requests single request endpoint performs requests included batch returns array containing request response",tags:"",url:"/api/connect/v1/#batchingrequests"},{title:"[v1] Handling duplicate results",text:"List endpoints might return duplicate results. Use the id attribute of the result objects list endpoints might return duplicate results attribute result objects identify duplicates",tags:"",url:"/api/connect/v1/#handling-duplicates"},{title:"[v1] Handling the enum value OTHER",text:"Some Connect API enums (such as BankAccount.Type) include the value OTHER. If you retrieve connect api enums bankaccount type include value retrieve object bankaccount currently value one fields field might different value retrieve object later date appropriate value added enum enum values besides never change retroactively",tags:"",url:"/api/connect/v1/#handling-other"},{title:"[v1] Replacing application credentials",text:"You can replace your application's personal access token or application secret from the application replace application personal access token application secret application dashboard click replace token next personal access token field generate new token application click replace secret next application secret field generate new secret application replacing application credential immediately invalidates previous credential make sure update application accordingly",tags:"",url:"/api/connect/v1/#replacing-token"},{title:"[v1] Rate limiting",text:"If Connect API endpoints receive too many requests associated with the same application or connect api endpoints receive many requests associated application access token short time window might respond 429 many requests error occurs try request later time",tags:"",url:"/api/connect/v1/#ratelimiting"},{title:"[v1] Handling errors",text:" ",tags:"",url:"/api/connect/v1/#handling-errors"},{title:"[v1] Business Management Overview",text:" ",tags:"",url:"/api/connect/v1/#business-overview"},{title:"[v1] Transaction Management Overview",text:" ",tags:"",url:"/api/connect/v1/#transactions-overview"},{title:"[v1] Item Management Overview",text:" ",tags:"",url:"/api/connect/v1/#items-overview"},{title:"[v1] Webhooks Overview",text:" ",tags:"",url:"/api/connect/v1/#webhooks-overview"},{title:"[v1] Subscriptions Overview",text:" ",tags:"",url:"/api/connect/v1/#subscriptions-overview"},{title:"[v1] Connect API Data Types",text:" ",tags:"",url:"/api/connect/v1/#datatypes"},{title:"[v1] Connect API Enums",text:" ",tags:"",url:"/api/connect/v1/#enums"},{title:"[v1 Endpoint] Retrieve Business",text:"GET /v1/me Provides a business' account information, such as its name and associated email get v1 provides business account information name associated email address required permissions merchant_profile_read return value merchant object describing business",tags:"",url:"/api/connect/v1/#get-merchantid"},{title:"[v1 Endpoint] List Locations",text:"GET /v1/me/locations Provides details for a business' locations, including their IDs. The account_capabilities array get v1 locations provides details business locations including ids account_capabilities array returned merchant object indicates account capabilities location enabled example array include value credit_card_processing location currently process credit cards square required permissions merchant_profile_read return value array merchant objects containing profile information business locations",tags:"",url:"/api/connect/v1/#get-locations"},{title:"[v1 Endpoint] Create Employee",text:"POST /v1/me/employees Creates an employee for a business. Required permissions: EMPLOYEES_WRITE Request Parameters For post v1 employees creates employee business required permissions employees_write request parameters post put endpoints provide request parameters json request body first_name string employee first name last_name string employee last name role_ids optional string ids employee associated roles currently specify one zero roles per employee default value email optional string optional email address associate employee note edit existing employee email address connect api set initial value creating employee return value employee object represents created employee",tags:"",url:"/api/connect/v1/#post-employees"},{title:"[v1 Endpoint] List Employees",text:"GET /v1/me/employees Provides summary information for all of a business' employees. You can filter get v1 employees provides summary information business employees filter results returned endpoint exactly one following fields created_atupdated_at attempting filter one fields produces error additionally filter results status external_id matter filters results sorted created_at field required permissions employees_read request parameters get delete endpoints provide request parameters query string appended request url order optional listorder order employees listed response based created_at field default value asc begin_updated_at optional string filtering results updated_at field beginning requested reporting period iso 8601 format end_updated_at optional string filtering results updated_at field end requested reporting period iso 8601 format begin_created_at optional string filtering results created_at field beginning requested reporting period iso 8601 format end_created_at optional string filtering results created_at field end requested reporting period iso 8601 format status optional employee status provided endpoint returns employee entities specified status active inactive external_id optional string provided endpoint returns employee entities specified external_id limit optional number maximum number employee entities return single response value exceed 200 value always integer default value 100 return value array zero employee objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-employees"},{title:"[v1 Endpoint] Retrieve Employee",text:"GET /v1/me/employees/{employee_id} Provides the details for a single employee. Required permissions: EMPLOYEES_READ Path Parameters get v1 employees employee_id provides details single employee required permissions employees_read path parameters employee_id string employee return value employee object describes requested employee",tags:"",url:"/api/connect/v1/#get-employeeid"},{title:"[v1 Endpoint] Update Employee",text:"PUT /v1/me/employees/{employee_id} Modifies the details of an employee. Required permissions: EMPLOYEES_WRITE Path Parameters employee_id put v1 employees employee_id modifies details employee required permissions employees_write path parameters employee_id string employee modify request parameters post put endpoints provide request parameters json request body first_name optional string employee first name last_name optional string employee last name role_ids optional string employee associated roles currently specify one zero roles per employee return value employee object represents updated employee",tags:"",url:"/api/connect/v1/#put-employeeid"},{title:"[v1 Endpoint] Create Role",text:"POST /v1/me/roles Creates an employee role you can then assign to employees. Required permissions: post v1 roles creates employee role assign employees required permissions employees_write request parameters post put endpoints provide request parameters json request body name string role name permissions employeerole permission role permissions is_owner optional boolean true employees role permissions regardless values indicated permissions default value false return value employeerole object represents created role",tags:"",url:"/api/connect/v1/#post-roles"},{title:"[v1 Endpoint] List Roles",text:"GET /v1/me/roles Provides summary information for all of a business' employee roles. Required permissions: get v1 roles provides summary information business employee roles required permissions employees_read request parameters get delete endpoints provide request parameters query string appended request url order optional listorder order roles listed response default value asc limit optional number maximum number employee entities return single response value exceed 200 value always integer default value 100 return value array zero employeerole objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-roles"},{title:"[v1 Endpoint] Retrieve Role",text:"GET /v1/me/roles/{role_id} Provides the details for a single employee role. Required permissions: EMPLOYEES_READ Path get v1 roles role_id provides details single employee role required permissions employees_read path parameters role_id string role return value employeerole object describes requested role",tags:"",url:"/api/connect/v1/#get-roleid"},{title:"[v1 Endpoint] Update Role",text:"PUT /v1/me/roles/{role_id} Modifies the details of an employee role. Required permissions: EMPLOYEES_WRITE Path Parameters put v1 roles role_id modifies details employee role required permissions employees_write path parameters role_id string role modify request parameters post put endpoints provide request parameters json request body name optional string role name permissions optional employeerole permission role permissions is_owner optional boolean true employees role permissions regardless values indicated permissions return value employeerole object represents updated role",tags:"",url:"/api/connect/v1/#put-roleid"},{title:"[v1 Endpoint] Create Timecard",text:"POST /v1/me/timecards Creates a timecard for an employee. Each timecard corresponds to a single post v1 timecards creates timecard employee timecard corresponds single shift endpoint automatically creates api_create event new timecard required permissions timecards_write request parameters post put endpoints provide request parameters json request body employee_id string employee create timecard clockin_time optional string clock-in time timecard iso 8601 format default value current time clockout_time optional string clock-out time timecard iso 8601 format provide value importing timecard information another system clockin_location_id optional string location employee clocked clockout_location_id optional string location employee clocked provide value importing timecard information another system provide value also provide value clockout_time return value timecard object represents created timecard",tags:"",url:"/api/connect/v1/#post-timecards"},{title:"[v1 Endpoint] List Timecards",text:"GET /v1/me/timecards Provides summary information for all of a business' employee timecards. You can get v1 timecards provides summary information business employee timecards filter results returned endpoint exactly one following fields clockin_timeclockout_timeupdated_at attempting filter one fields produces error also filter results employee_id whether timecards deleted matter filters results sorted created_at field required permissions timecards_read request parameters get delete endpoints provide request parameters query string appended request url order optional listorder order timecards listed response based created_at field default value asc employee_id optional string provided endpoint returns timecards employee specified begin_clockin_time optional string filtering results clockin_time field beginning requested reporting period iso 8601 format end_clockin_time optional string filtering results clockin_time field end requested reporting period iso 8601 format begin_clockout_time optional string filtering results clockout_time field beginning requested reporting period iso 8601 format end_clockout_time optional string filtering results clockout_time field end requested reporting period iso 8601 format begin_updated_at optional string filtering results updated_at field beginning requested reporting period iso 8601 format end_updated_at optional string filtering results updated_at field end requested reporting period iso 8601 format deleted optional boolean true deleted timecards returned false valid timecards returned provide parameter valid deleted timecards returned limit optional number maximum number timecards return single response value exceed 200 value always integer return value array zero timecard objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-timecards"},{title:"[v1 Endpoint] Retrieve Timecard",text:"GET /v1/me/timecards/{timecard_id} Currently, only approved merchants can manage their employees with Square. Unapproved merchants get v1 timecards timecard_id currently approved merchants manage employees square unapproved merchants employee management features include application provides details single timecard required permissions timecards_read path parameters timecard_id string timecard return value timecard object describes requested timecard",tags:"",url:"/api/connect/v1/#get-timecardid"},{title:"[v1 Endpoint] Update Timecard",text:"PUT /v1/me/timecards/{timecard_id} Modifies a timecard's details. This creates an API_EDIT event for the timecard. put v1 timecards timecard_id modifies timecard details creates api_edit event timecard view timecard event history list timecard events endpoint required permissions timecards_write path parameters timecard_id string timecard modify request parameters post put endpoints provide request parameters json request body clockin_time optional string clock-in time timecard iso 8601 format clockout_time optional string clock-out time timecard iso 8601 format clockin_location_id optional string location employee clocked clockout_location_id optional string location employee clocked return value timecard object represents updated timecard",tags:"",url:"/api/connect/v1/#put-timecardid"},{title:"[v1 Endpoint] Delete Timecard",text:"DELETE /v1/me/timecards/{timecard_id} Currently, only approved merchants can manage their employees with Square. Unapproved merchants delete v1 timecards timecard_id currently approved merchants manage employees square unapproved merchants employee management features include application deletes timecard deleted timecards still accessible connect api endpoints value deleted field set true see handling deleted timecards information required permissions timecards_write path parameters timecard_id string timecard delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-timecardid"},{title:"[v1 Endpoint] List Timecard Events",text:"GET /v1/me/timecards/{timecard_id}/events Provides summary information for all events associated with a particular timecard. Required get v1 timecards timecard_id events provides summary information events associated particular timecard required permissions timecards_read path parameters timecard_id string timecard list events return value array zero timecardevent objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-events"},{title:"[v1 Endpoint] List Cash Drawer Shifts",text:"GET /v1/{location_id}/cash-drawer-shifts Provides the details for all of a location's cash drawer shifts during get v1 location_id cash-drawer-shifts provides details location cash drawer shifts date range date range specify exceed 90 days cashdrawershift objects returned endpoint include events field lists events occurred shift get particular shift events retrieve cash drawer shift endpoint required permissions payments_read path parameters location_id string location list cash drawer shifts request parameters get delete endpoints provide request parameters query string appended request url begin_time optional string beginning requested reporting period iso 8601 format default value current time minus 90 days end_time optional string beginning requested reporting period iso 8601 format default value current time order optional listorder order cash drawer shifts listed response based created_at field default value asc return value array zero cashdrawershift objects",tags:"",url:"/api/connect/v1/#get-cashdrawershifts"},{title:"[v1 Endpoint] Retrieve Cash Drawer Shift",
text:"GET /v1/{location_id}/cash-drawer-shifts/{shift_id} Provides the details for a single cash drawer shift, including all events get v1 location_id cash-drawer-shifts shift_id provides details single cash drawer shift including events occurred shift required permissions payments_read path parameters location_id string cash drawer shift associated location shift_id string shift return value cashdrawershift object describes requested shift",tags:"",url:"/api/connect/v1/#get-cashdrawershiftid"},{title:"[v1 Endpoint] List Payments",text:"GET /v1/{location_id}/payments Provides summary information for all payments taken by a merchant or any get v1 location_id payments provides summary information payments taken merchant merchant mobile staff date range date ranges exceed one year length see date ranges details inclusive exclusive dates required permissions payments_read path parameters location_id string location list payments specify endpoint returns payments aggregated business locations get business locations list locations endpoint request parameters get delete endpoints provide request parameters query string appended request url begin_time optional string beginning requested reporting period iso 8601 format value january 1 2013 2013-01-01t00 00 00z endpoint returns error default value current time minus one year end_time optional string end requested reporting period iso 8601 format value one year greater begin_time endpoint returns error default value current time order optional listorder order payments listed response default value asc limit optional number maximum number payments return single response value exceed 200 value always integer default value 100 return value array zero payment objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-payments"},{title:"[v1 Endpoint] Retrieve Payment",text:"GET /v1/{location_id}/payments/{payment_id} Provides comprehensive information for a single payment. Required permissions: PAYMENTS_READ Path Parameters get v1 location_id payments payment_id provides comprehensive information single payment required permissions payments_read path parameters location_id string payment associated location get business locations list locations endpoint payment_id string payment square-issued obtain value payment objects returned list payments endpoint settlement objects returned list settlements endpoint return value payment object describes requested payment",tags:"",url:"/api/connect/v1/#get-paymentid"},{title:"[v1 Endpoint] List Settlements",text:"GET /v1/{location_id}/settlements Provides summary information for all deposits and withdrawals initiated by Square to get v1 location_id settlements provides summary information deposits withdrawals initiated square merchant bank account date range date ranges exceed one year length see date ranges details inclusive exclusive dates settlement objects returned endpoint include entries field lists transactions contribute total settlement get particular settlement entries retrieve settlement endpoint square initiates regular deposits merchant bank accounts schedule indicated page deposit initiated square given day usually provided endpoint 10 pst day square know initiated settlement completes whether failed completed settlement typically reflected merchant bank account within three business days exceptional cases might take longer required permissions settlements_read path parameters location_id string location list settlements specify endpoint returns settlements aggregated business locations get business locations list locations endpoint request parameters get delete endpoints provide request parameters query string appended request url begin_time optional string beginning requested reporting period iso 8601 format value january 1 2013 2013-01-01t00 00 00z endpoint returns error default value current time minus one year end_time optional string end requested reporting period iso 8601 format value one year greater begin_time endpoint returns error default value current time order optional listorder order settlements listed response default value asc limit optional number maximum number settlements return single response value exceed 200 value always integer default value 100 status optional settlement status provide parameter retrieve settlements particular status sent failed return value array zero settlement objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-settlements"},{title:"[v1 Endpoint] Retrieve Settlement",text:"GET /v1/{location_id}/settlements/{settlement_id} Provides comprehensive information for a single settlement, including the entries that contribute get v1 location_id settlements settlement_id provides comprehensive information single settlement including entries contribute settlement total see settlemententry type descriptions types entries compose settlement required permissions settlements_read path parameters location_id string settlement associated location get business locations list locations endpoint settlement_id string settlement square-issued obtain value settlement objects returned list settlements endpoint return value settlement object describes requested settlement",tags:"",url:"/api/connect/v1/#get-settlementid"},{title:"[v1 Endpoint] Create Refund",text:"POST /v1/{location_id}/refunds Issues a refund for a previously processed payment. You must issue a post v1 location_id refunds issues refund previously processed payment issue refund within 120 days associated payment see article information refund behavior issuing refund card payment reversible develop endpoint create fake cash payments square point sale refund issue either full refunds partial refunds issue partial refund specify amount money refund required permissions payments_write path parameters location_id string original payment associated location get business locations list locations endpoint request parameters post put endpoints provide request parameters json request body payment_id string payment refund creating partial refund split tender payment instead provide particular tender want refund see split tender payments details type refund type type refund full partial reason string reason refund refunded_money money amount money refund required partial refunds value amount negative request_idempotence_key optional string optional key ensure idempotence issue partial refund request attempt issue partial refund sure whether request succeeded safely repeat request request_idempotence_key want issue another partial refund payment request_idempotence_key unique among refunds issued payment return value refund object representing issued refund",tags:"",url:"/api/connect/v1/#post-refunds"},{title:"[v1 Endpoint] List Refunds",text:"GET /v1/{location_id}/refunds Provides the details for all refunds initiated by a merchant or any get v1 location_id refunds provides details refunds initiated merchant merchant mobile staff date range date ranges exceed one year length see date ranges details inclusive exclusive dates required permissions payments_read path parameters location_id string location list refunds specify endpoint returns refunds aggregated business locations get business locations list locations endpoint request parameters get delete endpoints provide request parameters query string appended request url begin_time optional string beginning requested reporting period iso 8601 format value january 1 2013 2013-01-01t00 00 00z endpoint returns error default value current time minus one year end_time optional string end requested reporting period iso 8601 format value one year greater begin_time endpoint returns error default value current time order optional listorder order refunds listed response default value asc limit optional number maximum number refunds return single response value exceed 200 value always integer default value 100 return value array zero refund objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-refunds"},{title:"[v1 Endpoint] List Orders",text:"GET /v1/{location_id}/orders You cannot currently manage pickup orders with the Connect API. Provides summary get v1 location_id orders currently manage pickup orders connect api provides summary information merchant online store orders order objects returned endpoint include order_history field lists prior activity related order get particular order history retrieve order endpoint note order objects include list items purchased get items purchased order provide order payment_id retrieve payment endpoint itemizations field returned payment object lists items purchased required permissions orders_read path parameters location_id string location list online store orders get business locations list locations endpoint request parameters get delete endpoints provide request parameters query string appended request url limit optional number maximum number orders return single response value exceed 200 value always integer default value 100 order optional listorder indicates whether orders listed chronological asc reverse-chronological desc order default value asc return value array zero order objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-orders"},{title:"[v1 Endpoint] Retrieve Order",text:"GET /v1/{location_id}/orders/{order_id} You cannot currently manage pickup orders with the Connect API. Provides comprehensive get v1 location_id orders order_id currently manage pickup orders connect api provides comprehensive information single online store order including order history order objects returned endpoint include list items purchased get items purchased provide payment_id order retrieve payment endpoint itemizations field returned payment object lists items purchased required permissions orders_read path parameters location_id string order associated location get business locations list locations endpoint order_id string order square-issued obtain value order objects returned list orders endpoint return value order object describes requested order",tags:"",url:"/api/connect/v1/#get-orderid"},{title:"[v1 Endpoint] Update Order",text:"PUT /v1/{location_id}/orders/{order_id} You cannot currently manage pickup orders with the Connect API. Updates the put v1 location_id orders order_id currently manage pickup orders connect api updates details online store order every update perform order corresponds one three actions completing order order shipped otherwise fulfilled canceling orderrefunding previously completed order note complete cancel order current state open refund order current state completed refund order refund initiated order associated payment required permissions orders_write path parameters location_id string order associated location get business locations list locations endpoint order_id string order modify request parameters post put endpoints provide request parameters json request body action order action action perform order complete cancel refund shipped_tracking_number optional string tracking number shipment associated order valid action complete completed_note optional string merchant-specified note completion order valid action complete refunded_note optional string merchant-specified note refunding order valid action refund canceled_note optional string merchant-specified note canceling order valid action cancel return value order object represents updated order",tags:"",url:"/api/connect/v1/#put-orderid"},{title:"[v1 Endpoint] List Bank Accounts",text:"GET /v1/{location_id}/bank-accounts Provides non-confidential details for all of a location's associated bank accounts. This get v1 location_id bank-accounts provides non-confidential details location associated bank accounts endpoint provide full bank account numbers way obtain full bank account number connect api required permissions bank_accounts_read path parameters location_id string location list bank accounts get business locations list locations endpoint return value array bankaccount objects describing merchant bank accounts",tags:"",url:"/api/connect/v1/#get-bankaccounts"},{title:"[v1 Endpoint] Retrieve Bank Account",text:"GET /v1/{location_id}/bank-accounts/{bank_account_id} Provides non-confidential details for a merchant's associated bank account. This endpoint does get v1 location_id bank-accounts bank_account_id provides non-confidential details merchant associated bank account endpoint provide full bank account numbers way obtain full bank account number connect api required permissions bank_accounts_read path parameters location_id string bank account associated location get business locations list locations endpoint bank_account_id string bank account square-issued obtain value settlement objects returned list settlements endpoint return value bankaccount object describing bank account",tags:"",url:"/api/connect/v1/#get-bankaccountid"},{title:"[v1 Endpoint] Create Item",text:"POST /v1/{location_id}/items Creates an item and at least one variation for it. Required permissions: post v1 location_id items creates item least one variation required permissions items_write path parameters location_id string location create item get business locations list locations endpoint request parameters post put endpoints provide request parameters json request body optional string item unique among entity ids ever provided behalf merchant never reuse value include alphanumeric characters dashes underscores _ provide value generated square name string item name description optional string item description category_id optional string item category color optional item color color item display label square point sale default value 9da2a6 abbreviation optional string text item display label square point sale first five characters string used default value first two characters item name visibility optional item visibility indicates whether item viewable merchant online store public private default value public available_online optional boolean true item added shipping orders merchant online store default value false available_for_pickup optional boolean true item added pickup orders merchant online store default value false variations itemvariation item variations specify least one variation return value item object represents created item",tags:"",url:"/api/connect/v1/#post-items"},{title:"[v1 Endpoint] List Items",text:"GET /v1/{location_id}/items Provides summary information for all of a location's items. Required permissions: ITEMS_READ get v1 location_id items provides summary information location items required permissions items_read path parameters location_id string location list items get business locations list locations endpoint return value array zero item objects objects include modifier_lists fees fields get item associated modifier lists fees retrieve item endpoint endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-items"},{title:"[v1 Endpoint] Retrieve Item",text:"GET /v1/{location_id}/items/{item_id} Provides the details for a single item, including associated modifier lists and get v1 location_id items item_id provides details single item including associated modifier lists fees required permissions items_read path parameters location_id string item associated location get business locations list locations endpoint item_id string item return value item object describes requested item",tags:"",url:"/api/connect/v1/#get-itemid"},{title:"[v1 Endpoint] Update Item",text:"PUT /v1/{location_id}/items/{item_id} Modifies the core details of an existing item. If you want to put v1 location_id items item_id modifies core details existing item want modify item variations update variation endpoint instead want add remove modifier list item apply modifier list remove modifier list endpoints instead want add remove fee item apply fee remove fee endpoints instead required permissions items_write path parameters location_id string item associated location get business locations list locations endpoint item_id string item modify request parameters post put endpoints provide request parameters json request body name optional string item name description optional string item description category_id optional string item category provide empty string value existing category association removed item color optional item color color item display label square point sale abbreviation optional string text item display label square point sale first five characters string used visibility optional item visibility indicates whether item viewable merchant online store public private available_online optional boolean true item purchased merchant online store available_for_pickup optional boolean true item added pickup orders merchant online store return value item object represents updated item",tags:"",url:"/api/connect/v1/#put-itemid"},{title:"[v1 Endpoint] Delete Item",text:"DELETE /v1/{location_id}/items/{item_id} Deletes an existing item and all item variations associated with it. Required delete v1 location_id items item_id deletes existing item item variations associated required permissions items_write path parameters location_id string item associated location get business locations list locations endpoint item_id string item delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-itemid"},{title:"[v1 Endpoint] Upload Item Image",text:"POST /v1/{location_id}/items/{item_id}/image Uploads a JPEG or PNG image and sets it as the master post v1 location_id items item_id image uploads jpeg png image sets master image item see article recommended specifications item images upload image item already master image new image replaces existing one important requests endpoint content-type multipart form-data header instead content-type application json recommended http library requests python simplifies process sending multipart form-data requests example request body shown assumes set request multipart boundary boundary content-type header like content-type multipart form-data boundary boundary note http libraries set request multipart boundary required permissions items_write path parameters location_id string item associated location get business locations list locations endpoint item_id string item associate image request parameters post put endpoints provide request parameters json request body image_data data image binary data return value itemimage object represents uploaded image",tags:"",url:"/api/connect/v1/#post-image"},{title:"[v1 Endpoint] Create Variation",text:"POST /v1/{location_id}/items/{item_id}/variations Creates an item variation for an existing item. Required permissions: ITEMS_WRITE Path post v1 location_id items item_id variations creates item variation existing item required permissions items_write path parameters merchant_id string item associated location get business locations list locations endpoint item_id string item variation applies request parameters post put endpoints provide request parameters json request body optional string variation unique among entity ids ever provided behalf merchant never reuse value include alphanumeric characters dashes underscores _ provide value generated square name string item variation name pricing_type optional itemvariation pricingtype indicates whether item variation price fixed determined time sale default value fixed_pricing price_money money item variation price sku optional string item variation sku track_inventory optional boolean true inventory tracking active variation default value false inventory_alert_type optional inventoryalerttype indicates whether item variation displays alert inventory quantity less equal inventory_alert_threshold default value none inventory_alert_threshold optional number inventory quantity variation less equal value inventory_alert_type low_quantity variation displays alert merchant dashboard value always integer default value 0 user_data optional string arbitrary metadata associate variation exceed 255 characters return value itemvariation object represents created variation",tags:"",url:"/api/connect/v1/#post-variations"},{title:"[v1 Endpoint] Update Variation",text:"PUT /v1/{location_id}/items/{item_id}/variations/{variation_id} Modifies the details of an existing item variation. Required permissions: ITEMS_WRITE Path put v1 location_id items item_id variations variation_id modifies details existing item variation required permissions items_write path parameters location_id string variation associated location get business locations list locations endpoint item_id string item variation applies variation_id string variation modify request parameters post put endpoints provide request parameters json request body name optional string item variation name pricing_type optional itemvariation pricingtype indicates whether item variation price fixed determined time sale default value fixed_pricing price_money optional money item variation price sku optional string item variation sku track_inventory optional boolean true inventory tracking active variation inventory_alert_type optional inventoryalerttype indicates whether item variation displays alert inventory quantity goes inventory_alert_threshold inventory_alert_threshold optional number inventory quantity variation value inventory_alert_type low_quantity variation displays alert merchant dashboard user_data string arbitrary metadata associate variation exceed 255 characters return value itemvariation object represents updated variation",tags:"",url:"/api/connect/v1/#put-variationid"},{title:"[v1 Endpoint] Delete Variation",text:"DELETE /v1/{location_id}/items/{item_id}/variations/{variation_id} Deletes an existing item variation from an item. Every item must have delete v1 location_id items item_id variations variation_id deletes existing item variation item every item least one varation endpoint returns error attempt delete item variation required permissions items_write path parameters location_id string variation associated location get business locations list locations endpoint item_id string item variation applies variation_id string variation delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-variationid"},{title:"[v1 Endpoint] List Inventory",text:"GET /v1/{location_id}/inventory Provides inventory information for all of a merchant's inventory-enabled item variations. See get v1 location_id inventory provides inventory information merchant inventory-enabled item variations see managing inventory learn enable item variation inventory tracking required permissions items_read path parameters location_id string location list inventory get business locations list locations endpoint request parameters get delete endpoints provide request parameters query string appended request url limit number maximum number inventory entries return single response value exceed 1000 value always integer default value 1000 return value array zero inventoryentry objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-inventory"},{title:"[v1 Endpoint] Adjust Inventory",text:"POST /v1/{location_id}/inventory/{variation_id} Adjusts an item variation's current available inventory. See Managing inventory to learn post v1 location_id inventory variation_id adjusts item variation current available inventory see managing inventory learn enable item variation inventory tracking required permissions items_write path parameters location_id string variation associated location get business locations list locations endpoint variation_id string variation adjust inventory information request parameters post put endpoints provide request parameters json request body quantity_delta number number adjust variation quantity value negative adjustment_type sale positive adjustment_type receive_stock adjustment_type inventoryadjustmenttype reason inventory adjustment memo optional string note inventory adjustment return value inventoryentry object represents variation new inventory information",tags:"",url:"/api/connect/v1/#post-inventory-variationid"},{title:"[v1 Endpoint] Create Modifier List",text:"POST /v1/{location_id}/modifier-lists Creates an item modifier list and at least one modifier option for post v1 location_id modifier-lists creates item modifier list least one modifier option required permissions items_write path parameters location_id string location create modifier list get business locations list locations endpoint request parameters post put endpoints provide request parameters json request body optional string modifier list unique among entity ids ever provided behalf merchant never reuse value include alphanumeric characters dashes underscores _ provide value generated square name string modifier list name selection_type optional modifierlist selectiontype indicates whether multiple options modifier list applied single item default value single modifier_options modifieroption options included modifier list include least one modifier option return value modifierlist object represents created modifier list",tags:"",url:"/api/connect/v1/#post-modifierlists"},{title:"[v1 Endpoint] List Modifier Lists",text:"GET /v1/{location_id}/modifier-lists Lists all of a location's modifier lists. Required permissions: ITEMS_READ Path Parameters get v1 location_id modifier-lists lists location modifier lists required permissions items_read path parameters location_id string location list modifier lists get business locations list locations endpoint return value array zero modifierlist objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-modifierlists"},{title:"[v1 Endpoint] Retrieve Modifier List",text:"GET /v1/{location_id}/modifier-lists/{modifier_list_id} Provides the details for a single modifier list. Required permissions: ITEMS_READ Path get v1 location_id modifier-lists modifier_list_id provides details single modifier list required permissions items_read path parameters location_id string modifier list associated location get business locations list locations endpoint modifier_list_id string modifier list return value modifierlist object describes requested modifier list",tags:"",url:"/api/connect/v1/#get-modifierlistid"},{title:"[v1 Endpoint] Update Modifier List",text:"PUT /v1/{location_id}/modifier-lists/{modifier_list_id} Modifies the details of an existing item modifier list. If you want put v1 location_id modifier-lists modifier_list_id modifies details existing item modifier list want modify details single modifier option update modifier option endpoint instead required permissions items_write path parameters location_id string modifier list associated location get business locations list locations endpoint modifier_list_id string modifier list edit request parameters post put endpoints provide request parameters json request body name optional string modifier list name selection_type optional modifierlist selectiontype indicates whether multiple options modifier list applied single item return value modifierlist object represents updated modifier list",tags:"",url:"/api/connect/v1/#put-modifierlistid"},{title:"[v1 Endpoint] Delete Modifier List",text:"DELETE /v1/{location_id}/modifier-lists/{modifier_list_id} Deletes an existing item modifier list and all modifier options associated with delete v1 location_id modifier-lists modifier_list_id deletes existing item modifier list modifier options associated required permissions items_write path parameters location_id string modifier list associated location get business locations list locations endpoint modifier_list_id string modifier list delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-modifierlistid"},{title:"[v1 Endpoint] Apply Modifier List",text:"PUT /v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id} Associates a modifier list with an item, meaning modifier options from the put v1 location_id items item_id modifier-lists modifier_list_id associates modifier list item meaning modifier options list applied item required permissions items_write path parameters location_id string modifier list associated location get business locations list locations endpoint item_id string item add modifier list modifier_list_id string modifier list apply return value item object represents item specified modifier list added",tags:"",url:"/api/connect/v1/#put-itemid-modifierlistid"},{title:"[v1 Endpoint] Remove Modifier List",text:"DELETE /v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id} Removes a modifier list association from an item, meaning modifier options from delete v1 location_id items item_id modifier-lists modifier_list_id removes modifier list association item meaning modifier options list longer applied item required permissions items_write path parameters location_id string modifier list associated location get business locations list locations endpoint item_id string item remove modifier list modifier_list_id string modifier list remove return value item object represents item specified modifier list removed",tags:"",url:"/api/connect/v1/#delete-itemid-modifierlistid"},{title:"[v1 Endpoint] Create Modifier Option",text:"POST /v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options Creates an item modifier option and adds it to a modifier list. post v1 location_id modifier-lists modifier_list_id modifier-options creates item modifier option adds modifier list required permissions items_write path parameters location_id string modifier list associated location get business locations list locations endpoint modifier_list_id string modifier list add option request parameters post put endpoints provide request parameters json request body optional string modifier option unique among entity ids ever provided behalf merchant never reuse value include alphanumeric characters dashes underscores _ provide value generated square name string modifier option name price_money money modifier option price on_by_default optional boolean true modifier option default option modifier list selection_type single default value false return value modifieroption object represents created modifier option",tags:"",url:"/api/connect/v1/#post-modifieroptions"},{title:"[v1 Endpoint] Update Modifier Option",text:"PUT /v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id} Modifies the details of an existing item modifier option. Required permissions: ITEMS_WRITE put v1 location_id modifier-lists modifier_list_id modifier-options modifier_option_id modifies details existing item modifier option required permissions items_write path parameters location_id string modifier option associated location get business locations list locations endpoint modifier_list_id string modifier list contains option edit modifier_option_id string modifier option edit request parameters post put endpoints provide request parameters json request body name optional string modifier option name price_money optional money modifier option price on_by_default optional boolean true modifier option default option modifier list selection_type single return value modifieroption object represents updated modifier option",tags:"",url:"/api/connect/v1/#put-modifieroptionid"},{title:"[v1 Endpoint] Delete Modifier Option",text:"DELETE /v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id} Deletes an existing item modifier option from a modifier list. Every modifier delete v1 location_id modifier-lists modifier_list_id modifier-options modifier_option_id deletes existing item modifier option modifier list every modifier list least one option endpoint returns error attempt delete modifier list option required permissions items_write path parameters location_id string modifier option associated location get business locations list locations endpoint modifier_list_id string modifier list contains option modifier_option_id string modifier option delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-modifieroptionid"},{title:"[v1 Endpoint] Create Category",
text:"POST /v1/{location_id}/categories Creates an item category. To add or remove an item from a post v1 location_id categories creates item category add remove item category update item endpoint required permissions items_write path parameters location_id string location create category get business locations list locations endpoint request parameters post put endpoints provide request parameters json request body optional string category unique among entity ids ever provided behalf merchant never reuse value include alphanumeric characters dashes underscores _ provide value generated square name string category name return value category object represents created category",tags:"",url:"/api/connect/v1/#post-categories"},{title:"[v1 Endpoint] List Categories",text:"GET /v1/{location_id}/categories Lists all of a location's item categories. Required permissions: ITEMS_READ Path Parameters get v1 location_id categories lists location item categories required permissions items_read path parameters location_id string location list categories get business locations list locations endpoint return value array zero category objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-categories"},{title:"[v1 Endpoint] Update Category",text:"PUT /v1/{location_id}/categories/{category_id} Modifies the details of an existing item category. To add or remove put v1 location_id categories category_id modifies details existing item category add remove item category update item endpoint required permissions items_write path parameters location_id string category associated location get business locations list locations endpoint category_id string category edit request parameters post put endpoints provide request parameters json request body name string new name category return value category object represents updated category",tags:"",url:"/api/connect/v1/#put-categoryid"},{title:"[v1 Endpoint] Delete Category",text:"DELETE /v1/{location_id}/categories/{category_id} Deletes an existing item category. Required permissions: ITEMS_WRITE Path Parameters location_id string delete v1 location_id categories category_id deletes existing item category required permissions items_write path parameters location_id string category associated location category_id string category delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-categoryid"},{title:"[v1 Endpoint] Create Discount",text:"POST /v1/{location_id}/discounts Creates a discount. Required permissions: ITEMS_WRITE Path Parameters location_id string The ID post v1 location_id discounts creates discount required permissions items_write path parameters location_id string location create discount get business locations list locations endpoint request parameters post put endpoints provide request parameters json request body optional string discount unique among entity ids ever provided behalf merchant never reuse value include alphanumeric characters dashes underscores _ provide value generated square name string discount name rate optional string rate discount string representation decimal number value 0 07 corresponds rate 7 specify rate 0 discount_type variable_percentage include field amount-based discounts amount_money optional money amount discount specify amount 0 discount_type variable_amount include field rate-based discounts discount_type optional discount type indicates whether discount fixed value entered time sale default value fixed pin_required optional boolean indicates whether mobile staff member needs enter pin apply discount payment default value false color optional item color color discount display label square point sale default value 9da2a6 return value discount object represents created discount",tags:"",url:"/api/connect/v1/#post-discounts"},{title:"[v1 Endpoint] List Discounts",text:"GET /v1/{location_id}/discounts Lists all of a location's discounts. Required permissions: ITEMS_READ Path Parameters location_id get v1 location_id discounts lists location discounts required permissions items_read path parameters location_id string location list discounts get business locations list locations endpoint return value array zero discount objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-discounts"},{title:"[v1 Endpoint] Update Discount",text:"PUT /v1/{location_id}/discounts/{discount_id} Modifies the details of an existing discount. Required permissions: ITEMS_WRITE Path Parameters put v1 location_id discounts discount_id modifies details existing discount required permissions items_write path parameters location_id string discount associated location get business locations list locations endpoint discount_id string discount edit request parameters post put endpoints provide request parameters json request body name optional string discount name rate optional string rate discount string representation decimal number value 0 07 corresponds rate 7 specify rate 0 discount_type variable_percentage include field amount-based discounts amount_money optional money amount discount specify amount 0 discount_type variable_amount include field rate-based discounts discount_type optional discount type indicates whether discount fixed value entered time sale default value fixed pin_required optional boolean indicates whether mobile staff member needs enter pin apply discount payment default value false color optional item color color discount display label square point sale default value 9da2a6 return value discount object represents updated discount",tags:"",url:"/api/connect/v1/#put-discountid"},{title:"[v1 Endpoint] Delete Discount",text:"DELETE /v1/{location_id}/discounts/{discount_id} Deletes an existing discount. Required permissions: ITEMS_WRITE Path Parameters location_id string The delete v1 location_id discounts discount_id deletes existing discount required permissions items_write path parameters location_id string discount associated location get business locations list locations endpoint discount_id string discount delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-discountid"},{title:"[v1 Endpoint] Create Fee",text:"POST /v1/{location_id}/fees Creates a fee (tax). Required permissions: ITEMS_WRITE Path Parameters location_id string The post v1 location_id fees creates fee tax required permissions items_write path parameters location_id string location create fee get business locations list locations endpoint request parameters post put endpoints provide request parameters json request body optional string fee unique among entity ids ever provided behalf merchant never reuse value include alphanumeric characters dashes underscores _ provide value generated square name string fee name rate string rate fee string representation decimal number value 0 07 corresponds rate 7 calculation_phase optional fee calculationphase whether fee calculated based payment subtotal total default value fee_subtotal_phase adjustment_type optional fee adjustmenttype type adjustment fee applies payment currently value tax fees default value tax applies_to_custom_amounts optional boolean true fee applies custom amounts entered square point sale associated particular item default value true enabled optional boolean true fee applied payments false default value true inclusion_type optional fee inclusiontype whether fee additive inclusive default value additive return value fee object represents created fee",tags:"",url:"/api/connect/v1/#post-fees"},{title:"[v1 Endpoint] List Fees",text:"GET /v1/{location_id}/fees Lists all of a location's fees (taxes). Required permissions: ITEMS_READ Path Parameters get v1 location_id fees lists location fees taxes required permissions items_read path parameters location_id string location list fees get business locations list locations endpoint return value array zero fee objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-fees"},{title:"[v1 Endpoint] Update Fee",text:"PUT /v1/{location_id}/fees/{fee_id} Modifies the details of an existing fee (tax). Required permissions: ITEMS_WRITE Path put v1 location_id fees fee_id modifies details existing fee tax required permissions items_write path parameters location_id string fee associated location get business locations list locations endpoint fee_id string fee edit request parameters post put endpoints provide request parameters json request body name optional string fee name rate optional string rate fee string representation decimal number value 0 07 corresponds rate 7 calculation_phase optional fee calculationphase whether fee calculated based payment subtotal total default value fee_subtotal_phase adjustment_type optional fee adjustmenttype type adjustment fee applies payment currently value tax fees default value tax applies_to_custom_amounts optional boolean true fee applies custom amounts entered square point sale associated particular item default value true enabled optional boolean true fee applied appropriate items false fee applied default value true inclusion_type optional fee inclusiontype whether fee additive inclusive default value additive return value fee object represents updated fee",tags:"",url:"/api/connect/v1/#put-feeid"},{title:"[v1 Endpoint] Delete Fee",text:"DELETE /v1/{location_id}/fees/{fee_id} Deletes an existing fee (tax). Required permissions: ITEMS_WRITE Path Parameters location_id string delete v1 location_id fees fee_id deletes existing fee tax required permissions items_write path parameters location_id string fee associated location get business locations list locations endpoint fee_id string fee delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-feeid"},{title:"[v1 Endpoint] Apply Fee",text:"PUT /v1/{location_id}/items/{item_id}/fees/{fee_id} Associates a fee with an item, meaning the fee is automatically applied put v1 location_id items item_id fees fee_id associates fee item meaning fee automatically applied item square point sale required permissions items_write path parameters location_id string fee associated location get business locations list locations endpoint item_id string item add fee fee_id string fee apply return value item object represents item specified fee added",tags:"",url:"/api/connect/v1/#put-itemid-feeid"},{title:"[v1 Endpoint] Remove Fee",text:"DELETE /v1/{location_id}/items/{item_id}/fees/{fee_id} Removes a fee assocation from an item, meaning the fee is no delete v1 location_id items item_id fees fee_id removes fee assocation item meaning fee longer automatically applied item square point sale required permissions items_write path parameters location_id string fee associated location get business locations list locations endpoint item_id string item remove fee fee_id string fee remove return value item object represents item specified fee removed",tags:"",url:"/api/connect/v1/#delete-itemid-feeid"},{title:"[v1 Endpoint] Create Page",text:"POST /v1/{location_id}/pages Creates a Favorites page in Square Point of Sale. A merchant can post v1 location_id pages creates favorites page square point sale merchant five pages page_index 0 4 inclusive create page set values cells update cell endpoint page appear square point sale unless least one cells assigned value required permissions items_write path parameters location_id string location create favorites page get business locations list locations endpoint request parameters post put endpoints provide request parameters json request body optional string page unique among entity ids ever provided behalf merchant never reuse value include alphanumeric characters dashes underscores _ provide value generated square name optional string page name page_index number page position list pages integer 0 4 inclusive endpoint returns error specify page_index another page already using return value page object represents created page",tags:"",url:"/api/connect/v1/#post-pages"},{title:"[v1 Endpoint] List Pages",text:"GET /v1/{location_id}/pages Lists all of a location's Favorites pages in Square Point of Sale. get v1 location_id pages lists location favorites pages square point sale required permissions items_read path parameters location_id string location list favorites pages get business locations list locations endpoint return value array zero page objects",tags:"",url:"/api/connect/v1/#get-pages"},{title:"[v1 Endpoint] Update Page",text:"PUT /v1/{location_id}/pages/{page_id} Modifies the details of a Favorites page in Square Point of Sale. put v1 location_id pages page_id modifies details favorites page square point sale required permissions items_write path parameters location_id string favorites page associated location get business locations list locations endpoint page_id string page modify request parameters post put endpoints provide request parameters json request body name optional string page name page_index optional number page position merchant list pages integer 0 4 inclusive page index updated another page already exists specified index return value page object represents updated page",tags:"",url:"/api/connect/v1/#put-pageid"},{title:"[v1 Endpoint] Delete Page",text:"DELETE /v1/{location_id}/pages/{page_id} Deletes an existing Favorites page and all of its cells. Required permissions: delete v1 location_id pages page_id deletes existing favorites page cells required permissions items_write path parameters location_id string favorites page associated location get business locations list locations endpoint page_id string page delete return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-pageid"},{title:"[v1 Endpoint] Update Cell",text:"PUT /v1/{location_id}/pages/{page_id}/cells Modifies a cell of a Favorites page in Square Point of Sale. put v1 location_id pages page_id cells modifies cell favorites page square point sale required permissions items_write path parameters location_id string favorites page associated location get business locations list locations endpoint page_id string page cell belongs request parameters post put endpoints provide request parameters json request body row number row cell update always integer 0 4 inclusive row 0 top row column number column cell update always integer 0 4 inclusive column 0 leftmost row object_type pagecell type type entity represented cell item discount category placeholder object_id string unique identifier entity represent cell include cell object_type placeholder placeholder_type pagecell placeholdertype cell object_type placeholder indicates cell behavior return value pagecell object represents updated cell",tags:"",url:"/api/connect/v1/#put-cells"},{title:"[v1 Endpoint] Delete Cell",text:"DELETE /v1/{location_id}/pages/{page_id}/cells Deletes a cell from a Favorites page in Square Point of Sale. delete v1 location_id pages page_id cells deletes cell favorites page square point sale required permissions items_write path parameters location_id string favorites page associated location get business locations list locations endpoint page_id string favorites page cell belongs request parameters get delete endpoints provide request parameters query string appended request url row number row cell clear always integer 0 4 inclusive row 0 top row column number column cell clear always integer 0 4 inclusive column 0 leftmost column return value request succeeds endpoint returns 200 status code empty json object",tags:"",url:"/api/connect/v1/#delete-cells"},{title:"[v1 Endpoint] Submit Batch",text:"POST /v1/batch Lets you batch multiple requests to other Connect API endpoints into a post v1 batch lets batch multiple requests connect api endpoints single request endpoint response array contains response batched request need provide access token header request submit batch endpoint instead provide access_token parameter request included batch note following using submit batch endpoint include 30 requests single batch recursive requests submit batch endpoint allowed none requests included batch request endpoint guarantee order batched requests performed request parameters post put endpoints provide request parameters json request body requests batchrequest requests perform return value array batchresponse objects corresponding requests index response array matches index corresponding request",tags:"",url:"/api/connect/v1/#post-batch"},{title:"[v1 Endpoint] List Webhooks",text:"GET /v1/{location_id}/webhooks Lists which types of events trigger webhook notifications for a particular location. get v1 location_id webhooks lists types events trigger webhook notifications particular location path parameters location_id string location list webhook notification types return value array webhookeventtype values",tags:"",url:"/api/connect/v1/#get-webhooks"},{title:"[v1 Endpoint] Update Webhooks",text:"PUT /v1/{location_id}/webhooks Sets which types of events trigger webhook notifications for a location. Simply put v1 location_id webhooks sets types events trigger webhook notifications location simply provide json array event types want notifications request body see example requests path parameters location_id string location update webhook preferences return value array webhookeventtype values match values provided",tags:"",url:"/api/connect/v1/#put-webhooks"},{title:"[v1 Endpoint] List Subscriptions",text:"GET /oauth2/clients/{client_id}/subscriptions Lists subscriptions that have been created for an application. You can look get oauth2 clients client_id subscriptions lists subscriptions created application look subscription information single merchant providing merchant_id parameter endpoint subscription objects returned endpoint include fees field lists subscription payment history get particular subscription payment history retrieve subscription endpoint important authorization header provide endpoint following format authorization client application_secret replace application_secret application secret available application dashboard path parameters client_id string application available application dashboard request parameters get delete endpoints provide request parameters query string appended request url merchant_id optional string provide parameter endpoint returns subscription information specified merchant get merchant retrieve merchant endpoint limit number maximum number subscriptions return single response value exceed 200 default value 100 return value array zero subscription objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-subscriptions"},{title:"[v1 Endpoint] Retrieve Subscription",text:"GET /oauth2/clients/{client_id}/subscriptions/{subscription_id} Provides comprehensive information for a single subscription, including its payment history. Important: get oauth2 clients client_id subscriptions subscription_id provides comprehensive information single subscription including payment history important authorization header provide endpoint following format authorization client application_secret replace application_secret application secret available application dashboard path parameters client_id string application available application dashboard subscription_id string subscription return value subscription object describes requested subscription",tags:"",url:"/api/connect/v1/#get-subscriptionid"},{title:"[v1 Endpoint] List Subscription Plans",text:"GET /oauth2/clients/{client_id}/plans Provides information for all of an application's subscription plans. Important: The Authorization get oauth2 clients client_id plans provides information application subscription plans important authorization header provide endpoint following format authorization client application_secret replace application_secret application secret available application dashboard path parameters client_id string application available application dashboard return value array zero subscriptionplan objects endpoint might paginate results",tags:"",url:"/api/connect/v1/#get-plans"},{title:"[v1 Endpoint] Retrieve Subscription Plan",text:"GET /oauth2/clients/{client_id}/plans/{plan_id} This endpoint is deprecated. Use the List Subscription Plans endpoint instead. Provides get oauth2 clients client_id plans plan_id endpoint deprecated list subscription plans endpoint instead provides comprehensive information single subscription plan important authorization header provide endpoint following format authorization client application_secret replace application_secret application secret available application dashboard path parameters client_id string application available application dashboard plan_id string subscription plan return value subscriptionplan object describes requested subscription",tags:"",url:"/api/connect/v1/#get-planid"},{title:"[v1 Type] BankAccount",text:"Represents a merchant's bank account. Fields id string The bank account's Square-issued ID. merchant_id represents merchant bank account fields string bank account square-issued merchant_id string square-issued merchant associated bank account bank_name string name bank manages account name string name associated bank account type bankaccount type bank account type example savings checking routing_number string bank account routing number account_number_suffix string last digits bank account number currency_code string currency code currency associated bank account iso 4217 format example currency code dollars usd",tags:"",url:"/api/connect/v1/#datatype-bankaccount"},{title:"[v1 Type] BatchRequest",text:"Represents a single request included in a call to the Submit Batch endpoint. Fields represents single request included call submit batch endpoint fields method requestmethod http method request delete get post put relative_path string path request endpoint relative https connect squareup com example value v1 merchant_id payments list payments endpoint proper merchant get delete requests include request parameters query string appended path example v1 merchant_id payments order desc access_token string access token request personal access token access token generated oauth api body object body request include parameters post put requests request_id string optional identifier request returned request corresponding batchresponse",tags:"",url:"/api/connect/v1/#datatype-batchrequest"},{title:"[v1 Type] BatchResponse",text:"Represents the response for a request included in a call to the Submit Batch represents response request included call submit batch endpoint fields status_code number response http status code headers object contains important headers response indexed header name example response includes pagination header header value available headers link body object body response request_id string value provided request_id corresponding batchrequest",tags:"",url:"/api/connect/v1/#datatype-batchresponse"},{title:"[v1 Type] Coordinates",text:"Represents geographic coordinates. Fields latitude number The latitude coordinate, in degrees. longitude number The represents geographic coordinates fields latitude number latitude coordinate degrees longitude number longitude coordinate degrees",tags:"",url:"/api/connect/v1/#datatype-coordinates"},{title:"[v1 Type] CashDrawerEvent",text:"Represents an event (such as a payment or refund) that involved opening the cash represents event payment refund involved opening cash drawer cash drawer shift fields string event unique employee_id string employee created event event_type cashdrawerevent type type event occurred cash_tender_payment cash_tender_refund event_money money amount money added removed cash drawer event value positive added money negative removed money created_at string time event occurred iso 8601 format description string optional description event entered employee created",tags:"",url:"/api/connect/v1/#datatype-cashdrawerevent"},{title:"[v1 Type] CashDrawerShift",text:"Represents all cash drawer activity that takes place during a single cash drawer shift. represents cash drawer activity takes place single cash drawer shift fields string shift unique cash_drawer_state cashdrawershift state shift current state open ended closed opened_at string time shift began iso 8601 format ended_at string time shift ended iso 8601 format closed_at string time shift closed iso 8601 format employee_ids string ids employees logged square point sale point cash drawer shift opening_employee_id string employee started cash drawer shift ending_employee_id string employee ended cash drawer shift closing_employee_id string employee closed cash drawer shift auditing cash drawer contents description string optional description shift entered employee ended starting_cash_money money amount money cash drawer start shift cash_payment_money money amount money added cash drawer cash payments cash_refunds_money money amount money removed cash drawer cash refunds value always negative zero cash_paid_in_money money amount money added cash drawer reasons cash payments cash_paid_out_money money amount money removed cash drawer reasons cash refunds expected_cash_money money amount money cash drawer end shift based shift money amounts closed_cash_money money amount money found cash drawer end shift auditing employee device device device running square point sale connected cash drawer events cashdrawerevent events payments refunds involved cash drawer shift",tags:"",url:"/api/connect/v1/#datatype-cashdrawershift"},{title:"[v1 Type] Category",text:"Represents an item category. Fields id string The category's unique ID. name string The represents item category fields string category unique name string category name",tags:"",url:"/api/connect/v1/#datatype-category"},{title:"[v1 Type] Device",text:"Represents a device running Square Point of Sale. Fields name string The device's merchant-specified represents device running square point sale fields name string device merchant-specified name string device square-issued",tags:"",url:"/api/connect/v1/#datatype-device"},{title:"[v1 Type] Discount",text:"Represents a discount that can be applied to a payment. A discount can be represents discount applied payment discount either percentage flat amount determine particular discount type checking rate amount_money included object fields string discount unique name string discount name rate string rate discount string representation decimal number value 0 07 corresponds rate 7 rate 0 discount_type variable_percentage field included amount-based discounts amount_money money amount discount amount 0 discount_type variable_amount field included rate-based discounts discount_type discount type indicates whether discount fixed value entered time sale pin_required boolean indicates whether mobile staff member needs enter pin apply discount payment color item color color discount display label square point sale default color default color 9da2a6",tags:"",url:"/api/connect/v1/#datatype-discount"},{title:"[v1 Type] Employee",text:"Represents one of a business' employees. Fields id string The employee's unique ID. first_name represents one business employees fields string employee unique first_name string employee first name last_name string employee last name role_ids string ids employee associated roles currently specify one zero roles per employee authorized_location_ids string ids locations employee allowed clock email string employee email address edit value connect api set initial value creating employee create employee endpoint status employee status whether employee active inactive inactive employees sign square point sale merchants update field square dashboard modify connect api external_id string merchant set associate employee entity another system set value connect api created_at string time employee entity created iso 8601 format updated_at string time employee entity recently updated iso 8601 format",tags:"",url:"/api/connect/v1/#datatype-employee"},{title:"[v1 Type] EmployeeRole",text:"Represents a role that can be assigned to one or more employees. An employee's represents role assigned one employees employee role indicates permissions fields string role unique name string role merchant-defined name permissions employeerole permission permissions role granted is_owner boolean true employees role permissions regardless values indicated permissions created_at string time role created iso 8601 format updated_at string time role recently updated iso 8601 format",tags:"",url:"/api/connect/v1/#datatype-employeerole"},{title:"[v1 Type] Fee",text:"Represents a tax or other fee that can be applied to a payment. Fields represents tax fee applied payment fields string fee unique name string fee name rate string rate fee string representation decimal number value 0 07 corresponds rate 7 calculation_phase fee calculationphase forthcoming adjustment_type fee adjustmenttype type adjustment fee applies payment currently value tax fees applies_to_custom_amounts boolean true fee applies custom amounts entered square point sale associated particular item enabled boolean true fee applied appropriate items false fee applied inclusion_type fee inclusiontype whether fee additive inclusive type fee type countries multiple classifications sales taxes indicates classification fee falls currently relevant canadian merchants",tags:"",url:"/api/connect/v1/#datatype-fee"},{title:"[v1 Type] GlobalAddress",text:"A generic representation of a physical address. Fields address_line_1 string The first line of generic representation physical address fields address_line_1 string first line address fields start address_line provide address specific details like street number street name building name provide less specific details like city state province country details provided fields address_line_2 string second line address address_line_3 string third line address address_line_4 string fourth line address address_line_5 string fifth line address locality string city town address sublocality string civil region within address locality sublocality_1 string civil region within address sublocality sublocality_2 string civil region within address sublocality_1 sublocality_3 string civil region within address sublocality_2 sublocality_4 string civil region within address sublocality_3 sublocality_5 string civil region within address sublocality_4 administrative_district_level_1 string civil entity within address country united states state administrative_district_level_2 string civil entity within address administrative_district_level_1 united states county administrative_district_level_3 string civil entity within address administrative_district_level_2 postal_code string address postal code country_code string address country iso 3166-1-alpha-2 format address_coordinates coordinates coordinates address",tags:"",url:"/api/connect/v1/#datatype-globaladdress"},{title:"[v1 Type] InventoryEntry",text:"Represents inventory information for one of a merchant's item variations. Fields variation_id string The represents inventory information one merchant item variations fields variation_id string variation entry corresponds quantity_on_hand number current available quantity item variation",tags:"",url:"/api/connect/v1/#datatype-inventoryentry"},{title:"[v1 Type] Item",text:"Represents a merchant's item. Fields id string The item's unique ID. name string The represents merchant item fields string item unique name string item name description string item description type item type item type value normal almost items abbreviation string text item display label square point sale value present abbreviation default set color item color color item display label square point sale default color default color 9da2a6 visibility item visibility indicates whether item viewable merchant online store public private available_online boolean true item available purchase merchant online store master_image itemimage item master image category category category item belongs variations itemvariation item variations modifier_lists modifierlist modifier lists apply item fees fee fees apply item taxable boolean deprecated field used",tags:"",url:"/api/connect/v1/#datatype-item"},{title:"[v1 Type] ItemImage",text:"Represents an image of an item. Fields id string The image's unique ID. url represents image item fields string image unique url string image publicly accessible url",tags:"",url:"/api/connect/v1/#datatype-itemimage"},{title:"[v1 Type] ItemVariation",
text:"Represents a variation of an Item. Every item has at least one variation. Fields represents variation item every item least one variation fields string item variation unique name string item variation name item_id string variation associated item ordinal number indicates variation list position displayed square point sale merchant dashboard one variation item ordinal value variations displayed alphabetical order item variation lowest ordinal value displayed first pricing_type itemvariation pricingtype indicates whether item variation price fixed determined time sale price_money money item variation price sku string item variation sku track_inventory boolean true inventory tracking active variation inventory_alert_type inventoryalerttype indicates whether item variation displays alert inventory quantity less equal inventory_alert_threshold inventory_alert_threshold number inventory quantity variation less equal value inventory_alert_type low_quantity variation displays alert merchant dashboard value always integer user_data string arbitrary metadata associated variation exceed 255 characters",tags:"",url:"/api/connect/v1/#datatype-itemvariation"},{title:"[v1 Type] Merchant",text:"Represents a Square merchant account. Fields id string The merchant account's unique identifier. name represents square merchant account fields string merchant account unique identifier name string name associated merchant account email string email address associated merchant account account_type merchant accounttype indicates whether merchant account corresponds single-location account location business account business value almost always location see structure square business information account_capabilities merchant accountcapability capabilities enabled merchant square account capabilities listed array enabled account currently one capability credit_card_processing country_code string country associated merchant account iso 3166-1-alpha-2 format language_code string language associated merchant account bcp 47 format currency_code string currency associated merchant account iso 4217 format example currency code dollars usd business_name string name merchant business business_address globaladdress address merchant business business_phone phonenumber phone number merchant business business_type merchant businesstype type business operated merchant shipping_address globaladdress merchant shipping address location_details merchantlocationdetails additional information single-location account specified associated business account one never included merchant objects account_typebusiness market_url string url merchant online store",tags:"",url:"/api/connect/v1/#datatype-merchant"},{title:"[v1 Type] MerchantLocationDetails",text:"Represents additional details for a single-location account as specified by its parent business. Fields represents additional details single-location account specified parent business fields nickname string nickname assigned single-location account parent business value appears parent business multi-location dashboard",tags:"",url:"/api/connect/v1/#datatype-merchantlocationdetails"},{title:"[v1 Type] ModifierList",text:"Represents an item modifier list. Fields id string The modifier list's unique ID. name represents item modifier list fields string modifier list unique name string modifier list name selection_type modifierlist selectiontype indicates whether multiple options single option modifier list applied single item modifier_options modifieroption options included modifier list",tags:"",url:"/api/connect/v1/#datatype-modifierlist"},{title:"[v1 Type] ModifierOption",text:"Represents an item modifier option. Fields id string The modifier option's unique ID. name represents item modifier option fields string modifier option unique name string modifier option name price_money money modifier option price on_by_default boolean true modifier option default option modifier list selection_type single ordinal number indicates modifier option list position displayed square point sale merchant dashboard one modifier option modifier list ordinal value options displayed alphabetical order modifier list option lowest ordinal value displayed first modifier_list_id string modifier list option belongs",tags:"",url:"/api/connect/v1/#datatype-modifieroption"},{title:"[v1 Type] Money",text:"Represents an amount of money. When you provide this object in a request, currency_code represents amount money provide object request currency_code match currency associated merchant square account fields amount number amount money smallest unit applicable currency dollars value cents value always integer currency_code money currencycode type currency involved current payment iso 4217 format example currency code dollars usd",tags:"",url:"/api/connect/v1/#datatype-money"},{title:"[v1 Type] Order",text:"Represents an order from a merchant's online store. Fields id string The order's unique represents order merchant online store fields string order unique identifier state order state order current state open completed buyer_email string email address order buyer recipient_name string name order buyer recipient_phone_number string phone number order delivery shipping_address globaladdress address ship order subtotal_money money amount items purchased order taxes shipping total_shipping_money money shipping cost order total_tax_money money total taxes applied order total_price_money money total cost order total_discount_money money total discounts applied order created_at string time order created iso 8601 format updated_at string time order last modified iso 8601 format expires_at string time order expires action taken iso 8601 format payment_id string unique identifier payment associated order buyer_note string note provided buyer order created completed_note string note provided merchant order state set completed refunded_note string note provided merchant order state set refunded canceled_note string note provided merchant order state set canceled tender tender tender used pay order order_history orderhistoryentry history actions associated order promo_code string promo code provided buyer btc_receive_address string bitcoin transactions address buyer sent bitcoin btc_price_satoshi number bitcoin transactions price buyer order satoshi 100 million satoshi equals 1 btc",tags:"",url:"/api/connect/v1/#datatype-order"},{title:"[v1 Type] OrderHistoryEntry",text:"Represents a prior action performed on an online store order. Fields action OrderHistoryEntry.ActionType The represents prior action performed online store order fields action orderhistoryentry actiontype type action performed order created_at string time action performed iso 8601 format",tags:"",url:"/api/connect/v1/#datatype-orderhistoryentry"},{title:"[v1 Type] Page",text:"Represents a Favorites page in the iPad version of Square Point of Sale. Fields represents favorites page ipad version square point sale fields string page unique identifier name string page name page_index number page position merchant list pages always integer 0 4 inclusive cells pagecell cells included page",tags:"",url:"/api/connect/v1/#datatype-page"},{title:"[v1 Type] PageCell",text:"Represents a cell of a Page. Fields page_id string The unique identifier of the represents cell page fields page_id string unique identifier page cell included row number row cell always integer 0 4 inclusive column number column cell always integer 0 4 inclusive object_type pagecell type type entity represented cell item discount category placeholder object_id string unique identifier entity represented cell present cells object_type placeholder placeholder_type pagecell placeholdertype cell object_type placeholder value indicates cell special behavior",tags:"",url:"/api/connect/v1/#datatype-pagecell"},{title:"[v1 Type] Payment",text:"Represents a payment taken by a Square merchant. Fields id string The payment's unique represents payment taken square merchant fields string payment unique identifier merchant_id string unique identifier merchant took payment created_at string time payment created iso 8601 format creator_id string unique identifier square account took payment value differ merchant_id merchant mobile staff device device device took payment payment_url string url payment detail page merchant dashboard merchant signed merchant dashboard view page receipt_url string url receipt payment note split tender payments url corresponds receipt first tender listed payment tender field tender object receipt_url field get receipts associated split tender payment inclusive_tax_money money sum inclusive taxes associated payment additive_tax_money money sum additive taxes associated payment tax_money money total taxes applied payment always sum inclusive_tax_money additive_tax_money tip_money money total tips applied payment discount_money money total discounts applied payment value always 0 negative total_collected_money money total amount money collected buyer payment processing_fee_money money total processing fees collected square payment value always 0 negative net_total_money money amount deposited merchant bank account payment always sum total_collected_money processing_fee_money note processing_fee_money always negative 0 refunded_money money total refunds applied payment swedish_rounding_money money total sales including applicable taxes rounded smallest legal unit currency nearest penny usd nearest nickel cad gross_sales_money money total cost itemization modifiers including taxes discounts net_sales_money money sum gross_sales_money discount_money inclusive_tax paymenttax inclusive taxes associated payment additive_tax paymenttax additive taxes associated payment tender tender form tender provided buyer payment refunds refund refunds applied payment itemizations paymentitemization items purchased payment",tags:"",url:"/api/connect/v1/#datatype-payment"},{title:"[v1 Type] PaymentDiscount",text:"Represents a discount applied to an itemization in a payment. Fields name string The represents discount applied itemization payment fields name string discount name applied_money money amount money discount adds payment note value always negative zero discount_id string applied discount available discounts applied older versions square point sale might",tags:"",url:"/api/connect/v1/#datatype-paymentdiscount"},{title:"[v1 Type] PaymentItemDetail",text:"Represents details of an item purchased in a payment. Fields category_name string The name represents details item purchased payment fields category_name string name item merchant-defined category sku string item merchant-defined sku item_id string unique item purchased item_variation_id string unique item variation purchased",tags:"",url:"/api/connect/v1/#datatype-paymentitemdetail"},{title:"[v1 Type] PaymentItemization",text:"Represents an item, custom monetary amount, or other entity purchased as part of a represents item custom monetary amount entity purchased part payment fields name string item name quantity number quantity item purchased decimal value itemization_type paymentitemization type type purchase itemization represents item custom_amount item_detail paymentitemdetail details item including unique identifier identifier item variation purchased notes string notes entered merchant item time payment item_variation_name string name item variation purchased total_money money total cost item including taxes discounts single_quantity_money money cost single unit item gross_sales_money money total cost itemization modifiers including taxes discounts discount_money money total discounts applied itemization value always negative zero net_sales_money money sum gross_sales_money discount_money taxes paymenttax taxes applied itemization discounts paymentdiscount discounts applied itemization modifiers paymentmodifier modifier options applied itemization",tags:"",url:"/api/connect/v1/#datatype-paymentitemization"},{title:"[v1 Type] PaymentModifier",text:"Represents a modifier option applied to an itemization in a payment. Fields name string represents modifier option applied itemization payment fields name string modifier option name applied_money money amount money modifier option adds payment modifier_option_id string applied modifier option available modifier options applied older versions square point sale might",tags:"",url:"/api/connect/v1/#datatype-paymentmodifier"},{title:"[v1 Type] PaymentTax",text:"Represents a single tax applied to a payment. Fields name string The merchant-defined name represents single tax applied payment fields name string merchant-defined name tax applied_money money amount money tax adds payment rate string rate tax string representation decimal number value 0 07 corresponds rate 7 inclusion_type fee inclusiontype whether tax additive tax inclusive tax fee_id string tax available taxes applied older versions square point sale might",tags:"",url:"/api/connect/v1/#datatype-paymenttax"},{title:"[v1 Type] PhoneNumber",text:"Represents a phone number. Fields calling_code string The phone number's international calling code. For represents phone number fields calling_code string phone number international calling code phone numbers value 1 number string phone number",tags:"",url:"/api/connect/v1/#datatype-phonenumber"},{title:"[v1 Type] Refund",text:"Represents a refund initiated by a Square merchant. Fields type Refund.Type The type of represents refund initiated square merchant fields type refund type type refund full partial reason string merchant-specified reason refund refunded_money money amount money refunded amount always negative created_at string time merchant initiated refund square process iso 8601 format processed_at string time square processed refund behalf merchant iso 8601 format payment_id string square-issued payment refund applied merchant_id string unique identifier merchant took payment",tags:"",url:"/api/connect/v1/#datatype-refund"},{title:"[v1 Type] Settlement",text:"Represents a deposit or withdrawal made by Square to a merchant's bank account. Fields represents deposit withdrawal made square merchant bank account fields string settlement unique identifier status settlement status settlement current status initiated_at string time settlement submitted deposit withdrawal iso 8601 format bank_account_id string square-issued unique identifier bank account associated settlement total_money money amount money involved settlement positive amount indicates deposit negative amount indicates withdrawal amount never zero entries settlemententry entries included settlement",tags:"",url:"/api/connect/v1/#datatype-settlement"},{title:"[v1 Type] SettlementEntry",text:"Represents a single entry in a Settlement. Fields type SettlementEntry.Type The type of activity represents single entry settlement fields type settlemententry type type activity entry represents payment_id string payment associated settlement entry amount_money money total amount money entry contributes total settlement amount fee_money money amount square fees associated settlement entry value always negative zero amount already applied amount_money",tags:"",url:"/api/connect/v1/#datatype-settlemententry"},{title:"[v1 Type] Subscription",text:"Represents a merchant's subscription to an application. Fields id string The subscription's unique ID. represents merchant subscription application fields string subscription unique merchant_id string merchant subscription plan_id string subscriptionplan subscription belongs status subscription status subscription status active canceled payment_method subscription paymentmethod method payment used pay subscription monthly fee fee_base_money money subscription base monthly fee service_start_date string date subscription recently became active yyyy-mm-dd format fees subscriptionfee history subscription fees paid pending subscription reverse chronological order newest first",tags:"",url:"/api/connect/v1/#datatype-subscription"},{title:"[v1 Type] SubscriptionFee",text:"Represents a single fee charged to a merchant for a Subscription. Fields fee_date string represents single fee charged merchant subscription fields fee_date string date subscription fee charged yyyy-mm-dd format fee_status subscriptionfee status payment status subscription fee pending paid fee_base_money money subscription fee base amount fee_tax_money money total taxes applied subscription fee fee_total_money money subscription fee total amount always sum fee_base_money fee_tax_money",tags:"",url:"/api/connect/v1/#datatype-subscriptionfee"},{title:"[v1 Type] SubscriptionPlan",text:"Represents an application subscription plan. Fields id string The plan's unique ID. name string represents application subscription plan fields string plan unique name string plan name country_code string country plan applies iso 3166-1-alpha-2 format fee_base_money money plan base monthly fee",tags:"",url:"/api/connect/v1/#datatype-subscriptionplan"},{title:"[v1 Type] Tender",text:"Represents a form and amount of tender provided for a payment. Multiple forms of represents form amount tender provided payment multiple forms tender provided single payment fields string tender unique type tender type type tender name string human-readable description tender employee_id string employee processed tender field included associated merchant employee management features enabled time tender processed receipt_url string url receipt tender card_brand tender cardbrand brand credit card provided present tender type credit_card pan_suffix string last four digits provided credit card account number present tender type credit_card entry_method tender entrymethod method tender entered payment_note string notes entered merchant tender time payment typically present tender typeother total_money money total amount money provided form tender tendered_money money amount total_money applied payment change_back_money money amount total_money returned buyer change refunded_money money total refunds applied tender amount always negative zero",tags:"",url:"/api/connect/v1/#datatype-tender"},{title:"[v1 Type] Timecard",text:"Represents a timecard for an employee. Fields id string The timecard's unique ID. employee_id represents timecard employee fields string timecard unique employee_id string employee timecard associated deleted boolean true timecard deleted merchant longer valid clockin_time string time employee clocked iso 8601 format clockout_time string time employee clocked iso 8601 format clockin_location_id string location employee clocked clockout_location_id string location employee clocked regular_seconds_worked number total number regular non-overtime seconds worked timecard overtime_seconds_worked number total number overtime seconds worked timecard doubletime_seconds_worked number total number doubletime seconds worked timecard created_at string time timecard created iso 8601 format updated_at string time timecard recently updated iso 8601 format",tags:"",url:"/api/connect/v1/#datatype-timecard"},{title:"[v1 Type] TimecardEvent",text:"Represents an event associated with a timecard, such as an employee clocking in. Fields represents event associated timecard employee clocking fields string event unique event_type timecardevent type type action performed timecard clockin api_create clockin_time string time employee clocked iso 8601 format clockout_time string time employee clocked iso 8601 format created_at string time event created iso 8601 format",tags:"",url:"/api/connect/v1/#datatype-timecardevent"},{title:"[v1 Type] BankAccount.Type",text:"A bank account's type (savings, checking, and so on). BUSINESS_CHECKING A business checking account. bank account type savings checking business_checking business checking account checking checking account investment investment account loan loan account savings savings account type bank account match value",tags:"",url:"/api/connect/v1/#enum-bankaccounttype"},{title:"[v1 Type] CashDrawerEvent.Type",text:"The type of event that caused a merchant's cash drawer to open. NO_SALE An type event caused merchant cash drawer open no_sale employee opened cash drawer performing sale operation also creates zero-value payment cash_tender_payment employee processed cash payment other_tender_payment employee processed payment tender type cash_tender_canceled_payment employee began process cash payment subsequently canceled other_tender_canceled_payment employee began process payment tender type subsequently canceled cash_tender_refund employee processed refund cash payment other_tender_refund employee processed refund payment tender type paid_in money added cash drawer non-payment reason restock paid_out money removed cash drawer non-refund reason pay delivery person",tags:"",url:"/api/connect/v1/#enum-cashdrawereventtype"},{title:"[v1 Type] CashDrawerShift.State",text:"Indicates a cash drawer shift's current state. OPEN The shift has been started by indicates cash drawer shift current state open shift started authorized employee yet ended ended shift ended authorized employee closed shift closed authorized employee meaning manually counted entered final amount cash drawer",tags:"",url:"/api/connect/v1/#enum-cashdrawershiftstate"},{title:"[v1 Type] Discount.Type",text:"Indicates whether a discount's value is fixed or entered at the time of sale. indicates whether discount value fixed entered time sale fixed discount fixed value variable_percentage discount percentage-based entered time sale variable_amount discount amount-based entered time sale",tags:"",url:"/api/connect/v1/#enum-discounttype"},{title:"[v1 Type] Employee.Status",text:"Indicates whether an employee is active or inactive. ACTIVE The employee is active. INACTIVE indicates whether employee active inactive active employee active inactive employee inactive",tags:"",url:"/api/connect/v1/#enum-employeestatus"},{title:"[v1 Type] EmployeeRole.Permission",text:"Permissions that can be granted to an employee role. If a role has been permissions granted employee role role granted particular permission employees role permission register_access_sales_history allows employees access merchant sales history square point sale register_apply_restricted_discounts allows employees apply restricted discounts sale square point sale register_change_settings allows employees change merchant square point sale settings enabling disabling tipping register_edit_item allows employees edit merchant item library square point sale item library includes item-related entities discounts fees register_issue_refunds allows employees issue refunds payments register_open_cash_drawer_outside_sale allows employees open cash drawer circumstances cash transaction register_view_summary_reports allows employees view sales summary reports square point sale",tags:"",url:"/api/connect/v1/#enum-employeerolepermission"},{title:"[v1 Type] Fee.AdjustmentType",text:"Indicates the type of adjustment a fee applies to a payment. Currently, this value indicates type adjustment fee applies payment currently value tax fees tax fee tax",tags:"",url:"/api/connect/v1/#enum-feeadjustmenttype"},{title:"[v1 Type] Fee.CalculationPhase",text:"Indicates whether a fee is calculated based on a payment's subtotal or total. FEE_SUBTOTAL_PHASE indicates whether fee calculated based payment subtotal total fee_subtotal_phase fee calculated based payment subtotal fee_total_phase fee calculated based payment total calculation phase match value",tags:"",url:"/api/connect/v1/#enum-feecalculationphase"},{title:"[v1 Type] Fee.InclusionType",text:"Indicates whether a fee applied to an item is additive or inclusive. Additive fees indicates whether fee applied item additive inclusive additive fees added top price items applied additive 10 fee applied 100 item total 110 inclusive fees assumed already included price items apply inclusive 10 fee applied 100 item total 100 actual base cost item assumed 90 91 affects amount additive fees also applied item additive fee additive fee inclusive fee inclusive fee",tags:"",url:"/api/connect/v1/#enum-feeinclusiontype"},{title:"[v1 Type] Fee.Type",text:"Indicates which sales tax classification the fee falls under. Currently relevant only to Canadian indicates sales tax classification fee falls currently relevant canadian merchants ca_gst fee goods services tax gst ca_hst fee harmonized sales tax hst ca_pei_pst fee prince edward island provincial sales tax ca_pst fee provincial sales tax pst ca_qst fee quebec sales tax qst jp_consumption_tax fee japanese consumption tax fees created japanese merchants type us_sales_tax fee sales tax fees created merchants type fee type match value",tags:"",url:"/api/connect/v1/#enum-feetype"},{title:"[v1 Type] InventoryAdjustmentType",text:"Indicates the reason for adjusting an item variation's inventory information. SALE The available quantity indicates reason adjusting item variation inventory information sale available quantity reduced due sale receive_stock available quanitity increased due increase stock manual_adjust available quantity adjusted manually due updated stock count discrepancy",tags:"",url:"/api/connect/v1/#enum-inventoryadjustmenttype"},{title:"[v1 Type] InventoryAlertType",text:"Indicates whether the item variation generates an alert when its inventory quantity goes below indicates whether item variation generates alert inventory quantity goes inventory_alert_threshold low_quantity variation generates alert quantity none variation display alert",tags:"",url:"/api/connect/v1/#enum-inventoryalerttype"},{title:"[v1 Type] Item.Color",text:"Indicates the color of an item's label color in Square Point of Sale, in indicates color item label color square point sale six-character hexadecimal format colors listed supported 9da2a6 gray color 4ab200 lighter green color 0b8000 darker green color 13b1bf lighter blue color 2952cc darker blue color a82ee5 purple color e5457a lighter red color b21212 dark red color e5bf00 gold color 593c00 brown color",tags:"",url:"/api/connect/v1/#enum-itemcolor"},{title:"[v1 Type] Item.Type",text:"Indicates an item's type. Almost all items have the type NORMAL. You cannot set indicates item type almost items type normal set item type connect api normal item normal item merchant item library gift_card item square gift card sold merchant item type match value",tags:"",url:"/api/connect/v1/#enum-itemtype"},{title:"[v1 Type] Item.Visibility",text:"Indicates whether an item is viewable from a merchant's online store. This does not indicates whether item viewable merchant online store indicate whether item available purchase online store public item viewable online store private item viewable online store",tags:"",url:"/api/connect/v1/#enum-itemvisibility"},{title:"[v1 Type] ItemVariation.PricingType",text:"Indicates whether an item variation's price is fixed or entered at the time of indicates whether item variation price fixed entered time sale fixed_pricing item variation price fixed variable_pricing item variation price entered time sale",tags:"",url:"/api/connect/v1/#enum-itemvariationpricingtype"},{title:"[v1 Type] ListOrder",text:"The chronological order in which results from a request are returned. ASC Results are chronological order results request returned asc results returned standard chronological order oldest first desc results returned reverse-chronological order newest first",tags:"",url:"/api/connect/v1/#enum-listorder"},{title:"[v1 Type] Money.CurrencyCode",text:"Indicates the currency associated with an amount of money. CAD Canadian dollars. JPY Japanese indicates currency associated amount money cad canadian dollars jpy japanese yen usd dollars aed amd aoa ars aud awg azn bam bbd bdt bgn bhd bmd bnd bob brl bsd btn bwp byr bzd cdf chf clp cny cop crc cve czk dkk dop dzd egp etb eur fjd gbp gel ghs gip gmd gtq gyd hkd hnl hrk htg huf idr ils inr isk jmd jod kes kgs khr krw kwd kyd kzt lak lbp lkr lrd ltl mad mdl mga mkd mmk mnt mop mro mur mwk mxn myr mzn nad ngn nio nok npr nzd omr pab pen pgk php pkr pln pyg qar ron rsd rub rwf sar sbd scr sek sgd sll srd std svc szl thb tjs tmt tnd try ttd twd tzs uah ugx uyu uzs vef vnd xaf xcd xof yer zar zmw",tags:"",url:"/api/connect/v1/#enum-moneycurrencycode"},{title:"[v1 Type] Merchant.BusinessType",text:"Indicates a merchant's type of business. Business type values are applicable to all countries indicates merchant type business business type values applicable countries supported square unless otherwise indicated accounting apparel_and_accessory_shops art_dealers_galleries art_design_and_photography bar_club_lounge applicable japanese businesses beauty_and_barber_shops book_stores applicable japanese businesses business_services applicable japanese businesses catering charitable_social_service_organizations applicable japanese businesses charitible_orgs cleaning_services applicable japanese businesses computer_equipment_software_maintenance_repair_services consultant contractors delivery_services applicable japanese businesses dentistry education food_stores_convenience_stores_and_specialty_markets food_truck_cart furniture_home_and_office_equipment applicable japanese businesses furniture_home_goods applicable japanese businesses hotels_and_lodging applicable japanese businesses individual_use applicable japanese businesses jewelry_and_watches applicable japanese businesses landscaping_and_horticultural_services language_schools applicable japanese businesses legal_services medical_practitioners applicable japanese businesses medical_services_and_health_practitioners membership_organizations music_and_entertainment applicable japanese businesses outdoor_markets personal_services political_organizations applicable businesses professional_services real_estate recreation_services repair_shops_and_related_services restaurants retail_shops schools_and_educational_services applicable japanese businesses sporting_goods applicable japanese businesses taxicabs_and_limousines ticket_sales applicable japanese businesses tourism applicable japanese businesses travel_tourism applicable japanese businesses veterinary_services web_dev_design",tags:"",url:"/api/connect/v1/#enum-merchantbusinesstype"},{title:"[v1 Type] Merchant.AccountType",text:"Indicates whether a merchant account is a single-location account or a business account. BUSINESS indicates whether merchant account single-location account business account business account business account location account single-location account",tags:"",url:"/api/connect/v1/#enum-merchantaccounttype"},{title:"[v1 Type] Merchant.AccountCapability",text:"Capabilities that a merchant's associated Square account might have. You can get a merchant's capabilities merchant associated square account might get merchant account capabilities retrieve mechant endpoint credit_card_processing merchant process credit cards square",tags:"",url:"/api/connect/v1/#enum-merchantaccountcapability"},{title:"[v1 Type] ModifierList.SelectionType",text:"Indicates whether more than one modifier option from a single modifier list can be indicates whether one modifier option single modifier list applied single item single one option modifier list applied given item multiple multiple options modifier list applied given item",tags:"",url:"/api/connect/v1/#enum-modifierlistselectiontype"},{title:"[v1 Type] OAuth.Permission",text:"Represents the possible permissions an application can request with the Permissions form. See Permission represents possible permissions application request permissions form see permission scope values",tags:"",url:"/api/connect/v1/#enum-oauthpermission"},{title:"[v1 Type] Order.Action",text:"An action a merchant performs on an online store order to change its state. action merchant performs online store order change state complete merchant shipped otherwise fulfilled order sets order state completed cancel merchant canceled order sets order state canceled refund merchant refunded previously completed order sets order state refunded",tags:"",url:"/api/connect/v1/#enum-orderaction"},{title:"[v1 Type] Order.State",text:"The current state of an online storer order. PENDING The order has been created current state online storer order pending order created awaiting validation square open order validated ready completed merchant completed merchant shipped otherwise fulfilled order canceled merchant canceled order act within required time period refunded merchant refunded previously completed order rejected order processed rejected square long since order created",tags:"",url:"/api/connect/v1/#enum-orderstate"},{title:"[v1 Type] OrderHistoryEntry.ActionType",
text:"The type of action previously performed on an online store order. ORDER_PLACED The buyer type action previously performed online store order order_placed buyer initiated order declined order rejected square payment_received order associated payment processed canceled merchant canceled order completed merchant shipped otherwise fulfilled order refunded merchant refunded order expired order expired",tags:"",url:"/api/connect/v1/#enum-orderhistoryentryactiontype"},{title:"[v1 Type] PaymentItemization.Type",text:"The type of purchase that a payment itemization represents. ITEM The itemization represents an type purchase payment itemization represents item itemization represents item variation merchant item library custom_amount itemization represents monetary amount associated item variation gift_card_activation itemization represents activation square gift card gift_card_reload itemization represents adding funds square gift card gift_card_unknown itemization represents unknown action performed square gift card itemization represents entity match value",tags:"",url:"/api/connect/v1/#enum-paymentitemizationtype"},{title:"[v1 Type] Refund.Type",text:"A refund's type. FULL A full refund. PARTIAL A partial refund. refund type full full refund partial partial refund",tags:"",url:"/api/connect/v1/#enum-refundtype"},{title:"[v1 Type] PageCell.Type",text:"The type of entity represented by a page cell. ITEM An item. DISCOUNT A type entity represented page cell item item discount discount category category placeholder cell one special types described pagecell placeholdertype",tags:"",url:"/api/connect/v1/#enum-pagecelltype"},{title:"[v1 Type] PageCell.PlaceholderType",text:"Indicates the behavior of a page cell with the special PLACEHOLDER object type. See indicates behavior page cell special placeholder object type see favorites pages information all_items cell presents list merchant items cell labeled items discounts_category cell presents list merchant discounts cell labeled discounts rewards_finder cell presents view selecting customer rewards cell labeled redeem rewards learn square point sale rewards",tags:"",url:"/api/connect/v1/#enum-pagecellplaceholdertype"},{title:"[v1 Type] RequestMethod",text:"The method type of an HTTP request. DELETE A DELETE request. GET A GET method type http request delete delete request get get request post post request put put request",tags:"",url:"/api/connect/v1/#enum-requestmethod"},{title:"[v1 Type] SettlementEntry.Type",text:"The type of a single entry within a settlement. The most common types are type single entry within settlement common types charge refund types uncommon extremely rare longer appearing new settlements types begin returned represent reattempting previously failed action adjustment manual adjustment applied merchant account square adjustments typically correct minor calculation errors balance_charge crediting merchant previously processed payment buyer paid existing square balance square gift card charge crediting merchant previously processed credit card payment settlement entries type free_processing crediting merchant offset processing fees merchant granted amount free processing hold_adjustment adjustment related holding funds previous payment often related chargeback similar dispute amount hold_adjustment settlement entry negative positive depending whether hold applied negative previously applied hold released positive paid_service_fee debiting merchant paid service square marketing paid_service_fee_refund refunding merchant previously paid service fee redemption_code crediting merchant code redeemed square reader purchased retail location refund debiting merchant refund applied previously processed payment returned_payout reattempting previously failed deposit square_capital_advance square capital advance paid merchant square_capital_payment debiting merchant payment toward square_capital_advance square_capital_reversed_payment reversing portion previous square_capital_payment typically response merchant-issued refund subscription_fee debiting merchant subscription fee payment subscription_fee_refund refunding merchant previously paid subscription fee type settlement entry match value incented_payment deprecated crediting merchant payment square covers part amount due value appear new settlements returned_ach_entry deprecated reattempting previously failed deposit value appear new settlements returned_square_275 deprecated reattempting previously failed square 275 payment square 275 discontinued subscription pricing model larger square merchants value appear new settlements square_275 deprecated debiting merchant square 275 payment square 275 discontinued subscription pricing model larger square merchants value appear new settlements",tags:"",url:"/api/connect/v1/#enum-settlemententrytype"},{title:"[v1 Type] Settlement.Status",text:"The current status of a settlement. Note that Square does not know when a current status settlement note square know settlement sent processing completes whether failed failed settlement failed sent settlement sent processing",tags:"",url:"/api/connect/v1/#enum-settlementstatus"},{title:"[v1 Type] Subscription.PaymentMethod",text:"The form of payment used for a merchant's subscription. CARD A credit card on form payment used merchant subscription card credit card file payout_adjustment payment withdrawn merchant bank account part standard merchant settlement process merchant used payment method match value",tags:"",url:"/api/connect/v1/#enum-subscriptionpaymentmethod"},{title:"[v1 Type] Subscription.Status",text:"The status of a merchant's subscription. ACTIVE The merchant has an active, fully paid status merchant subscription active merchant active fully paid subscription in_grace merchant automatic monthly subscription payment failed possibly due invalid payment method merchant fifteen-day grace period subscription considered active delinquent merchant subscription become inactive merchant successfully pay subscription fee end fifteen-day grace period value longer returned connect api delinquent subscriptions now returned canceled canceled merchant subscription canceled terminated merchant subscription terminated subscription status match value",tags:"",url:"/api/connect/v1/#enum-subscriptionstatus"},{title:"[v1 Type] SubscriptionFee.Status",text:"The status of a merchant's application subscription fee, such as PENDING or PAID. PENDING status merchant application subscription fee pending paid pending fee payment pending payment_failed fee payment failed usually declined otherwise invalid credit card paid fee payment succeeded canceled fee payment canceled usually merchant canceled subscription changed subscription plan fee payment status match value",tags:"",url:"/api/connect/v1/#enum-subscriptionfeestatus"},{title:"[v1 Type] Tender.CardBrand",text:"The brand of a credit card. UNKNOWN An unknown brand. VISA A Visa credit brand credit card unknown unknown brand visa visa credit card master_card mastercard credit card american_express american express credit card discover discover credit card discover_diners diners club credit card jcb jcb credit card",tags:"",url:"/api/connect/v1/#enum-tendercardbrand"},{title:"[v1 Type] Tender.EntryMethod",text:"The method with which a form of tender was entered. MANUAL The payment information method form tender entered manual payment information entered manually scanned payment information scanned via barcode square_cash payment made via square cash square_wallet payment made via square wallet swiped payment card swiped card reader web_form payment made via web form payment information obtained method match value",tags:"",url:"/api/connect/v1/#enum-tenderentrymethod"},{title:"[v1 Type] Tender.Type",text:"The type of tender used in a payment. CREDIT_CARD A credit card processed with type tender used payment credit_card credit card processed square cash cash third_party_card credit card processed card processor square value applies merchants countries square yet provide card processing no_sale sale square_wallet square wallet payment square_gift_card square gift card unknown unknown tender type form tender match value",tags:"",url:"/api/connect/v1/#enum-tendertype"},{title:"[v1 Type] TimecardEvent.Type",text:"The type of event associated with an employee timecard, such as CLOCKIN. API_CREATE The type event associated employee timecard clockin api_create timecard created request create timecard endpoint api_edit timecard edited request update timecard endpoint api_delete timecard deleted request delete timecard endpoint register_clockin employee clocked register_clockout employee clocked dashboard_supervisor_close supervisor clocked employee merchant dashboard dashboard_edit supervisor manually edited timecard merchant dashboard dashboard_delete supervisor deleted timecard merchant dashboard",tags:"",url:"/api/connect/v1/#enum-timecardeventtype"},{title:"[v1 Type] WebhookEventType",text:"The type of an event that sends a notification to an application. PAYMENT_UPDATED A type event sends notification application payment_updated payment updated created inventory_updated least one item variation inventory count updated timecard_updated employee timecard updated created",tags:"",url:"/api/connect/v1/#enum-webhookeventtype"},{title:"[v2] Client libraries",text:"Square provides client libraries for Connect V1 and V2 in a variety of programming square provides client libraries connect v1 v2 variety programming languages see client libraries full list",tags:"",url:"/api/connect/v2/#clientlibraries"},{title:"[v2] Swagger specification",text:"Version 1 and 2 of the Connect API are defined with the Swagger specification. version 1 2 connect api defined swagger specification definition available github definition simplify certain development tasks generating custom client libraries see generating client libraries tools swagger information",tags:"",url:"/api/connect/v2/#swaggerspecification"},{title:"[v2] Running Postman",text:'Postman is an app for easy RESTful API exploration. Use our "Postman Collection" to postman app easy restful api exploration postman collection try square connect endpoints read blog post setting postman configuring api credentials click run postman explore v1 v2 api collection',tags:"",url:"/api/connect/v2/#runningpostman"},{title:"[v2] Endpoint paths",text:"Connect API endpoints are hosted from the base URL https://connect.squareup.com. For example, the ListTransactions connect api endpoints hosted base url https connect squareup com example listtransactions endpoint full path https connect squareup com v2 locations location_id transactions endpoint paths include location_id parameter indicates business locations application acting behalf get business location ids listlocations endpoint",tags:"",url:"/api/connect/v2/#endpointpaths"},{title:"[v2] API versions",text:"An endpoint's API version is included in its path. Bug fixes and minor feature endpoint api version included path bug fixes minor feature additions might made endpoint behavior without advancing version number include adding optional parameters response fields prevent future compatibility issues application prepared receive response fields beyond currently returned given endpoint functionality never removed particular version endpoint field names types change recent version connect api v2 connect api applications communicate endpoints available versions",tags:"",url:"/api/connect/v2/#apiversions"},{title:"[v2] Endpoint names and return values",text:"An endpoint's name indicates the type of data it handles and the action it endpoint name indicates type data handles action performs data common actions create post creates persists entity corresponding type list get returns instances particular entity match query parameters provide retrieve get returns single instance entity matches identifier provide update put modifies existing entity matches identifier provide delete delete deletes existing entity matches identifier provide deleted entities retrieved undeleted example listtransactions endpoint returns array processed payments createcustomer endpoint creates persists customer",tags:"",url:"/api/connect/v2/#endpointnamesandreturnvalues"},{title:"[v2] Request and response headers",text:"Requests to Connect API endpoints must include the following HTTP headers: Authorization: Bearer YOUR_ACCESS_TOKEN requests connect api endpoints include following http headers authorization bearer your_access_token accept application json place your_access_token provide either application personal access token available application dashboard access token generated oauth api post put requests include one additional header content-type application json default endpoint responses provide data json response body include content-type application json header",tags:"",url:"/api/connect/v2/#requestandresponseheaders"},{title:"[v2] Providing parameters",text:"The way you provide parameters to a Connect API request depends on the HTTP way provide parameters connect api request depends http method request get delete requests get delete requests provide parameters query string append request url example provide sort_order parameter listtransactions endpoint like https connect squareup com v2 locations location_id transactions sort_order asc values query parameters url-escaped example provide value 2016-01-15t00 00 00 02 00 begin_time parameter listtransactions endpoint specify following https connect squareup com v2 locations location_id transactions begin_time 2016-01-15t00 3a00 3a00 2b02 3a00 post put requests post put requests instead provide parameters json body request example body request createcustomer endpoint looks like given_name amelia family_name earhart",tags:"",url:"/api/connect/v2/#providingparameters"},{title:"[v2] Working with monetary amounts",text:"All monetary amounts in the Connect API are represented by the Money object, which monetary amounts connect api represented money object following structure amount 400 currency_code usd important unlike version 1 connect api monetary amounts returned v2 endpoints positive v1 monetary amounts negative represent money paid merchant instead money paid merchant amount field always smallest denomination currency indicated currency_code currency_code usd dollars amount cents object shown represents 4 00 currency_code field iso 4217 format",tags:"",url:"/api/connect/v2/#workingwithmonetaryamounts"},{title:"[v2] Working with dates",text:"All representations of dates are strings in RFC 3339 format. You can provide date representations dates strings rfc 3339 format provide date strings either utc example 2016-01-15t00 00 00z offset utc indicate time zone example 2016-01-15t00 00 00-08 00 eight hours behind utc provide offset dates sure account daylight saving time correctly applicable date strings returned connect api always utc date ranges list endpoints listtransactions often accept optional date range begin_time end_time parameters also accept optional sort_order parameter indicates whether results returned chronological order oldest first reverse-chronological order newest first regardless sort_order begin_time earlier date end_time later date sort_order desc newest-first begin_time exclusive end_time inclusive sort_order asc oldest-first begin_time inclusive end_time exclusive described date range cover least one millisecond",tags:"",url:"/api/connect/v2/#workingwithdates"},{title:"[v2] Idempotency keys",text:"Certain Connect API endpoints (currently Charge and CreateRefund) require an idempotency_key string parameter. Any certain connect api endpoints currently charge createrefund require idempotency_key string parameter time want initiate new card transaction refund provide new unique value parameter virtually popular programming languages provide function generating unique strings example ruby securerandom uuid php uniqid java uuid randomuuid python uuid idempotency keys unique per business per application exceed 128 characters unsure whether particular transaction succeeded example receive response endpoint reason reattempt idempotency key without worrying creating duplicate transaction",tags:"",url:"/api/connect/v2/#idempotencykeys"},{title:"[v2] Paginating results",text:"List endpoints such as ListTransactions might paginate the results they return. This means that list endpoints listtransactions might paginate results return means instead returning results single response endpoints might return results along cursor response body links next set results send followup request endpoint providing cursor value returned previous response query parameter fetch next set results repeat process receive response without cursor",tags:"",url:"/api/connect/v2/#paginatingresults"},{title:"[v2] Handling duplicate results",text:"List endpoints might return duplicate results. Use the id attribute of the returned objects list endpoints might return duplicate results attribute returned objects identify duplicates",tags:"",url:"/api/connect/v2/#handlingduplicateresults"},{title:"[v2] Handling the enum value OTHER",text:"Some Connect API enums include the value OTHER. If you retrieve an object that connect api enums include value retrieve object currently value one fields field might different value retrieve object later date appropriate value added enum enum values besides never change retroactively",tags:"",url:"/api/connect/v2/#handlingtheenumvalueother"},{title:"[v2] Replacing application credentials",text:"You can replace your application's personal access token or application secret from the application replace application personal access token application secret application dashboard click replace token next personal access token field generate new token application click replace secret next application secret field generate new secret application replacing application credential immediately invalidates previous credential make sure update application accordingly",tags:"",url:"/api/connect/v2/#replacingapplicationcredentials"},{title:"[v2] Rate limiting",text:"If Connect API endpoints receive too many requests associated with the same application or connect api endpoints receive many requests associated application access token short time window might respond 429 many requests error occurs try request later time",tags:"",url:"/api/connect/v2/#ratelimiting"},{title:"[v2] Handling errors",text:"Connect API endpoints use HTTP protocol status codes to indicate errors. Error code values connect api endpoints http protocol status codes indicate errors error code values range 400 599 connect v2 endpoints include errors array response body errors occurred request response body following structure errors category authentication_error code unauthorized detail request authorized error array following fields category indicates high-level category error falls value never changes particular error see errorcategory possible values code indicates exact type error occurred value never changes particular error see errorcode possible values detail human-readable string will help diagnose error value change particular error field name field provided original request error pertains",tags:"",url:"/api/connect/v2/#handlingerrors"},{title:"[v2] Using OAuth",text:" ",tags:"",url:"/api/connect/v2/#usingoauth"},{title:"[v2 Endpoint] RegisterDomain",text:"POST /v2/apple-pay/domains Activates a domain for use with Web Apple Pay and Square. A post v2 apple-pay domains activates domain web apple pay square validation will performed domain apple ensure properly set apple pay enabled domain endpoint provides easy way platform developers bulk activate web apple pay square merchants using platform learn apple pay web see apple pay section embedding square payment form guide body parameters domain_name required string domain name described rfc-1034 will registered applepay response fields errors error errors occurred request status string status domain registration see registerdomainresponsestatus possible values",tags:"",url:"/api/connect/v2/#endpoint-registerdomain"},{title:"[v2 Endpoint] RetrieveCatalogObject",text:"GET /v2/catalog/object/{object_id} Returns a single CatalogItem as a CatalogObject based on the provided ID. get v2 catalog object object_id returns single catalogitem catalogobject based provided returned object includes relevant catalogitem information including catalogitemvariation children references catalogmodifierlist objects ids catalogtax objects apply required permissions items_read path parameters object_id required string object type catalogobjects retrieved query parameters include_related_objects boolean true response will include additional objects related requested object follows object field response contains catalogitem associated catalogcategory catalogtaxes catalogmodifierlists will returned related_objects field response object field response contains catalogitemvariation parent catalogitem will returned related_objects field response default value false response fields errors error set errors encountered object catalogobject catalogobjects returned related_objects catalogobject list catalogobjects referenced object object field",tags:"",url:"/api/connect/v2/#endpoint-retrievecatalogobject"},{title:"[v2 Endpoint] DeleteCatalogObject",text:"DELETE /v2/catalog/object/{object_id} Deletes a single CatalogObject based on the provided ID and returns the delete v2 catalog object object_id deletes single catalogobject based provided returns set successfully deleted ids response deletion cascading event children targeted object also deleted example deleting catalogitem will also delete catalogitemvariation children required permissions items_write path parameters object_id required string catalogobject deleted object deleted objects graph depend object will deleted well example deleting catalogitem will delete catalogitemvariations response fields errors error set errors encountered deleted_object_ids string ids catalogobjects deleted request multiple ids may returned associated objects also deleted example catalogitemvariation will deleted included field parent catalogitem deleted deleted_at string database timestamp deletion rfc 3339 format 2016-09-04t23 59 33 123z",tags:"",url:"/api/connect/v2/#endpoint-deletecatalogobject"},{title:"[v2 Endpoint] UpsertCatalogObject",text:"POST /v2/catalog/object Creates or updates the target CatalogObject. Required permissions:ITEMS_WRITE Body Parameters idempotency_key(required) string post v2 catalog object creates updates target catalogobject required permissions items_write body parameters idempotency_key required string value specify uniquely identifies request among requests common way create valid idempotency key universally unique identifier uuid unsure whether particular request successful reattempt idempotency key without worrying creating duplicate objects see idempotency keys information object required catalogobject catalogobject created updated object is_deleted field set true creating new object object either start character left blank either case will replaced server-generated response fields errors error set errors encountered catalog_object catalogobject created catalogobject id_mappings catalogidmapping mapping client server ids upsert",tags:"",url:"/api/connect/v2/#endpoint-upsertcatalogobject"},{title:"[v2 Endpoint] ListCatalog",text:"GET /v2/catalog/list Returns a list of CatalogObjects that includes all objects of a set get v2 catalog list returns list catalogobjects includes objects set desired types example catalogitem catalogtax objects catalog types parameter specified comma-separated list valid catalogobject types item item_variation modifier modifier_list category discount tax required permissions items_read query parameters cursor string pagination cursor returned previous response leave unset initial request see paginating results information types string optional case-insensitive comma-separated list object types retrieve example item item_variation category legal values taken catalogobjecttype enumeration namely item item_variation category discount tax modifier modifier_list response fields errors error set errors encountered cursor string pagination cursor used subsequent request unset final response see paginating results information objects catalogobject catalogobjects returned",tags:"",url:"/api/connect/v2/#endpoint-listcatalog"},{title:"[v2 Endpoint] BatchUpsertCatalogObjects",text:"POST /v2/catalog/batch-upsert Creates or updates up to 10,000 target objects based on the provided post v2 catalog batch-upsert creates updates 10 000 target objects based provided list objects target objects grouped batches batch inserted updated all-or-nothing manner object within batch malformed way violates database constraint entire batch containing item will disregarded however batches request may still succeed batch may contain 1 000 objects batches will processed order long total object count request items variations modifier lists discounts taxes 10 000 required permissions items_write body parameters idempotency_key required string value specify uniquely identifies request among requests common way create valid idempotency key universally unique identifier uuid unsure whether particular request successful reattempt idempotency key without worrying creating duplicate objects see idempotency keys information batches catalogobjectbatch batch catalogobjects inserted updated atomically objects within batch will inserted all-or-nothing fashion error occurs attempting insert update object within batch entire batch will rejected however error one batch will affect batches within request object updated_at field ignored replaced current timestamp is_deleted field set true modify existing object supply create new object starting ids may used create relationships object attributes objects reference example create catalogitem abc catalogitemvariation item_id attribute set abc order associate catalogitemvariation parent catalogitem prefixed ids valid within single atomic batch will replaced server-generated ids batch may contain 1 000 objects total number objects across batches single request may exceed 10 000 either limits violated error will returned objects will inserted updated response fields errors error set errors encountered objects catalogobject created catalogobjects updated_at string database timestamp update rfc 3339 format 2016-09-04t23 59 33 123z id_mappings catalogidmapping mapping client server ids upsert",tags:"",url:"/api/connect/v2/#endpoint-batchupsertcatalogobjects"},{title:"[v2 Endpoint] BatchRetrieveCatalogObjects",text:"POST /v2/catalog/batch-retrieve Returns a set of objects based on the provided ID. Each CatalogItem post v2 catalog batch-retrieve returns set objects based provided catalogitem returned set includes child information including catalogitemvariation objects references catalogmodifierlist objects ids catalogtax objects apply required permissions items_read body parameters object_ids required string ids catalogobjects retrieved include_related_objects boolean true response will include additional objects related requested objects follows objects field response contains catalogitem associated catalogcategory catalogtaxes catalogmodifierlists will returned related_objects field response objects field response contains catalogitemvariation parent catalogitem will returned related_objects field response response fields errors error set errors encountered objects catalogobject list catalogobjects returned related_objects catalogobject list catalogobjects referenced object objects field",tags:"",url:"/api/connect/v2/#endpoint-batchretrievecatalogobjects"},{title:"[v2 Endpoint] SearchCatalogObjects",text:"POST /v2/catalog/search Queries the targeted catalog using a variety of query types: CatalogQuerySortedAttribute, CatalogQueryExact, post v2 catalog search queries targeted catalog using variety query types catalogquerysortedattribute catalogqueryexact catalogqueryrange catalogquerytext catalogqueryitemsfortax catalogqueryitemsformodifierlist required permissions items_read body parameters cursor string pagination cursor returned previous response leave unset initial request see paginating results information object_types string desired set object types appear search results legal values taken catalogobjecttype enumeration namely item item_variation category discount tax modifier modifier_list include_deleted_objects boolean true deleted objects will included results deleted objects will is_deleted field set true include_related_objects boolean true response will include additional objects related requested object follows catalogitem returned object field response associated catalogcategory catalogtaxes catalogmodifierlists will included related_objects field response catalogitemvariation returned object field response parent catalogitem will included related_objects field response begin_time string return objects modified timestamp rfc 3339 format 2016-09-04t23 59 33 123z timestamp exclusive objects timestamp equal begin_time will included response query catalogquery query used filter sort results query specified entire catalog will returned limit integer limit number results returned single page limit advisory implementation may return fewer results supplied limit negative zero higher maximum limit 1 000 will ignored response fields errors error set errors encountered cursor string pagination cursor used subsequent request unset final response see paginating results information objects catalogobject catalogobjects returned related_objects catalogobject list catalogobjects referenced objects objects field",tags:"",url:"/api/connect/v2/#endpoint-searchcatalogobjects"},{title:"[v2 Endpoint] BatchDeleteCatalogObjects",text:"POST /v2/catalog/batch-delete Deletes a set of CatalogItems based on the provided list of target post v2 catalog batch-delete deletes set catalogitems based provided list target ids returns set successfully deleted ids response deletion cascading event children targeted object also deleted example deleting catalogitem will also delete catalogitemvariation children batchdeletecatalogobjects succeeds even portion targeted ids deleted response will include ids actually deleted required permissions items_write body parameters object_ids string ids catalogobjects deleted object deleted objects graph depend object will deleted well example deleting catalogitem will delete catalogitemvariations response fields errors error set errors encountered deleted_object_ids string ids catalogobjects deleted request deleted_at string database timestamp deletion rfc 3339 format 2016-09-04t23 59 33 123z",tags:"",url:"/api/connect/v2/#endpoint-batchdeletecatalogobjects"},{title:"[v2 Endpoint] UpdateItemTaxes",text:"POST /v2/catalog/update-item-taxes Updates the CatalogTax objects that apply to the targeted CatalogItem without having post v2 catalog update-item-taxes updates catalogtax objects apply targeted catalogitem without perform upsert entire item required permissions items_write body parameters item_ids required string catalogitems whose enabled disabled catalogtaxes updated taxes_to_enable string set catalogtaxes referenced enable catalogitem taxes_to_disable string set catalogtaxes referenced disable catalogitem response fields errors error set errors encountered updated_at string database timestamp update rfc 3339 format 2016-09-04t23 59 33 123z",tags:"",url:"/api/connect/v2/#endpoint-updateitemtaxes"},{title:"[v2 Endpoint] UpdateItemModifierLists",text:"POST /v2/catalog/update-item-modifier-lists Updates the CatalogModifierList objects that apply to the targeted CatalogItem without having post v2 catalog update-item-modifier-lists updates catalogmodifierlist objects apply targeted catalogitem without perform upsert entire item required permissions items_write body parameters item_ids required string catalogitems whose catalogmodifierlists updated modifier_lists_to_enable string set catalogmodifierlists referenced enable catalogitem modifier_lists_to_disable string set catalogmodifierlists referenced disable catalogitem response fields errors error set errors encountered updated_at string database timestamp update rfc 3339 format 2016-09-04t23 59 33 123z",tags:"",url:"/api/connect/v2/#endpoint-updateitemmodifierlists"},{title:"[v2 Endpoint] CatalogInfo",
text:"GET /v2/catalog/info Returns information about the Square Catalog API, such as batch size limits get v2 catalog info returns information square catalog api batch size limits batchupsertcatalogobjects required permissions items_read response fields errors error set errors encountered limits cataloginforesponselimits",tags:"",url:"/api/connect/v2/#endpoint-cataloginfo"},{title:"[v2 Endpoint] Charge",text:"POST /v2/locations/{location_id}/transactions Charges a card represented by a card nonce or a customer's card post v2 locations location_id transactions charges card represented card nonce customer card file request endpoint include either value card_nonce parameter charge card nonce generated sqpaymentform values customer_card_id customer_id parameters charge customer card file order ecommerce payment potentially qualify square chargeback protection provide values following parameters request buyer_email_addressat least one billing_address shipping_address response returned amount square processing fee might yet calculated obtain processing fee wait ten seconds call retrievetransaction see processing_fee_money field tender included transaction required permissions payments_write path parameters location_id required string location associate created transaction body parameters idempotency_key required string value specify uniquely identifies transaction among transactions created unsure whether particular transaction succeeded reattempt idempotency key without worrying double-charging buyer see idempotency keys information amount_money required money amount money charge note specify amount smallest denomination applicable currency example dollar amounts specified cents see working monetary amounts details value currency match currency associated business charging card card_nonce string nonce generated sqpaymentform represents card charge application provides nonce endpoint application generated nonce sqpaymentform otherwise nonce invalid provide value field provide value customer_card_id customer_card_id string customer card file charge provide value field provide value card_nonce provide value also provide value customer_id delay_capture boolean true request will perform auth provided card later perform either capture capturetransaction endpoint void voidtransaction endpoint default value false reference_id string optional associate transaction purposes associate transaction entity database value exceed 40 characters note string optional note associate transaction value exceed 60 characters customer_id string customer associate transaction field required provide value customer_card_id optional otherwise billing_address address buyer billing address value optional transaction ineligible chargeback protection neither parameter shipping_address provided shipping_address address buyer shipping address available value optional transaction ineligible chargeback protection neither parameter billing_address provided buyer_email_address string buyer email address available value optional transaction ineligible chargeback protection provided order_id string order associate transaction provide value amount_money value request exactly match total_money value order order_amounts field additional_recipients additionalrecipient basic primitive multi-party transaction value optional transaction facilitated split provide value amount_money value additional_recipients 90 amount_money value charge request location_id valid location app owner merchant field requires payments_write_additional_recipients oauth permission field currently supported sandbox response fields errors error errors occurred request transaction transaction created transaction",tags:"",url:"/api/connect/v2/#endpoint-charge"},{title:"[v2 Endpoint] ListTransactions",text:"GET /v2/locations/{location_id}/transactions Lists transactions for a particular location. Max results per page: 50 Required get v2 locations location_id transactions lists transactions particular location max results per page 50 required permissions payments_read path parameters location_id required string location list transactions query parameters begin_time string beginning requested reporting period rfc 3339 format see date ranges details date inclusivity exclusivity default value current time minus one year end_time string end requested reporting period rfc 3339 format see date ranges details date inclusivity exclusivity default value current time sort_order string order results listed response asc oldest first desc newest first default value desc cursor string pagination cursor returned previous call endpoint provide retrieve next set results original query see paginating results information response fields errors error errors occurred request transactions transaction array transactions match query cursor string pagination cursor retrieving next set results remain provide value cursor parameter subsequent request endpoint see paginating results information",tags:"",url:"/api/connect/v2/#endpoint-listtransactions"},{title:"[v2 Endpoint] CreateRefund",text:"POST /v2/locations/{location_id}/transactions/{transaction_id}/refund Initiates a refund for a previously charged tender. You must issue a post v2 locations location_id transactions transaction_id refund initiates refund previously charged tender issue refund within 120 days associated payment see article information refund behavior required permissions payments_write path parameters location_id required string original transaction associated location transaction_id required string original transaction includes tender refund body parameters idempotency_key required string value specify uniquely identifies refund among refunds created tender unsure whether particular refund succeeded reattempt idempotency key without worrying duplicating refund see idempotency keys information tender_id required string tender refund transaction one tenders methods payment associated refund tender separately connect api reason string description reason refund default value refund via api amount_money required money amount money refund note specify amount smallest denomination applicable currency example dollar amounts specified cents see working monetary amounts details amount exceed amount originally charged tender corresponds tender_id response fields errors error errors occurred request refund refund created refund",tags:"",url:"/api/connect/v2/#endpoint-createrefund"},{title:"[v2 Endpoint] ListRefunds",text:"GET /v2/locations/{location_id}/refunds Lists refunds for one of a business's locations. Refunds with a status get v2 locations location_id refunds lists refunds one business locations refunds status pending currently included endpoint response max results per page 50 required permissions payments_read path parameters location_id required string location list refunds query parameters begin_time string beginning requested reporting period rfc 3339 format see date ranges details date inclusivity exclusivity default value current time minus one year end_time string end requested reporting period rfc 3339 format see date ranges details date inclusivity exclusivity default value current time sort_order string order results listed response asc oldest first desc newest first default value desc cursor string pagination cursor returned previous call endpoint provide retrieve next set results original query see paginating results information response fields errors error errors occurred request refunds refund array refunds match query cursor string pagination cursor retrieving next set results remain provide value cursor parameter subsequent request endpoint see paginating results information",tags:"",url:"/api/connect/v2/#endpoint-listrefunds"},{title:"[v2 Endpoint] CaptureTransaction",text:"POST /v2/locations/{location_id}/transactions/{transaction_id}/capture Captures a transaction that was created with the Charge endpoint with a post v2 locations location_id transactions transaction_id capture captures transaction created charge endpoint delay_capture value true see delayed capture transactions information required permissions payments_write path parameters location_id required string transaction_id required string response fields errors error errors occurred request",tags:"",url:"/api/connect/v2/#endpoint-capturetransaction"},{title:"[v2 Endpoint] VoidTransaction",text:"POST /v2/locations/{location_id}/transactions/{transaction_id}/void Cancels a transaction that was created with the Charge endpoint with a post v2 locations location_id transactions transaction_id void cancels transaction created charge endpoint delay_capture value true see delayed capture transactions information required permissions payments_write path parameters location_id required string transaction_id required string response fields errors error errors occurred request",tags:"",url:"/api/connect/v2/#endpoint-voidtransaction"},{title:"[v2 Endpoint] RetrieveTransaction",text:"GET /v2/locations/{location_id}/transactions/{transaction_id} Retrieves details for a single transaction. Required permissions:PAYMENTS_READ Path Parameters location_id(required) string get v2 locations location_id transactions transaction_id retrieves details single transaction required permissions payments_read path parameters location_id required string transaction associated location transaction_id required string transaction retrieve response fields errors error errors occurred request transaction transaction requested transaction",tags:"",url:"/api/connect/v2/#endpoint-retrievetransaction"},{title:"[v2 Endpoint] ListLocations",text:"GET /v2/locations Provides the details for all of a business's locations. Most other Connect get v2 locations provides details business locations connect api endpoints required location_id path parameter field location objects returned endpoint correspond location_id parameter required permissions merchant_profile_read response fields errors error errors occurred request locations location business locations",tags:"",url:"/api/connect/v2/#endpoint-listlocations"},{title:"[v2 Endpoint] CreateCustomer",text:"POST /v2/customers Creates a new customer for a business, which can have associated cards post v2 customers creates new customer business associated cards file provide least one following values request endpoint given_namefamily_namecompany_nameemail_addressphone_number endpoint accept idempotency key accidentally create duplicate customer delete deletecustomer endpoint required permissions customers_write body parameters given_name string customer given first name family_name string customer family last name company_name string name customer company nickname string nickname customer email_address string customer email address address address customer physical address phone_number string customer phone number reference_id string optional second set associate customer entity another system note string optional note associate customer response fields errors error errors occurred request customer customer created customer",tags:"",url:"/api/connect/v2/#endpoint-createcustomer"},{title:"[v2 Endpoint] ListCustomers",text:"GET /v2/customers Lists a business's customers. Required permissions:CUSTOMERS_READ Query Parameters cursor string A pagination get v2 customers lists business customers required permissions customers_read query parameters cursor string pagination cursor returned previous call endpoint provide retrieve next set results original query see paginating results information response fields errors error errors occurred request customers customer array customer objects match query cursor string pagination cursor retrieve next set results original query endpoint value present request succeeded additional results available see paginating results information",tags:"",url:"/api/connect/v2/#endpoint-listcustomers"},{title:"[v2 Endpoint] UpdateCustomer",text:"PUT /v2/customers/{customer_id} Updates the details of an existing customer. The ID of the customer put v2 customers customer_id updates details existing customer customer may change customer merged another customer edit customer cards file endpoint make changes card file delete existing card file deletecustomercard endpoint create new one createcustomercard endpoint required permissions customers_write path parameters customer_id required string customer update body parameters given_name string customer given first name family_name string customer family last name company_name string name customer company nickname string nickname customer email_address string customer email address address address customer physical address phone_number string customer phone number reference_id string optional second set associate customer entity another system note string optional note associate customer response fields errors error errors occurred request customer customer updated customer",tags:"",url:"/api/connect/v2/#endpoint-updatecustomer"},{title:"[v2 Endpoint] RetrieveCustomer",text:"GET /v2/customers/{customer_id} Returns details for a single customer. Required permissions:CUSTOMERS_READ Path Parameters customer_id(required) string get v2 customers customer_id returns details single customer required permissions customers_read path parameters customer_id required string customer retrieve response fields errors error errors occurred request customer customer requested customer",tags:"",url:"/api/connect/v2/#endpoint-retrievecustomer"},{title:"[v2 Endpoint] DeleteCustomer",text:"DELETE /v2/customers/{customer_id} Deletes a customer from a business, along with any linked cards on delete v2 customers customer_id deletes customer business along linked cards file required permissions customers_write path parameters customer_id required string customer delete response fields errors error errors occurred request",tags:"",url:"/api/connect/v2/#endpoint-deletecustomer"},{title:"[v2 Endpoint] CreateCustomerCard",text:"POST /v2/customers/{customer_id}/cards Adds a card on file to an existing customer. In the United post v2 customers customer_id cards adds card file existing customer united states square takes care automatically updating cards file might expired since first attached customer charges calls createcustomercard idempotent multiple calls card nonce return card record created provided nonce first call required permissions customers_write path parameters customer_id required string customer link card file body parameters card_nonce required string card nonce representing credit card link customer card nonces generated sqpaymentform buyers enter card information see embedding payment form information note card nonces generated digital wallets apple pay used create customer card billing_address address address information card file postal_code field required payments canada cardholder_name string cardholder name response fields errors error errors occurred request card card created card file",tags:"",url:"/api/connect/v2/#endpoint-createcustomercard"},{title:"[v2 Endpoint] DeleteCustomerCard",text:"DELETE /v2/customers/{customer_id}/cards/{card_id} Removes a card on file from a customer. Required permissions:CUSTOMERS_WRITE Path Parameters delete v2 customers customer_id cards card_id removes card file customer required permissions customers_write path parameters customer_id required string customer card file belongs card_id required string card file delete response fields errors error errors occurred request",tags:"",url:"/api/connect/v2/#endpoint-deletecustomercard"},{title:"[v2 Endpoint] CreateCheckout",text:"POST /v2/locations/{location_id}/checkouts Creates a Checkout response that links a checkoutId and checkout_page_url that customers post v2 locations location_id checkouts creates checkout response links checkoutid checkout_page_url customers directed order provide payment information using payment processing workflow hosted connect squareup com required permissions payments_writeorders_write path parameters location_id required string business location associate checkout body parameters idempotency_key required string unique string identifies checkout among others created valid string unique every order sent square checkout given location idempotency key used avoid processing order unsure whether particular checkout created successfully reattempt idempotency key parameters without worrying creating duplicates recommend using random number string generator native language working generate strings idempotency keys see idempotency keys information order required createorderrequest order including line items checked ask_for_shipping_address boolean true square checkout will collect shipping information behalf store information transaction information square dashboard default false merchant_support_email string email address display square checkout confirmation page confirmation email buyer contact merchant value set confirmation page email will display primary email address associated merchant square account default none exists explicitly set pre_populate_buyer_email string provided buyer email pre-populated checkout page editable text field default none exists explicitly set pre_populate_shipping_address address provided buyer shipping info pre-populated checkout page editable text fields default none exists explicitly set redirect_url string url redirect checkout completed checkoutid square orderid transactionid referenceid appended url parameters example provided redirect_url http www example com order-complete successful transaction redirects customer http www example com order-complete checkoutid xxxxxx orderid xxxxxx referenceid xxxxxx transactionid xxxxxx provide redirect url square checkout will display order confirmation page behalf however square strongly recommends provide redirect url verify transaction results finalize order existing normal confirmation workflow default none exists explicitly set additional_recipients chargerequestadditionalrecipient basic primitive multi-party transaction value optional transaction facilitated split provide value amount_money value additional_recipients 90 total_money calculated square order location_id valid location app owner merchant field requires payments_write_additional_recipients oauth permission field currently supported sandbox response fields checkout checkout newly created checkout request made idempotencykey will checkout created idempotencykey errors error errors occurred request",tags:"",url:"/api/connect/v2/#endpoint-createcheckout"},{title:"[v2 Endpoint] CreateOrder",text:"POST /v2/locations/{location_id}/orders Creates an Order that can then be referenced as order_id in a post v2 locations location_id orders creates order referenced order_id request charge endpoint orders specify products purchase along discounts taxes settings apply purchase associate created order request charge endpoint provide order order_id field request modify order create need modify order instead create new order modified details learn orders api see orders api overview required permissions orders_write path parameters location_id required string business location associate order body parameters idempotency_key string value specify uniquely identifies order among orders created unsure whether particular order created successfully reattempt idempotency key without worrying creating duplicate orders see idempotency keys information reference_id string optional associate order purposes associate order entity database value exceed 40 characters line_items required createorderrequestlineitem line items associate order line item represents different product include purchase taxes createorderrequesttax taxes include order discounts createorderrequestdiscount discounts include order response fields order order newly created order errors error errors occurred request",tags:"",url:"/api/connect/v2/#endpoint-createorder"},{title:"[v2 Endpoint] BatchRetrieveOrders",text:"POST /v2/locations/{location_id}/orders/batch-retrieve Retrieves a set of Orders by their IDs. Only orders that have post v2 locations location_id orders batch-retrieve retrieves set orders ids orders successfully charged included response order ids request exist associated uncharged orders orders will included set orders response note future uncharged orders may returned endpoint required permissions orders_read path parameters location_id required string orders associated location body parameters order_ids required string ids orders retrieve maximum 100 orders retrieved per request response fields orders order requested orders will omit requested orders exist charged errors error errors occurred request",tags:"",url:"/api/connect/v2/#endpoint-batchretrieveorders"},{title:"[v2 Endpoint] ListAdditionalRecipientReceivables",text:"GET /v2/locations/{location_id}/additional-recipient-receivables Returns a list of receivables (across all possible sending locations) representing monies get v2 locations location_id additional-recipient-receivables returns list receivables across possible sending locations representing monies credited provided location another square account using additional_recipients field transaction max results per page 50 required permissions payments_read path parameters location_id required string location list additionalrecipientreceivables query parameters begin_time string beginning requested reporting period rfc 3339 format see date ranges details date inclusivity exclusivity default value current time minus one year end_time string end requested reporting period rfc 3339 format see date ranges details date inclusivity exclusivity default value current time sort_order string order results listed response asc oldest first desc newest first default value desc cursor string pagination cursor returned previous call endpoint provide retrieve next set results original query see paginating results information response fields errors error errors occurred request receivables additionalrecipientreceivable array additionalrecipientreceivables match query cursor string pagination cursor retrieving next set results remain provide value cursor parameter subsequent request endpoint see paginating results information",tags:"",url:"/api/connect/v2/#endpoint-listadditionalrecipientreceivables"},{title:"[v2 Endpoint] ListAdditionalRecipientReceivableRefunds",text:"GET /v2/locations/{location_id}/additional-recipient-receivable-refunds Returns a list of refunded transactions (across all possible originating locations) relating get v2 locations location_id additional-recipient-receivable-refunds returns list refunded transactions across possible originating locations relating monies credited provided location another square account using additional_recipients field transaction max results per page 50 required permissions payments_read path parameters location_id required string location list additionalrecipientreceivablerefunds query parameters begin_time string beginning requested reporting period rfc 3339 format see date ranges details date inclusivity exclusivity default value current time minus one year end_time string end requested reporting period rfc 3339 format see date ranges details date inclusivity exclusivity default value current time sort_order string order results listed response asc oldest first desc newest first default value desc cursor string pagination cursor returned previous call endpoint provide retrieve next set results original query see paginating results information response fields errors error errors occurred request receivable_refunds additionalrecipientreceivablerefund array additionalrecipientreceivablerefunds match query cursor string pagination cursor retrieving next set results remain provide value cursor parameter subsequent request endpoint see paginating results information",tags:"",url:"/api/connect/v2/#endpoint-listadditionalrecipientreceivablerefunds"},{title:"[v2 Type] AdditionalRecipient",text:"Represents an additional recipient (other than the merchant) receiving a portion of this tender. represents additional recipient merchant receiving portion tender fields location_id string location recipient merchant receiving portion tender description string description additional recipient amount_money money amount money distributed recipient receivable_id string unique additionalrecipientreceivable assigned server",tags:"",url:"/api/connect/v2/#type-additionalrecipient"},{title:"[v2 Type] AdditionalRecipientReceivable",text:"Represents a monetary distribution of part of a Transaction's amount for Transactions which included represents monetary distribution part transaction amount transactions included additional recipients location receivable one specified additionalrecipient fields string additional recipient receivable unique issued square payments servers transaction_id string transaction additional recipient receivable applied transaction_location_id string location created receivable location associated transaction amount_money money amount receivable will always non-negative created_at string time additional recipient receivable created rfc 3339 format refunds additionalrecipientreceivablerefund refunds receivable applied",tags:"",url:"/api/connect/v2/#type-additionalrecipientreceivable"},{title:"[v2 Type] AdditionalRecipientReceivableRefund",text:"A refund of an AdditionalRecipientReceivable. This includes the ID of the additional recipient receivable refund additionalrecipientreceivable includes additional recipient receivable associated object well reference refund created receivable refund fields string receivable refund unique issued square payments servers receivable_id string receivable refund applied refund_id string refund associated receivable refund transaction_location_id string location created receivable location associated transaction amount_money money amount refund will always non-negative created_at string time refund created rfc 3339 format",tags:"",url:"/api/connect/v2/#type-additionalrecipientreceivablerefund"},{title:"[v2 Type] Address",text:"Represents a physical address. Fields address_line_1 string The first line of the address. Fields represents physical address fields address_line_1 string first line address fields start address_line provide address specific details like street number street name building name provide less specific details like city state province country details provided fields address_line_2 string second line address address_line_3 string third line address locality string city town address sublocality string civil region within address locality sublocality_2 string civil region within address sublocality sublocality_3 string civil region within address sublocality_2 administrative_district_level_1 string civil entity within address country state administrative_district_level_2 string civil entity within address administrative_district_level_1 county administrative_district_level_3 string civil entity within address administrative_district_level_2 postal_code string address postal code country string address country iso 3166-1-alpha-2 format first_name string optional first name representing recipient last_name string optional last name representing recipient organization string optional organization name representing recipient",tags:"",url:"/api/connect/v2/#type-address"},{title:"[v2 Type] Card",text:"Represents the non-confidential details of a credit card. Fields id string The card's unique represents non-confidential details credit card fields string card unique card_brand string card brand visa see cardbrand possible values last_4 string last 4 digits card number exp_month integer month card expiration date value always 1 12 inclusive exp_year integer four-digit year card expiration date cardholder_name string cardholder name value present object represents customer card file billing_address address card billing address value present object represents customer card file fingerprint string unique string fingerprint card fingerprint based credit card number unique merchant card used multiple locations merchant will fingerprint case note fingerprint may exist old transactions",tags:"",url:"/api/connect/v2/#type-card"},{title:"[v2 Type] CatalogCategory",text:"A category to which an CatalogItem belongs in the Catalog object model. Fields name category catalogitem belongs catalog object model fields name string category name searchable",tags:"",url:"/api/connect/v2/#type-catalogcategory"},{title:"[v2 Type] CatalogDiscount",text:"A discount in the Catalog object model. Fields name string The discount's name. Searchable. discount catalog object model fields name string discount name searchable discount_type string indicates whether discount fixed amount percentage entered time sale see catalogdiscounttype possible values percentage string percentage discount string representation decimal number using decimal separator without sign value 7 5 corresponds 7 5 specify percentage 0 discount_type variable_percentage include field amount-based variable discounts amount_money money amount discount specify amount 0 discount_type variable_amount include field percentage-based variable discounts pin_required boolean indicates whether mobile staff member needs enter pin apply discount payment square point sale app label_color string color discount display label square point sale app",tags:"",url:"/api/connect/v2/#type-catalogdiscount"},{title:"[v2 Type] CatalogIdMapping",text:"A mapping between a client-supplied temporary ID and a permanent server ID. Fields client_object_id mapping client-supplied temporary permanent server fields client_object_id string client-supplied temporary prefixed new catalogobject object_id string permanent catalogobject created server",tags:"",url:"/api/connect/v2/#type-catalogidmapping"},{title:"[v2 Type] CatalogInfoResponseLimits",text:"Fields batch_upsert_max_objects_per_batch integer The maximum number of objects that may appear within a single fields batch_upsert_max_objects_per_batch integer maximum number objects may appear within single batch v2 catalog batch-upsert request batch_upsert_max_total_objects integer maximum number objects may appear across batches v2 catalog batch-upsert request batch_retrieve_max_object_ids integer maximum number object ids may appear v2 catalog batch-retrieve request search_max_page_limit integer maximum number results may returned page v2 catalog search response batch_delete_max_object_ids integer maximum number object ids may included single v2 catalog batch-delete request update_item_taxes_max_item_ids integer maximum number item ids may included single v2 catalog update-item-taxes request update_item_taxes_max_taxes_to_enable integer maximum number tax ids enabled may included single v2 catalog update-item-taxes request update_item_taxes_max_taxes_to_disable integer maximum number tax ids disabled may included single v2 catalog update-item-taxes request update_item_modifier_lists_max_item_ids integer maximum number item ids may included single v2 catalog update-item-modifier-lists request update_item_modifier_lists_max_modifier_lists_to_enable integer maximum number modifier list ids enabled may included single v2 catalog update-item-modifier-lists request update_item_modifier_lists_max_modifier_lists_to_disable integer maximum number modifier list ids disabled may included single v2 catalog update-item-modifier-lists request",tags:"",url:"/api/connect/v2/#type-cataloginforesponselimits"},{title:"[v2 Type] CatalogItem",
text:"An item (i.e., product family) in the Catalog object model. Fields name string The item product family catalog object model fields name string item name searchable description string item description searchable abbreviation string text item display label square point sale app first five characters string used searchable label_color string color item display label square point sale app available_online boolean true item added shipping orders merchant online store available_for_pickup boolean true item added pickup orders merchant online store available_electronically boolean true item added electronically fulfilled orders merchant online store category_id string item category tax_ids string set ids indicating catalogtaxes enabled item updating item taxes listed will added item catalogtaxes may also added deleted item using updateitemtaxes modifier_list_info catalogitemmodifierlistinfo set catalogitemmodifierlistinfo objects representing modifier lists apply item along overrides min max limits specific item catalogmodifierlists may also added deleted item using updateitemmodifierlists image_url string url image representing item variations catalogobject list catalogobjects containing catalogitemvariations item product_type string product type item may changed item created items product type regular may created api items product types read-only see catalogitemproducttype possible values skip_modifier_screen boolean false square point sale app will present catalogitem details screen immediately allowing merchant choose catalogmodifiers adding item cart default behavior true square point sale app will immediately add item cart pre-selected modifiers merchants edit modifiers drilling onto item details third-party clients encouraged implement similar behaviors",tags:"",url:"/api/connect/v2/#type-catalogitem"},{title:"[v2 Type] CatalogItemModifierListInfo",text:"Controls the properties of a CatalogModifierList as it applies to this CatalogItem. Fields modifier_list_id controls properties catalogmodifierlist applies catalogitem fields modifier_list_id string catalogmodifierlist controlled catalogmodifierlistinfo modifier_overrides catalogmodifieroverride set catalogmodifieroverride objects override whether given catalogmodifier enabled default min_selected_modifiers integer zero larger smallest number catalogmodifiers selected catalogmodifierlist max_selected_modifiers integer zero larger largest number catalogmodifiers selected catalogmodifierlist enabled boolean true enable catalogmodifierlist",tags:"",url:"/api/connect/v2/#type-catalogitemmodifierlistinfo"},{title:"[v2 Type] CatalogItemVariation",text:"An item variation (i.e., product) in the Catalog object model. Fields item_id string The item variation product catalog object model fields item_id string catalogitem associated item variation searchable name string item variation name searchable sku string item variation sku searchable upc string item variation upc searchable ordinal integer order item variation displayed value read-only writes ordinal item variation within parent catalogitem set according item variations position reads value guaranteed sequential unique pricing_type string indicates whether item variation price fixed determined time sale see catalogpricingtype possible values price_money money item variation price fixed pricing used location_overrides itemvariationlocationoverrides per-location price inventory overrides track_inventory boolean true inventory tracking active variation inventory_alert_type string indicates whether item variation displays alert inventory quantity less equal inventory_alert_threshold see inventoryalerttype possible values inventory_alert_threshold integer inventory quantity variation less equal value inventory_alert_type low_quantity variation displays alert merchant dashboard value always integer user_data string arbitrary user metadata associate item variation exceed 255 characters searchable service_duration integer catalogitem owns item variation type appointments_service duration service milliseconds example 30 minute appointment value 1800000 equal 30 minutes 60 seconds per minute 1000 milliseconds per second",tags:"",url:"/api/connect/v2/#type-catalogitemvariation"},{title:"[v2 Type] CatalogModifier",text:"A modifier in the Catalog object model. Fields name string The modifier's name. Searchable. modifier catalog object model fields name string modifier name searchable price_money money modifier price",tags:"",url:"/api/connect/v2/#type-catalogmodifier"},{title:"[v2 Type] CatalogModifierList",text:"A modifier list in the Catalog object model. A CatalogModifierList contains Modifiers that can modifier list catalog object model catalogmodifierlist contains modifiers applied catalogitem time sale example modifier list condiments apply hot dog catalogitem might contain catalogmodifiers ketchup mustard relish selection_type field specifies whether multiple selections modifier list allowed fields name string catalogmodifierlist name searchable selection_type string indicates whether multiple options catalogmodifierlist applied single catalogitem see catalogmodifierlistselectiontype possible values modifiers catalogobject options included catalogmodifierlist include least one catalogmodifier catalogobject type modifier contain catalogmodifier data",tags:"",url:"/api/connect/v2/#type-catalogmodifierlist"},{title:"[v2 Type] CatalogModifierOverride",text:"Fields modifier_id string The ID of the CatalogModifier whose default behavior is being overridden. fields modifier_id string catalogmodifier whose default behavior overridden on_by_default boolean true catalogmodifier selected default catalogitem",tags:"",url:"/api/connect/v2/#type-catalogmodifieroverride"},{title:"[v2 Type] CatalogObject",text:"The wrapper object for object types in the Catalog data model. The type of wrapper object object types catalog data model type particular catalogobject determined value type corresponding data field may set type item item_data will populated will contain valid catalogitem object type item_variation item_variation_data will populated will contain valid catalogitemvariation object type modifier modifier_data will populated will contain valid catalogmodifier object type modifier_list modifier_list_data will populated will contain valid catalogmodifierlist object type category category_data will populated will contain valid catalogcategory object type discount discount_data will populated will contain valid catalogdiscount object type tax tax_data will populated will contain valid catalogtax object detailed discussion catalog data model please see catalog overview fields type string type object object type expected properties expressed structured format within corresponding _data field see catalogobjecttype possible values string identifier reference object catalog new catalogobject inserted client set temporary identifier starting character objects inserted updated within request may identifier refer new object server receives new object will supply unique identifier replaces temporary identifier future references updated_at string last modification timestamp rfc 3339 format 2016-08-15t23 59 33 123z indicate utc time denoted z august 15 2016 23 59 33 123 milliseconds version integer version object updating object version supplied match version database otherwise write will rejected conflicting is_deleted boolean true object deleted database false new objects inserted deleted updated_at field will equal deletion time catalog_v1_ids catalogv1id connect v1 ids object location present differ object connect v2 field will present objects created modified legacy apis present_at_all_locations boolean true object present locations including future locations except specified absent_at_location_ids field false object present locations including future locations except specified present_at_location_ids field specified defaults true present_at_location_ids string list locations object present even present_at_all_locations false absent_at_location_ids string list locations object present even present_at_all_locations true item_data catalogitem structured data catalogitem set catalogobjects type item category_data catalogcategory structured data catalogcategory set catalogobjects type category item_variation_data catalogitemvariation structured data catalogitemvariation set catalogobjects type item_variation tax_data catalogtax structured data catalogtax set catalogobjects type tax discount_data catalogdiscount structured data catalogdiscount set catalogobjects type discount modifier_list_data catalogmodifierlist structured data catalogmodifierlist set catalogobjects type modifier_list modifier_data catalogmodifier structured data catalogmodifier set catalogobjects type modifier",tags:"",url:"/api/connect/v2/#type-catalogobject"},{title:"[v2 Type] CatalogObjectBatch",text:"A batch of CatalogObjects. Fields objects CatalogObject[] A list of CatalogObjects belonging to this batch catalogobjects fields objects catalogobject list catalogobjects belonging batch",tags:"",url:"/api/connect/v2/#type-catalogobjectbatch"},{title:"[v2 Type] CatalogQuery",text:"A query to be applied to a SearchCatalogObjectsRequest. Only one query field may be query applied searchcatalogobjectsrequest one query field may present attribute name required specified name field marked searchable structured data types desired result object type catalogitem catalogitemvariation catalogcategory catalogtax catalogdiscount catalogmodifierlist catalogmodifier example query return items may specify attribute names searchable fields catalogitem data type namely name description abbreviation fields sorted_attribute_query catalogquerysortedattribute query returns objects sorted given attribute exact_query catalogqueryexact query returns objects given string-valued attribute given case-insensitive value prefix_query catalogqueryprefix query returns objects given string-valued attribute given case-insensitive prefix range_query catalogqueryrange query returns objects given integer-valued attribute lies given range text_query catalogquerytext query returns objects whose searchable attributes contain given keywords prefixes example catalogitem contains attributes name t-shirt description small purple will matched query keywords shirt sma purp items_for_tax_query catalogqueryitemsfortax query returns catalogitems given catalogtaxes enabled items_for_modifier_list_query catalogqueryitemsformodifierlist query returns catalogitems given catalogmodifierlists enabled",tags:"",url:"/api/connect/v2/#type-catalogquery"},{title:"[v2 Type] CatalogQueryExact",text:"Fields attribute_name string The name of the attribute to be searched. attribute_value string The fields attribute_name string name attribute searched attribute_value string desired value search attribute",tags:"",url:"/api/connect/v2/#type-catalogqueryexact"},{title:"[v2 Type] CatalogQueryItemsForModifierList",text:"Fields modifier_list_ids string[] A set of CatalogModifierList IDs to be used to find associated fields modifier_list_ids string set catalogmodifierlist ids used find associated catalogitems",tags:"",url:"/api/connect/v2/#type-catalogqueryitemsformodifierlist"},{title:"[v2 Type] CatalogQueryItemsForTax",text:"Fields tax_ids string[] A set of CatalogTax IDs to be used to find associated fields tax_ids string set catalogtax ids used find associated catalogitems",tags:"",url:"/api/connect/v2/#type-catalogqueryitemsfortax"},{title:"[v2 Type] CatalogQueryPrefix",text:"Fields attribute_name string The name of the attribute to be searched. attribute_prefix string The fields attribute_name string name attribute searched attribute_prefix string desired prefix search attribute value",tags:"",url:"/api/connect/v2/#type-catalogqueryprefix"},{title:"[v2 Type] CatalogQueryRange",text:"Fields attribute_name string The name of the attribute to be searched. attribute_min_value integer The fields attribute_name string name attribute searched attribute_min_value integer desired minimum value search attribute inclusive attribute_max_value integer desired maximum value search attribute inclusive",tags:"",url:"/api/connect/v2/#type-catalogqueryrange"},{title:"[v2 Type] CatalogQuerySortedAttribute",text:"Fields attribute_name string The attribute whose value should be used as the sort key. fields attribute_name string attribute whose value used sort key initial_attribute_value string first attribute value returned query ascending sorts will return objects value greater descending sorts will return objects value less unset start beginning ascending sorts end descending sorts sort_order squareupconnectv2sortorder desired sortorder asc ascending desc descending",tags:"",url:"/api/connect/v2/#type-catalogquerysortedattribute"},{title:"[v2 Type] CatalogQueryText",text:"Fields keywords string[] A list of one, two, or three search keywords. Keywords with fields keywords string list one two three search keywords keywords fewer three characters ignored",tags:"",url:"/api/connect/v2/#type-catalogquerytext"},{title:"[v2 Type] CatalogTax",text:"A tax in the Catalog object model. Fields name string The tax's name. Searchable. tax catalog object model fields name string tax name searchable calculation_phase string whether tax calculated based payment subtotal total see taxcalculationphase possible values inclusion_type string whether tax additive inclusive see taxinclusiontype possible values percentage string percentage tax decimal form using decimal separator without sign value 7 5 corresponds 7 5 applies_to_custom_amounts boolean true fee applies custom amounts entered square point sale app associated particular catalogitem enabled boolean true tax will shown enabled square point sale app",tags:"",url:"/api/connect/v2/#type-catalogtax"},{title:"[v2 Type] CatalogV1Id",text:"An Items Connect V1 object ID along with its associated location ID. Fields catalog_v1_id items connect v1 object along associated location fields catalog_v1_id string object connect v1 different connect v2 location_id string location connect v1 associated",tags:"",url:"/api/connect/v2/#type-catalogv1id"},{title:"[v2 Type] ChargeRequestAdditionalRecipient",text:"Represents an additional recipient (other than the merchant) entitled to a portion of the represents additional recipient merchant entitled portion tender support currently limited usd cad gbp currencies fields location_id string location recipient merchant receiving portion tender description string description additional recipient amount_money money amount money distributed recipient",tags:"",url:"/api/connect/v2/#type-chargerequestadditionalrecipient"},{title:"[v2 Type] Checkout",text:"Square Checkout lets merchants accept online payments for supported payment types using a checkout square checkout lets merchants accept online payments supported payment types using checkout workflow hosted squareup com fields string generated square checkout new checkout requested checkout_page_url string url buyer browser redirected checkout completed ask_for_shipping_address boolean true square checkout will collect shipping information behalf store information transaction information square dashboard default false merchant_support_email string email address display square checkout confirmation page confirmation email buyer contact merchant value set confirmation page email will display primary email address associated merchant square account default none exists explicitly set pre_populate_buyer_email string provided buyer email pre-populated checkout page editable text field default none exists explicitly set pre_populate_shipping_address address provided buyer shipping info pre-populated checkout page editable text fields default none exists explicitly set redirect_url string url redirect checkout completed checkoutid square orderid transactionid referenceid appended url parameters example provided redirect_url http www example com order-complete successful transaction redirects customer http www example com order-complete checkoutid xxxxxx orderid xxxxxx referenceid xxxxxx transactionid xxxxxx provide redirect url square checkout will display order confirmation page behalf however square strongly recommends provide redirect url verify transaction results finalize order existing normal confirmation workflow order order order checked created_at string time checkout created rfc 3339 format additional_recipients additionalrecipient additional recipients merchant receiving portion checkout example fees assessed purchase third party integration",tags:"",url:"/api/connect/v2/#type-checkout"},{title:"[v2 Type] CreateOrderRequest",text:"Fields idempotency_key string A value you specify that uniquely identifies this order among orders fields idempotency_key string value specify uniquely identifies order among orders created unsure whether particular order created successfully reattempt idempotency key without worrying creating duplicate orders see idempotency keys information reference_id string optional associate order purposes associate order entity database value exceed 40 characters line_items createorderrequestlineitem line items associate order line item represents different product include purchase taxes createorderrequesttax taxes include order discounts createorderrequestdiscount discounts include order",tags:"",url:"/api/connect/v2/#type-createorderrequest"},{title:"[v2 Type] CreateOrderRequestDiscount",text:"Represents a discount that can apply to either a single line item or an represents discount apply either single line item entire order fields catalog_object_id string used catalog taxes catalog object exsiting catalogdiscount provide value field provide values fields hoc discount name string used hoc discounts discount name percentage string used hoc discounts percentage discount string representation decimal number value 7 25 corresponds percentage 7 25 value range 0 0 100 0 amount_money money used hoc discounts monetary amount discount",tags:"",url:"/api/connect/v2/#type-createorderrequestdiscount"},{title:"[v2 Type] CreateOrderRequestLineItem",text:"Represents a line item to include in an order. Each line item describes a represents line item include order line item describes different product purchase quantity price details line items either reference objects merchant catalog alternatively specify name price instead fields name string used hoc line items name line item value exceed 500 characters provide value field provide values catalogobjectid quantity string quantity purchase string representation number string positive integer value base_price_money money used hoc line items base price single unit line item associated variation provide value field provide value catalog_object_id variation_name string used hoc line items variation name line item value exceed 255 characters value set hoc line item default value regular used provide value field provide value catalog_object_id note string note line item value exceed 50 characters catalog_object_id string used catalog line items catalog object existing catalogitemvariation provide value field provide value name base_price_money modifiers createorderrequestmodifier used catalog line items modifiers include line item taxes createorderrequesttax taxes include line item discounts createorderrequestdiscount discounts include line item",tags:"",url:"/api/connect/v2/#type-createorderrequestlineitem"},{title:"[v2 Type] CreateOrderRequestModifier",text:"Represents a modifier applied to a single line item. Fields catalog_object_id string The catalog represents modifier applied single line item fields catalog_object_id string catalog object catalogmodifier",tags:"",url:"/api/connect/v2/#type-createorderrequestmodifier"},{title:"[v2 Type] CreateOrderRequestTax",text:"Represents a tax that can apply to either a single line item or an represents tax apply either single line item entire order fields catalog_object_id string used catalog taxes catalog object existing catalogtax provide value field provide values fields hoc tax name string used hoc taxes tax name provide value field set catalogobjectid type string used hoc taxes indicates calculation method used apply line item tax default additive see orderlineitemtaxtype possible values percentage string used hoc taxes percentage tax string representation decimal number value 7 25 corresponds percentage 7 25 value range 0 0 100 0",tags:"",url:"/api/connect/v2/#type-createorderrequesttax"},{title:"[v2 Type] Customer",text:"Represents one of a business's customers, which can have one or more cards on represents one business customers one cards file associated fields string customer unique created_at string time customer created rfc 3339 format updated_at string time customer last updated rfc 3339 format cards card non-confidential details customer cards file given_name string customer given first name family_name string customer family last name nickname string customer nickname company_name string name customer company email_address string customer email address address address customer physical address phone_number string customer phone number reference_id string second set associate customer entity another system note string note associate customer preferences customerpreferences customer preferences groups customergroupinfo groups customer belongs",tags:"",url:"/api/connect/v2/#type-customer"},{title:"[v2 Type] CustomerGroupInfo",text:"Contains some brief information about a customer group with its identifier included. Fields id contains brief information customer group identifier included fields string customer group name string name customer group",tags:"",url:"/api/connect/v2/#type-customergroupinfo"},{title:"[v2 Type] CustomerPreferences",text:"Represents a particular customer's preferences. Fields email_unsubscribed boolean The customer has unsubscribed from receiving represents particular customer preferences fields email_unsubscribed boolean customer unsubscribed receiving marketing campaign emails",tags:"",url:"/api/connect/v2/#type-customerpreferences"},{title:"[v2 Type] Device",text:"Fields id string The device's Square-issued ID. name string The device's merchant-specified name. fields string device square-issued name string device merchant-specified name",tags:"",url:"/api/connect/v2/#type-device"},{title:"[v2 Type] Error",text:"Represents an error encountered during a request to the Connect API. See Handling errors represents error encountered request connect api see handling errors information fields category string error high-level category see errorcategory possible values code string error specific code see errorcode possible values detail string human-readable description error debugging purposes field string name field provided original request error pertains",tags:"",url:"/api/connect/v2/#type-error"},{title:"[v2 Type] ItemVariationLocationOverrides",text:"Price and inventory alerting overrides for a CatalogItemVariation at a specific location. Fields location_id price inventory alerting overrides catalogitemvariation specific location fields location_id string location price_money money price catalogitemvariation given location blank variable pricing pricing_type string pricing type fixed variable catalogitemvariation given location see catalogpricingtype possible values track_inventory boolean true inventory tracking active catalogitemvariation location inventory_alert_type string indicates whether catalogitemvariation displays alert inventory quantity less equal inventory_alert_threshold see inventoryalerttype possible values inventory_alert_threshold integer inventory quantity variation less equal value inventory_alert_type low_quantity variation displays alert merchant dashboard value always integer",tags:"",url:"/api/connect/v2/#type-itemvariationlocationoverrides"},{title:"[v2 Type] Location",text:"Represents one of a business's locations. Fields id string The location's unique ID. name represents one business locations fields string location unique name string location name location names set account owner displayed dashboard location nickname address address location physical address timezone string iana timezone database identifier location timezone capabilities string indicates square features enabled location see locationcapability possible values status string location status see locationstatus possible values created_at string time location created rfc 3339 format merchant_id string identifier merchant owns location country string location country iso 3166-1-alpha-2 format see country possible values language_code string language associated location bcp 47 format currency string currency used transactions location specified iso 4217 format example currency location processing transactions united states usd see currency possible values phone_number string location phone_number business_name string location business_name shown customers example name printed customer receipts type string location type set account owner square dashboard typically used indicate whether location object represents physical space like building mall space see locationtype possible values website_url string location website set account owner square dashboard default none exists explicitly set",tags:"",url:"/api/connect/v2/#type-location"},{title:"[v2 Type] Money",text:"Represents an amount of money. Important: Unlike version 1 of the Connect API, all represents amount money important unlike version 1 connect api monetary amounts returned v2 endpoints positive v1 monetary amounts negative represent money paid merchant instead money paid merchant fields amount integer amount money smallest denomination currency indicated currency example currency usd amount cents currency string type currency iso 4217 format example currency code dollars usd see currency possible values",tags:"",url:"/api/connect/v2/#type-money"},{title:"[v2 Type] Order",text:"Contains all information related to a single order to process with Square, including line contains information related single order process square including line items specify products purchase fields string order unique value present order objects created orders api createorder endpoint location_id string merchant location order associated reference_id string client specified identifier associate entity another system order line_items orderlineitem line items included order every order least one line item total_money money total amount money collect order total_tax_money money total tax amount money collect order total_discount_money money total discount amount money collect order",tags:"",url:"/api/connect/v2/#type-order"},{title:"[v2 Type] OrderLineItem",text:"Represents a line item in an order. Each line item describes a different product represents line item order line item describes different product purchase quantity price details fields name string name line item quantity string quantity purchased string representation number note string note line item catalog_object_id string catalogitemvariation applied line item variation_name string name variation applied line item modifiers orderlineitemmodifier catalogmodifiers applied line item taxes orderlineitemtax taxes applied line item discounts orderlineitemdiscount discounts applied line item base_price_money money base price single unit line item gross_sales_money money gross sales amount money calculated item base price modifiers price quantity total_tax_money money total tax amount money collect line item total_discount_money money total discount amount money collect line item total_money money total amount money collect line item",tags:"",url:"/api/connect/v2/#type-orderlineitem"},{title:"[v2 Type] OrderLineItemDiscount",text:"Represents a discount that applies to one or more line items in an order. represents discount applies one line items order fixed-amount order-level discounts distributed across non-zero line item totals amount distributed line item relative item contribution order subtotal fields catalog_object_id string catalog object referencing catalogdiscount name string discount name type string type discount created api either fixed_percentage fixed_amount variable_ supported api order created time sale either percentage amount specified see orderlineitemdiscounttype possible values percentage string percentage tax string representation decimal number value 7 25 corresponds percentage 7 25 percentage set amount-based discount amount_money money total monetary amount applicable discount order level value order level discount line item level value line item level discount amount_money set percentage-based discount applied_money money amount discount actually applied line item represents amount money applied line item discount amount-based discount order-level value different amount_money discount distributed across line items scope string indicates level discount applies see orderlineitemdiscountscope possible values",tags:"",url:"/api/connect/v2/#type-orderlineitemdiscount"},{title:"[v2 Type] OrderLineItemModifier",text:"A CatalogModifier. Fields catalog_object_id string The catalog object id referencing CatalogModifier. name string The catalogmodifier fields catalog_object_id string catalog object referencing catalogmodifier name string name item modifier base_price_money money base price item modifier total_price_money money total price item modifier line item modifier basepricemoney multiplied line item quantity",tags:"",url:"/api/connect/v2/#type-orderlineitemmodifier"},{title:"[v2 Type] OrderLineItemTax",text:"Represents a tax that applies to one or more line items in an order. represents tax applies one line items order fields catalog_object_id string catalog object referencing catalogtax name string tax name type string indicates calculation method used apply tax see orderlineitemtaxtype possible values percentage string percentage tax string representation decimal number value 7 25 corresponds percentage 7 25 applied_money money amount money applied tax order",tags:"",url:"/api/connect/v2/#type-orderlineitemtax"},{title:"[v2 Type] Refund",text:"Represents a refund processed for a Square transaction. Fields id string The refund's unique represents refund processed square transaction fields string refund unique location_id string refund associated location transaction_id string transaction refunded tender part tender_id string refunded tender created_at string time refund created rfc 3339 format reason string reason refund issued amount_money money amount money refunded buyer status string current status refund pending approved rejected failed processing_fee_money money amount square processing fee money refunded merchant additional_recipients additionalrecipient additional recipients merchant receiving portion refund example fees assessed refund purchase third party integration",tags:"",url:"/api/connect/v2/#type-refund"},{title:"[v2 Type] Tender",text:"Represents a tender (i.e., a method of payment) used in a Square transaction. Fields represents tender method payment used square transaction fields string tender unique location_id string transaction associated location transaction_id string tender associated transaction created_at string time tender created rfc 3339 format note string optional note associated tender time payment amount_money money amount tender tip_money money tip amount tender processing_fee_money money amount square processing fees applied tender field immediately populated new transaction created usually available ten seconds customer_id string tender associated customer represents customer card file associated customer type string type tender card cash card_details tendercarddetails details card tender value present value type card cash_details tendercashdetails details cash tender value present value type cash additional_recipients additionalrecipient additional recipients merchant receiving portion tender example fees assessed purchase third party integration",tags:"",url:"/api/connect/v2/#type-tender"},{title:"[v2 Type] TenderCardDetails",text:"Represents additional details of a tender with type CARD or SQUARE_GIFT_CARD Fields status string represents additional details tender type card square_gift_card fields status string credit card payment current state authorized captured see tendercarddetailsstatus possible values card card credit card non-confidential details entry_method string method used enter card details transaction",tags:"",url:"/api/connect/v2/#type-tendercarddetails"},{title:"[v2 Type] TenderCashDetails",
text:"Represents the details of a tender with type CASH. Fields buyer_tendered_money Money The total represents details tender type cash fields buyer_tendered_money money total amount cash provided buyer change given change_back_money money amount change returned buyer",tags:"",url:"/api/connect/v2/#type-tendercashdetails"},{title:"[v2 Type] Transaction",text:"Represents a transaction processed with Square, either with the Connect API or with Square represents transaction processed square either connect api square point sale tenders field object lists methods payment used pay transaction fields string transaction unique issued square payments servers location_id string transaction associated location created_at string time transaction created rfc 3339 format tenders tender tenders used pay transaction refunds refund refunds applied tender transaction reference_id string transaction created charge endpoint value value provided reference_id parameter request endpoint otherwise set product string square product processed transaction client_id string transaction created square point sale app value generated transaction square point sale relationship transaction canonical generated square backend servers value generated bookkeeping purposes case transaction immediately completed example transaction processed offline mode currently possible connect api perform transaction lookup value shipping_address address shipping address provided request order_id string order_id identifier order associated transaction",tags:"",url:"/api/connect/v2/#type-transaction"},{title:"[v2 Type] CardBrand",text:"Indicates a credit card's brand, such as VISA. Fields OTHER_BRAND VISA MASTERCARD AMERICAN_EXPRESS DISCOVER indicates credit card brand visa fields other_brand visa mastercard american_express discover discover_diners jcb china_unionpay square_gift_card",tags:"",url:"/api/connect/v2/#type-cardbrand"},{title:"[v2 Type] CatalogDiscountType",text:"How to apply a CatalogDiscount to a CatalogItem. Fields FIXED_PERCENTAGE Apply the discount as apply catalogdiscount catalogitem fields fixed_percentage apply discount fixed percentage 5 item price fixed_amount apply discount fixed amount 1 00 item price variable_percentage apply discount variable percentage item price percentage will specified time sale variable_amount apply discount variable amount item price amount will specified time sale",tags:"",url:"/api/connect/v2/#type-catalogdiscounttype"},{title:"[v2 Type] CatalogItemProductType",text:"The type of a CatalogItem. Connect V2 only allows the creation of REGULAR items. type catalogitem connect v2 allows creation regular items fields regular ordinary item gift_card square gift card appointments_service service booked using square appointments app retail_item item associated retail vertical restaurant_item item associated restaurants vertical",tags:"",url:"/api/connect/v2/#type-catalogitemproducttype"},{title:"[v2 Type] CatalogModifierListSelectionType",text:"Indicates whether a CatalogModifierList supports multiple selections. Fields SINGLE Indicates that a CatalogModifierList allows indicates whether catalogmodifierlist supports multiple selections fields single indicates catalogmodifierlist allows single catalogmodifier selected multiple indicates catalogmodifierlist allows multiple catalogmodifier selected",tags:"",url:"/api/connect/v2/#type-catalogmodifierlistselectiontype"},{title:"[v2 Type] CatalogObjectType",text:"Possible kinds of CatalogObjects returned from the Catalog, each contaning type-specific properties in the possible kinds catalogobjects returned catalog contaning type-specific properties _data field corresponding object type fields item item corresponding catalogitem item-specific data will stored item_data field category category corresponding catalogcategory category-specific data will stored category_data field item_variation item variation corresponding catalogitemvariation item variation-specific data will stored item_variation_data field tax tax corresponding catalogtax tax-specific data will stored tax_data field discount discount corresponding catalogdiscount discount-specific data will stored discount_data field modifier_list modifier list corresponding catalogmodifierlist modifier list-specific data will stored modifier_list_data field modifier modifier corresponding catalogmodifier modifier-specific data will stored modifier_data field",tags:"",url:"/api/connect/v2/#type-catalogobjecttype"},{title:"[v2 Type] CatalogPricingType",text:"Indicates whether the price of a CatalogItemVariation should be entered manually at the time indicates whether price catalogitemvariation entered manually time sale fields fixed_pricing catalogitemvariation price fixed variable_pricing catalogitemvariation price entered time sale",tags:"",url:"/api/connect/v2/#type-catalogpricingtype"},{title:"[v2 Type] Country",text:"Indicates the country associated with another entity, such as a business. Values are in indicates country associated another entity business values iso 3166-1-alpha-2 format fields zz ae ao aq aw ax az ba bb bd bf bg bh bi bj bl bm bn bq br bs bt bv bw bz cc cd cf cg ci ck cl cm cn cr cu cv cw cx cy cz dj dk dm dz eg eh fi fj fk fm gb gd ge gf gg gi gl gm gn gp gq gr gs gt gu gw gy hk hm hn hu ie io iq je jm jo jp ke kg kh ki km kn kp kr kw ky kz la lb lc li lk lr ls lt lu ma mc md mf mg mh mk ml mm mn mp mq mr mt mv mw mx mz na ne nf ni np nr nu nz pa pe pf pg ph pk pl pm pn pr ps pt pw py qa ru rw sb sc sd sg si sj sk sl sm sr ss sv sx sy sz tc td tf tg tj tk tl tm tr tt tv tz ua um uy uz va vc vg vn vu wf ws ye yt za zm zw",tags:"",url:"/api/connect/v2/#type-country"},{title:"[v2 Type] Currency",text:"Indicates the associated currency for an amount of money. Values correspond to ISO 4217. indicates associated currency amount money values correspond iso 4217 fields unknown_currency aed afn amd ang aoa ars aud awg azn bam bbd bdt bgn bhd bif bmd bnd bob brl bsd btn bwp byr bzd cad cdf che chf chw clf clp cny cop crc cuc cup cve czk djf dkk dop dzd egp ern etb eur fjd fkp gbp gel ghs gip gmd gnf gtq gyd hkd hnl hrk htg huf idr ils inr iqd irr isk jmd jod jpy kes kgs khr kmf kpw krw kwd kyd kzt lak lbp lkr lrd lsl ltl lvl lyd mad mdl mga mkd mmk mnt mop mro mur mvr mwk mxn mxv myr mzn nad ngn nio nok npr nzd omr pab pen pgk php pkr pln pyg qar ron rsd rub rwf sar sbd scr sdg sek sgd shp sll sos srd ssp std svc syp szl thb tjs tmt tnd top try ttd twd tzs uah ugx usd usn uss uyi uyu uzs vef vnd vuv wst xaf xag xau xba xbb xbc xbd xcd xdr xof xpd xpf xpt xts xxx yer zar zmk zmw btc",tags:"",url:"/api/connect/v2/#type-currency"},{title:"[v2 Type] ErrorCategory",text:"Indicates which high-level category of error has occurred during a request to the Connect indicates high-level category error occurred request connect api fields api_error error occurred connect api authentication_error authentication error occurred commonly request missing malformed otherwise invalid authorization header invalid_request_error request invalid commonly required parameter missing provided parameter invalid value rate_limit_error application reached connect api rate limit retry request payment_method_error error occurred processing payment method commonly details payment method invalid card cvv expiration date refund_error error occurred attempting process refund",tags:"",url:"/api/connect/v2/#type-errorcategory"},{title:"[v2 Type] ErrorCode",text:"Indicates specific errors that can occur during a request to the Connect API. Fields indicates specific errors occur request connect api fields internal_server_error unauthorized access_token_expired access_token_revoked forbidden insufficient_scopes application_disabled v1_application v1_access_token card_processing_not_enabled bad_request missing_required_parameter incorrect_type invalid_time invalid_time_range invalid_value invalid_cursor unknown_query_parameter conflicting_parameters expected_json_body invalid_sort_order value_regex_mismatch value_too_short value_too_long value_too_low value_too_high value_empty array_length_too_long array_length_too_short array_empty expected_boolean expected_integer expected_float expected_string expected_object expected_array expected_base64_encoded_byte_array invalid_array_value invalid_enum_value invalid_content_type invalid_form_value one_instrument_expected no_fields_set card_expired invalid_expiration invalid_expiration_year invalid_expiration_date unsupported_card_brand unsupported_entry_method invalid_card delayed_transaction_expired delayed_transaction_canceled delayed_transaction_captured delayed_transaction_failed card_token_expired card_token_used amount_too_high unsupported_instrument_type refund_amount_invalid refund_already_pending payment_not_refundable invalid_card_data location_mismatch idempotency_key_reused unexpected_value sandbox_not_supported invalid_email_address invalid_phone_number checkout_expired card_declined verify_cvv_failure verify_avs_failure card_declined_call_issuer not_found request_timeout conflict request_entity_too_large unsupported_media_type rate_limited not_implemented service_unavailable gateway_timeout",tags:"",url:"/api/connect/v2/#type-errorcode"},{title:"[v2 Type] InventoryAlertType",text:"Indicates whether Square should alert the merchant when the inventory quantity of a CatalogItemVariation indicates whether square alert merchant inventory quantity catalogitemvariation fields none variation display alert low_quantity variation generates alert quantity",tags:"",url:"/api/connect/v2/#type-inventoryalerttype"},{title:"[v2 Type] LocationCapability",text:"Indicates payment capabilities that a business's location might or might not have enabled. Fields indicates payment capabilities business location might might enabled fields credit_card_processing location process credit cards square value present location's capabilities array location process credit cards",tags:"",url:"/api/connect/v2/#type-locationcapability"},{title:"[v2 Type] LocationStatus",text:"Indicates the location's status. Fields ACTIVE A fully operational location. The location can be indicates location status fields active fully operational location location used across square products apis inactive functionally limited location location used via square apis note strongly discourage inactive locations making api calls inactive locations will complications restrictions inactive locations increase future",tags:"",url:"/api/connect/v2/#type-locationstatus"},{title:"[v2 Type] LocationType",text:"Indicates the location's type. Fields PHYSICAL A physical location of a business. MOBILE A indicates location type fields physical physical location business mobile location without physical address example mobile food truck online store phone app",tags:"",url:"/api/connect/v2/#type-locationtype"},{title:"[v2 Type] OrderLineItemDiscountScope",text:"Indicates whether this is a line item or order-level discount. Fields OTHER_DISCOUNT_SCOPE Used for indicates whether line item order-level discount fields other_discount_scope used reporting original transaction discount scope currently supported api line_item discount applied single line item order discount applied entire order",tags:"",url:"/api/connect/v2/#type-orderlineitemdiscountscope"},{title:"[v2 Type] OrderLineItemDiscountType",text:"Indicates how the discount is applied to the associated line item or order. Fields indicates discount applied associated line item order fields unknown_discount used reporting original transaction discount type currently supported api fixed_percentage apply discount fixed percentage 5 item price fixed_amount apply discount fixed monetary value 1 00 item price variable_percentage apply discount variable percentage item price variable percentage defined register pos apps specific value assigned time purchase variable_amount apply discount variable amount item price variable amount defined square pos app specific value assigned time purchase",tags:"",url:"/api/connect/v2/#type-orderlineitemdiscounttype"},{title:"[v2 Type] OrderLineItemTaxType",text:"Indicates how the tax is applied to the associated line item or order. Fields indicates tax applied associated line item order fields unknown_tax used reporting original transaction tax type currently supported api additive tax additive tax tax amount added top price example 1 00 item 10 additive tax total cost buyer 1 10 inclusive tax inclusive tax inclusive taxes already included line item price order total example 1 00 item 10 inclusive tax pre-tax cost 0 91 91 cents 0 09 9 cents tax total cost 1 buyer",tags:"",url:"/api/connect/v2/#type-orderlineitemtaxtype"},{title:"[v2 Type] RefundStatus",text:"Indicates a refund's current status. Fields PENDING The refund is pending. APPROVED The refund indicates refund current status fields pending refund pending approved refund approved square rejected refund rejected square failed refund failed",tags:"",url:"/api/connect/v2/#type-refundstatus"},{title:"[v2 Type] RegisterDomainResponseStatus",text:"The status of domain registration. Fields PENDING The domain is added, but not verified. status domain registration fields pending domain added verified verified domain added verified used accept apple pay transactions",tags:"",url:"/api/connect/v2/#type-registerdomainresponsestatus"},{title:"[v2 Type] SortOrder",text:"The order (e.g., chronological or alphabetical) in which results from a request are returned. order chronological alphabetical results request returned fields desc results returned descending newest-first z-a order asc results returned ascending oldest-first a-z order",tags:"",url:"/api/connect/v2/#type-sortorder"},{title:"[v2 Type] TaxCalculationPhase",text:"When to calculate the taxes due on a cart. Fields TAX_SUBTOTAL_PHASE The fee is calculate taxes due cart fields tax_subtotal_phase fee calculated based payment subtotal tax_total_phase fee calculated based payment total",tags:"",url:"/api/connect/v2/#type-taxcalculationphase"},{title:"[v2 Type] TaxInclusionType",text:"Whether to the tax amount should be additional to or included in to the whether tax amount additional included catalogitem price fields additive tax additive tax tax amount added top catalogitemvariation price example 1 00 item 10 additive tax total cost buyer 1 10 inclusive tax inclusive tax tax amount included catalogitemvariation price example 1 00 item 10 inclusive tax total cost buyer 1 00 0 91 91 cents total cost item 0 09 9 cents tax",tags:"",url:"/api/connect/v2/#type-taxinclusiontype"},{title:"[v2 Type] TenderCardDetailsEntryMethod",text:"Indicates the method used to enter the card's details. Fields SWIPED The card was indicates method used enter card details fields swiped card swiped square reader square stand keyed card information keyed manually square point sale square-hosted web form emv card processed via emv square reader on_file buyer card details already file square contactless card processed via contactless nfc transaction square reader",tags:"",url:"/api/connect/v2/#type-tendercarddetailsentrymethod"},{title:"[v2 Type] TenderCardDetailsStatus",text:"Indicates the card transaction's current status. Fields AUTHORIZED The card transaction has been authorized indicates card transaction current status fields authorized card transaction authorized yet captured captured card transaction authorized subsequently captured completed voided card transaction authorized subsequently voided canceled failed card transaction failed",tags:"",url:"/api/connect/v2/#type-tendercarddetailsstatus"},{title:"[v2 Type] TenderType",text:"Indicates a tender's type. Fields CARD A credit card. CASH Cash. THIRD_PARTY_CARD A credit indicates tender type fields card credit card cash cash third_party_card credit card processed card processor square value applies merchants countries square yet provide card processing square_gift_card square gift card no_sale tender represents register opened sale event form tender match value",tags:"",url:"/api/connect/v2/#type-tendertype"},{title:"[v2 Type] TransactionProduct",text:"Indicates the Square product used to process a transaction. Fields REGISTER Square Point of indicates square product used process transaction fields register square point sale external_api square connect api billing square subscription one multiple products appointments square appointments invoices square invoices online_store square online store payroll square payroll square product match value",tags:"",url:"/api/connect/v2/#type-transactionproduct"},{title:"[Point of Sale SDK] Point of Sale SDK for iOS Overview",text:" ",tags:"",url:"/api/point-of-sale/#point-of-sale-sdk-overview"},{title:"[Point of Sale SDK] Point of Sale SDK Tender Types",text:" ",tags:"",url:"/api/point-of-sale/#register-tender-types"},{title:"[Point of Sale SDK] Point of Sale SDK Error Codes",text:" ",tags:"",url:"/api/point-of-sale/#register-error-codes"},{title:"[Point of Sale SDK Type] SCCAPIRequestTenderTypes",text:"Use these tender types when initializing an SCCAPIRequest to designate the payment methods that tender types initializing sccapirequest designate payment methods will appear square point sale enum ns_options bitmask choose number creating request sccapirequesttendertypeall allow merchant accept api-supported tender types complete payment sccapirequesttendertypecard allow merchant accept card tenders complete payment sccapirequesttendertypecash allow merchant accept tenders complete payment sccapirequesttendertypeother allow merchant accept tenders complete payment sccapirequesttendertypesquaregiftcard allow merchant accept square gift cards complete payment sccapirequesttendertypecardonfile allow merchant accept customer cards file complete payment",tags:"",url:"/api/point-of-sale/#enum-sccapirequesttendertypes"},{title:"[Point of Sale SDK Type] SCCAPIErrorCode",text:"These error codes are returned by Square Point of Sale if an error occurs error codes returned square point sale error occurs transaction belong sccapierrordomain domain sccapierrorcodeunknown unknown error occurred sccapierrorcodeclientnotauthorizedforuser point sale versions prior 4 53 require developer guide merchants oauth allowing take payments point sale api point sale 4 53 error type deprecated sccapierrorcodepaymentcanceled merchant canceled payment square point sale sccapierrorcodepayloadmissingorinvalid url sent square point sale missing invalid information sccapierrorcodeappnotloggedin merchant currently logged square point sale sccapierrorcodelocationidmismatch business location currently logged square point sale match location represented location_id provided request sccapierrorcodeusernotactivated currently logged location activated card processing sccapierrorcodecurrencymissingorinvalid currency code provided request missing invalid sccapierrorcodecurrencyunsupported currency code provided request currently supported point sale api sccapierrorcodecurrencymismatch currency code provided request match currency associated current business sccapierrorcodeamountmissingorinvalid request missing invalid amount charge sccapierrorcodeamounttoosmall request amount charge small sccapierrorcodeamounttoolarge request amount charge large sccapierrorcodeinvalidtendertype request included invalid tender type sccapierrorcodeunsupportedtendertype request included tender type currently supported point sale api sccapierrorcodecouldnotperform sccapiconnection unable perform request sccapierrorcodenonetworkconnection transaction failed device network connection sccapierrorcodeunsupportedapiversion api version specified request supported installed version square point sale sccapierrorstringinvalidversionnumber api version specified request form square point sale recognizes version numbers standard decimal form 1 3 sccapierrorstringcustomermanagementnotsupported merchant account support customer management therefore associate transactions customers sccapierrorstringinvalidcustomerid customer_id provided request correspond customer merchant customer directory",tags:"",url:"/api/point-of-sale/#enum-sccapierrorcode"},{title:"[Point of Sale SDK Type] SCCErrorCode",text:"These errors are returned by Point of Sale SDK classes during instantiation or various errors returned point sale sdk classes instantiation various method calls belong sccerrordomain domain sccerrorcodeunknown unknown error occurred sccerrorcodemissingcurrencycode currency code specified sccerrorcodeunsupportedcurrencycode unsupported currency code specified sccerrorcodemissingrequestclientid value provided clientid parameter request sccerrorcodeinvalidrequestcallbackurl invalid value provided callbackurl parameter sccerrorcodeinvalidrequestamount invalid value provided amount parameter sccerrorcodecannotperformrequest request performed sccerrorcodeunabletogeneraterequestjson sccapirequest converted valid json",tags:"",url:"/api/point-of-sale/#enum-sccerrorcode"},{title:"[OAuth] OAuth Overview",text:" ",tags:"",url:"/api/oauth/#oauth-overview"},{title:"[OAuth Endpoint] Authorize",text:"GET /oauth2/authorize You direct a merchant's web browser to this URL to present the get oauth2 authorize direct merchant web browser url present permissions form begins oauth flow form describes permissions application requesting looks like see flow step 1 request permission merchant information request parameters get delete endpoints provide request parameters query string appended request url client_id string application available application dashboard response_type optional string indicates whether want receive authorization code code access token token square response application redirect url specify code exchange authorization code access token obtain token endpoint default value code scope optional string space-separated list permissions application requesting valid permissions listed permission scope default value merchant_profile_read payments_read settlements_read bank_accounts_read locale optional string locale present permission request form provide value ascertained merchant preferred locale provide value square detects locale automatically currently supported values en-us en-ca es-us fr-ca ja-jp session boolean false square merchant log view permission request form even already valid user session default value true state optional string provide value passed along application redirect url permission request form submitted include parameter verify value help protect cross-site request forgery plan_id optional string subscription plan direct merchant sign see subscriptions overview information provide parameter value plan_id give merchant option cancel active subscription return value merchant submits permissions form square oauth server calls back request redirect_uri parameters included request url depend whether authorization succeeded authorization succeeded parameters follows response_type string value provided response_type either code token code string authorization code exchange access token obtain token endpoint parameter present specify code value response_type access_token string application access token provide token header every request connect api endpoints see request response headers format header parameter present specify token value response_type merchant_id string merchant business authorized application parameter present specify token value response_type subscription_id string merchant subscription associated authorization parameter present response_type token response_type code subscription information instead returned obtain token endpoint plan_id string subscription plan merchant signed parameter present response_type token response_type code subscription information instead returned obtain token endpoint state string value specified state original request authorization failed either merchant denied access error occurred parameters request follows error string type error occurred merchant denied application access value access_denied error_description string reason error occurred merchant denied application access value user_denied",tags:"",url:"/api/oauth/#get-authorize"},{title:"[OAuth Endpoint] Obtain Token",text:"POST /oauth2/token After a merchant authorizes your application with the permissions form, an authorization post oauth2 token merchant authorizes application permissions form authorization code sent application redirect url see implementing oauth information set redirect url exchange authorization code access token request endpoint request parameters post put endpoints provide request parameters json request body client_id string application available application dashboard client_secret string application secret available application dashboard code string authorization code exchange redirect_uri string redirect url assigned application dashboard return value json object following fields access_token string application access token provide token header every request connect api endpoints see request response headers format header token_type string value always bearer expires_at string date access_token expires iso 8601 format merchant_id string authorizing merchant business subscription_id string merchant subscription associated authorization plan_id string subscription plan merchant signed",tags:"",url:"/api/oauth/#post-token"},{title:"[OAuth Endpoint] Renew Token",text:"POST /oauth2/clients/{client_id}/access-token/renew OAuth access tokens besides your application's personal access token expire after 30 post oauth2 clients client_id access-token renew oauth access tokens besides application personal access token expire 30 days endpoint renew token expires also renew expired tokens within 15 days expiration renew access token expired 15 days instead associated merchant complete oauth flow beginning important authorization header provide endpoint following format authorization client application_secret replace application_secret application secret available application dashboard path parameters client_id string application available application dashboard request parameters post put endpoints provide request parameters json request body access_token string token want renew return value json object following format access_token your_access_token token_type bearer expires_at 2014-01-10t19 42 08z merchant_id your_merchant_id value access_token renewed access token value might different access_token provided request provide token header every request connect api endpoints see request response headers format header value expires_at indicates new access token expires iso 8601 format",tags:"",url:"/api/oauth/#post-renew"},{title:"[OAuth Endpoint] Revoke Token",text:"POST /oauth2/revoke You can use this endpoint to revoke an access token generated with post oauth2 revoke endpoint revoke access token generated oauth flow merchant one access token application endpoint revokes regardless token specify revoke merchant access token merchant active subscriptions associated application canceled immediately important unlike endpoints authorization header provide endpoint following format authorization client application_secret replace application_secret application secret available application dashboard request parameters post put endpoints provide request parameters json request body client_id string application available application dashboard access_token string access token merchant whose token want revoke provide value merchant_id provide parameter merchant_id string merchant whose token want revoke provide value access_token provide parameter return value request successful endpoint returns following object success true",tags:"",url:"/api/oauth/#post-revoke"}]},tipuesearch_weight={weight:[{url:"/articles/faq-changing-or-revoking-oauth-permissions",score:1e3},{url:"/articles/faq-charge-returns-not-found-error",score:1e3},{url:"/articles/faq-create-account",score:1e3},{url:"/articles/faq-feedback",score:1e3},{url:"/articles/faq-implementation-questions",score:1e3},{url:"/articles/faq-international-availability",score:1e3},{url:"/articles/faq-lookup-my-location-id",score:1e3},{url:"/articles/faq-multiple-merchants",score:1e3},{url:"/articles/faq-oauth-point-of-sale-api",score:1e3},{url:"/articles/faq-point-of-sale-android-version",score:1e3},{url:"/articles/faq-python-fails-to-parse-json",score:1e3},{url:"/articles/faq-sdk-paas",score:1e3},{url:"/articles/faq-supported-point-of-sale-versions",score:1e3},{url:"/articles/faq-supported-products",score:1e3}]};$(function(){initializeChartPopovers()}),window.Tracker=function(){function e(t,a,i){this._v1client=new t({applicationName:e.V1_APPLICATION_NAME,environment:i,anonymousId:a,defaultFields:e.V1_DEFAULT_FIELDS}),this._v2client=new t({applicationName:e.V2_APPLICATION_NAME,environment:i,anonymousId:a,defaultFields:{}})}function t(e){var t="";if(-1!=e.indexOf("?")){t=e.substring(1).split("&").map(function(e){var t=e.split("=");if("q"===t[0])return t[1]})}return t.join("")}return e.V1_APPLICATION_NAME="connect-documentation",e.V1_DEFAULT_FIELDS={app_version:"3.0.0"},e.V2_APPLICATION_NAME="connectv2-docs",e.prototype.trackPageLoad=function(e){var a="/searchresults.html"==e.pathname,i=a?t(e.search):"",n={};a?(n.eventName="search",n.eventValue=i):(n.eventName="pageLoad",n.eventValue=e.pathname),n.rawData={date:(new Date).toString()},this._v1client.track(n);var r=a?"search; q="+i:"";this._v2client.trackV2PageView({page_view_description:r})},e.prototype.trackLinkClick=function(e){var t=e.currentTarget.href;this._v1client.track({eventName:e.type,eventValue:t,rawData:{date:(new Date).toString(),pageX:e.pageX,pageY:e.pageY}}),this._v2client.trackV2WithDefaults({catalog_name:"page_click",page_click_action:"link-click",page_click_description:t})},e.prototype.trackButtonClick=function(e){this._v2client.trackV2WithDefaults({catalog_name:"page_click",page_click_action:"button-click",page_click_description:e})},e}(),$(function(){var e=$("#tutorial__form").data("endpoint"),t=$("#tutorial__json_request").text();TutorialWidget.initialize(e,t)});var supportedApis={Transactions:{Charge:{path:"/v2/locations/{location_id}/transactions",method:"post",category:"Transactions",parameters:["location_id","body"]},ListTransactions:{path:"/v2/locations/{location_id}/transactions",method:"get",category:"Transactions",parameters:["location_id"]},CreateRefund:{path:"/v2/locations/{location_id}/transactions/{transaction_id}/refund",method:"post",category:"Transactions",parameters:["location_id","transaction_id","body"]},ListRefunds:{path:"/v2/locations/{location_id}/refunds",method:"get",category:"Transactions",parameters:["location_id"]},CaptureTransaction:{path:"/v2/locations/{location_id}/transactions/{transaction_id}/capture",method:"post",category:"Transactions",parameters:["location_id","transaction_id"]},VoidTransaction:{path:"/v2/locations/{location_id}/transactions/{transaction_id}/void",method:"post",category:"Transactions",parameters:["location_id","transaction_id"]},RetrieveTransaction:{path:"/v2/locations/{location_id}/transactions/{transaction_id}",method:"get",category:"Transactions",parameters:["location_id","transaction_id"]}},Locations:{ListLocations:{path:"/v2/locations",method:"get",category:"Locations",parameters:[]}},Customers:{CreateCustomer:{path:"/v2/customers",method:"post",category:"Customers",parameters:["body"]},ListCustomers:{path:"/v2/customers",method:"get",category:"Customers",parameters:[]},RetrieveCustomer:{path:"/v2/customers/{customer_id}",method:"get",category:"Customers",parameters:["customer_id"]},DeleteCustomer:{path:"/v2/customers/{customer_id}",method:"delete",category:"Customers",parameters:["customer_id"]},CreateCustomerCard:{path:"/v2/customers/{customer_id}/cards",method:"post",category:"Customers",parameters:["customer_id","body"]},DeleteCustomerCard:{path:"/v2/customers/{customer_id}/cards/{card_id}",method:"delete",category:"Customers",parameters:["customer_id","card_id"]}},Checkout:{CreateCheckout:{path:"/v2/locations/{location_id}/checkouts",method:"post",category:"Checkout",parameters:["location_id","body"]}}};window.TutorialWidget=function(){function e(){E=$("#tutorial__access_token"),C=$("#tutorial__api"),S=$("#tutorial__endpoint"),A=$("#tutorial__json_request"),I=$("#tutorial__response"),R=$("#tutorial__response__body"),P=$("#tutorial__submit")}function t(){C.change(o).change(l),S.change(c).change(d).change(p).change(u).change(m),$(".tutorial__url-input .tutorial__input").blur(p),$(".tutorial__input").focus(function(){$(this).parents(".form-field").addClass("form-field--is-focused")}).blur(function(){$(this).parents(".form-field").removeClass("form-field--is-focused")}),A[0]&&A[0].addEventListener("paste",plainTextPasteListener),P.click(x)}function a(e,t){
$(e).popover({content:t,trigger:"focus",placement:"bottom",template:'<div class="popover tutorial__popover-content" role="tooltip">  <div class="arrow"></div>  <h3 class="popover-title"></h3>  <div class="popover-content"></div></div>'})}function i(){a("#tutorial__location_id-info","The ID for a merchant location defined in the Square dashboard."),a("#tutorial__transaction_id-info","The ID for a transaction previously processed by Square for the merchant."),a("#tutorial__customer_id-info","The ID for a customer whose information has been stored by the merchant."),a("#tutorial__card_id-info","The ID for customer credit card information being kept on file by the merchant.")}function n(){a("#tutorial__access_token-alert","This is not a Sandbox token. Use the access token labeled 'Sandbox Access Token' on the Square Application Dashboard"),["location_id","transaction_id","customer_id","card_id"].forEach(function(e){a("#tutorial__"+e+"-alert","This field is required")}),a("#tutorial__response-alert","The API endpoint responded with an error")}function r(){var e=Object.keys(supportedApis).map(function(e){return $("<option/>",{value:e,text:e})});C.append(e)}function s(){i(),n(),w("access_token","sandboxToken"),w("location_id","locationId"),r(),C.val(TutorialWidget.initialApiName),l(),S.val(TutorialWidget.initialEndpoint),d(),p()}function o(){T=supportedApis[C.val()]}function c(){z=T[S.val()]}function l(){S.empty();var e=Object.keys(T).map(function(e){return $("<option/>",{value:e,text:e})});S.append(e),S.change()}function d(){$(".tutorial__url-input").removeClass("tutorial__url-input--show"),z.parameters.map(function(e){return"#tutorial__"+e+"-row"}).forEach(function(e){$(e).addClass("tutorial__url-input--show")})}function p(){var e=z.path;$(".tutorial__url-input--show .tutorial__input").each(function(){var t=$(this).val();""!=t&&(e=e.replace("{"+$(this).attr("name")+"}",t))}),$("#tutorial__request-url").val(z.method.toUpperCase()+" "+e)}function u(){A.empty(),v(),z.parameters.indexOf("body")>-1?(A.attr("contenteditable",!0),A.addClass("tutorial__preformat--active"),g("tutorial__no-request-body-info--show"),S.val()==TutorialWidget.initialEndpoint&&A.text(TutorialWidget.initialExampleBody)):(A.attr("contenteditable",!1),A.removeClass("tutorial__preformat--active"),$(".tutorial__no-request-body-info").addClass("tutorial__no-request-body-info--show"))}function m(){R.empty()}function g(e){$("."+e).removeClass(e)}function f(){g("form-field--is-invalid"),g("tutorial__alert--show"),g("tutorial__info-icon--hide")}function y(e){e.addClass("form-field--is-invalid"),e.find(".tutorial__info-icon").addClass("tutorial__info-icon--hide"),e.find(".tutorial__alert").addClass("tutorial__alert--show")}function h(){I.addClass("tutorial__json--response--contains-error"),$("#tutorial__response-legend").addClass("tutorial__legend--invalid"),$("#tutorial__response-alert").addClass("tutorial__alert--show")}function v(){I.removeClass("tutorial__json--response--contains-error"),$("#tutorial__response-legend").removeClass("tutorial__legend--invalid"),$("#tutorial__response-alert").removeClass("tutorial__alert--show")}function b(e){return""===e.val()}function _(e){return 0===e.indexOf("sandbox-")||0===e.indexOf("sqdemo-")}function q(){f();var e=$("#tutorial__access_token-row");$(".tutorial__url-input--show").each(function(){b($(this).find(".tutorial__input"))&&y($(this))}),_(E.val())||(e.addClass("form-field--is-invalid"),$("#tutorial__access_token-alert").addClass("tutorial__alert--show"))}function w(e,t){try{var a=localStorage.getItem(t)}catch(e){return}$("#tutorial__"+e).val(a)}function k(e,t){try{localStorage.setItem(e,t)}catch(e){return}}function x(e){e.preventDefault(),v(),m();var t=E.val();""!==t&&k("sandboxToken",t);var a=S.val(),i=A.text(),n=$("#tutorial__location_id").val();""!==n&&k("locationId",n);var r=$("#tutorial__transaction_id").val(),s=$("#tutorial__customer_id").val(),o=$("#tutorial__card_id").val(),c={api_name:C.val(),endpoint_name:a,request_url:$("#tutorial__request-url").val(),sandbox_token:t};if(q(),$(".form-field--is-invalid").length>0){var l=$.map($(".form-field--is-invalid"),function(e){return e.id});return c.error_code="FORM_ERROR",c.error_category="FORM_ERROR",c.error_detail="Invalid form fields: "+l,void j(c)}$.ajax({type:"POST",url:"/api_tutorial",async:!0,data:{access_token:t,endpoint:a,body:i,location_id:n,transaction_id:r,customer_id:s,card_id:o},beforeSend:function(){P.addClass("button--loading button--loading--is-active")},success:function(e){c.response_code="200";var t=e.api_error;if(t){h(),e=JSON.parse(t);var a=e.errors[0];c.error_code=a.code,c.error_category=a.category,c.error_detail=a.detail}var i=JSON.stringify(e,null,2);R.text(i)},error:function(e){c.response_code=e.status.toString(),R.text("Tutorial widget failed to get response for endpoint: "+a)},complete:function(){P.removeClass("button--loading button--loading--is-active"),j(c)}})}function j(e){tracker._v2client.trackV2WithDefaults({catalog_name:"api_tutorial_request",api_tutorial_request_api_name:e.api_name,api_tutorial_request_endpoint_name:e.endpoint_name,api_tutorial_request_request_url:e.request_url,api_tutorial_request_response_code:e.response_code,api_tutorial_request_sandbox_token:e.sandbox_token,api_tutorial_request_error_category:e.error_category,api_tutorial_request_error_code:e.error_code,api_tutorial_request_error_details:e.error_detail})}var T,z,E,C,S,A,I,R,P;return{initialize:function(a,i){a||(a="Charge"),Object.keys(supportedApis).some(function(e){if(supportedApis[e][a])return TutorialWidget.initialApiName=e,TutorialWidget.initialEndpoint=a,!0}),TutorialWidget.initialExampleBody=i,T=supportedApis[TutorialWidget.initialApiName],z=T[TutorialWidget.initialEndpoint],e(),s(),t()}}}();